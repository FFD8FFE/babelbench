{"id": 0, "question": "Calculate the mean fare paid by the passengers.", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean fare using Python's built-in statistics module or appropriate statistical method in pandas. Rounding off the answer to two decimal places.", "format": "@mean_fare[mean_fare_value] where \"mean_fare_value\" is a floating-point number rounded to two decimal places.", "file_name": "test_ave.csv"}
{"id": 5, "question": "Generate a new feature called \"FamilySize\" by summing the \"SibSp\" and \"Parch\" columns. Then, calculate the Pearson correlation coefficient (r) between the \"FamilySize\" and \"Fare\" columns.", "concepts": ["Feature Engineering", "Correlation Analysis"], "constraints": "Create a new column 'FamilySize' that is the sum of 'SibSp' and 'Parch' for each row.\nCalculate the Pearson correlation coefficient between 'FamilySize' and 'Fare'\nDo not perform any further data cleaning or preprocessing steps before calculating the correlation.", "format": "@correlation_coefficient[r_value]\nwhere \"r_value\" is the Pearson correlation coefficient between 'FamilySize' and 'Fare', a number between -1 and 1, rounded to two decimal places.", "file_name": "test_ave.csv"}
{"id": 6, "question": "Create a new column called \"AgeGroup\" that categorizes the passengers into four age groups: 'Child' (0-12 years old), 'Teenager' (13-19 years old), 'Adult' (20-59 years old), and 'Elderly' (60 years old and above). Then, calculate the mean fare for each age group.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Make sure to round the mean fare of each group to 2 decimal places.", "format": "@mean_fare_child[mean_fare], @mean_fare_teenager[mean_fare], @mean_fare_adult[mean_fare], @mean_fare_elderly[mean_fare], where \"mean_fare\" is a float number rounded to 2 decimal places.", "file_name": "test_ave.csv"}
{"id": 7, "question": "Apply the linear regression algorithm from the sklearn library to predict whether a passenger survived or not based on the features 'Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', and 'Embarked'. Encode 'Sex' and 'Embarked' to numerical values before applying the model. Split the dataset into a training set (80%) and a testing set (20%), train the model on the training set, and evaluate its performance on the testing set using the accuracy score. Ensure that the train_test_split function's random_state parameter is set to 42 for consistency.", "concepts": ["Machine Learning"], "constraints": "Use one-hot encoding for the 'Sex' and 'Embarked' features. Use the \"linear regression\" model provided by the sklearn library in Python.", "format": "@prediction_accuracy[accuracy], where \"accuracy\" is a float number rounded to 2 decimal places and has a range of 0.0 to 1.0.", "file_name": "test_ave.csv"}
{"id": 8, "question": "Perform a distribution analysis on the 'Fare' column for each passenger class ('Pclass') separately. Calculate the mean, median, and standard deviation of the fare for each class. Interpret the results in terms of the different passenger classes.", "concepts": ["Distribution Analysis", "Summary Statistics"], "constraints": "Keep all numerical values rounded to 2 decimal points. The population standard deviation should be calculated.", "format": "@mean_fare_class1[mean_fare], @median_fare_class1[median_fare], @std_dev_fare_class1[std_dev], @mean_fare_class2[mean_fare], @median_fare_class2[median_fare], @std_dev_fare_class2[std_dev], @mean_fare_class3[mean_fare], @median_fare_class3[median_fare], @std_dev_fare_class3[std_dev], where \"mean_fare\", \"median_fare\", and \"std_dev\" are statistical measures in float format rounded to 2 decimal places.", "file_name": "test_ave.csv"}
{"id": 9, "question": "Calculate the mean value of the \"Close Price\" column.", "concepts": ["Summary Statistics"], "constraints": "Use the built-in Python (numpy or pandas) to calculate the mean. Do not use any pre-built packages or libraries for mean calculation other than numpy or pandas. The calculation should be done on the whole \"Close Price\" column. Values in this column should not be rounded or changed in any way before the calculation.", "format": "@mean_close_price[mean_value], where \"mean_value\" is a float number rounded to two decimal places. This value should be between the highest and lowest \"Close Price\" given in the dataset.", "file_name": "GODREJIND.csv"}
{"id": 10, "question": "Check if the \"Total Traded Quantity\" column adheres to a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Use Shapiro-Wilk test from scipy.stats module to check for normality. In this test, the null hypothesis is that the data was drawn from a normal distribution. An alpha level of 0.05 (5%) should be taken as the significance level. If the p-value is less than the alpha level, the null hypothesis is rejected and the data does not follow a normal distribution. If the p-value is greater than the alpha level, the null hypothesis is not rejected and the data may follow a normal distribution.", "format": "@is_normal[response], where \"response\" is a string that takes the value \"yes\" if the data follows a normal distribution, and \"no\" if it does not.", "file_name": "GODREJIND.csv"}
{"id": 11, "question": "Calculate the correlation coefficient between the \"High Price\" column and the \"Low Price\" column.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between \"High Price\" and \"Low Price\". Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. Consider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5. Consider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.5. If the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value] @p_value[p_value] @relationship_type[relationship_type], where \"r_value\" is a number between -1 and 1, rounded to two decimal places. \"p_value\" is a number between 0 and 1, rounded to four decimal places. \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "GODREJIND.csv"}
{"id": 14, "question": "Create a new feature called \"Price Range\" which represents the difference between the \"High Price\" and \"Low Price\" for each row. Calculate the mean, median, and standard deviation of this new feature.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Make sure to use the correct columns for calculating the \"Price Range\". All calculations should be performed up to two decimal places.", "format": "@price_range_mean[mean]: The mean should be a single real number rounded to two decimal places. @price_range_median[median]: The median should be a single real number rounded to two decimal places. @price_range_std_dev[std_dev]: The standard deviation should be a single real number rounded to two decimal places.", "file_name": "GODREJIND.csv"}
{"id": 18, "question": "Calculate the mean and standard deviation of the \"Mar.2019\" column.", "concepts": ["Summary Statistics"], "constraints": "Outliers are to be pruned via the interquartile range method before calculating the mean and standard deviation. Handle missing values by using listwise deletion method. Report the measures rounded to two decimal places.", "format": "@mean_mar_2019[mean] @sd_mar_2019[sd], where \"mean\" and \"sd\" are numbers, rounded to two decimal places.", "file_name": "unemployement_industry.csv"}
{"id": 19, "question": "Check if the distribution of the \"Mar.2020\" column adheres to a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Assume a normal distribution if skewness is between -0.5 and 0.5. Use the Fisher-Pearson coefficient of skewness. Round results to two decimal places.", "format": "@is_normal[answer], where \"answer\" is a string value which can either be \"Yes\" or \"No\", depending on whether the skewness lies within the specified boundaries.", "file_name": "unemployement_industry.csv"}
{"id": 21, "question": "Identify and list the top 5 industries in terms of the highest percentage increase in employment from March 2019 to March 2020.}{Summary Statistics, Distribution Analysis}\n\\Constraints{{\nUse the formula (Mar.2020 - Mar.2019)/Mar.2019 * 100% to calculate the percentage increase.\nIf a company\u2019s workers number in Mar.2019 is 0, exclude it from the ranking.\nSort the industries in descending order based on the calculated percentage increase.\nReturn only the top 5 entries.\nIgnore missing values when performing calculations.}}\n\\Format{{\n@top1_industry[Industry_name]\n@top2_industry[Industry_name]\n@top3_industry[Industry_name]\n@top4_industry[Industry_name]\n@top5_industry[Industry_name]\nWhere \"Industry_name\" is a string representing the name of the industry.}}\n\n\\Question{Perform outlier detection on the \"Total Mar.2020\" column and identify any outliers using the Z-score method.}{Outlier Detection}\n\\Constraints{{\nConsider an entry as an outlier if its Z-score is more than 3 or less than -3.\nIgnore missing values when performing calculations.\nConvert the values in the \"Total Mar.2020\" column to numeric before performing calculations.\nAn outlier refers to the 'Industry and class of worker' for which the total number of workers in Mar.2020 is an outlier.}}\n\\Format{{\n@outliers[outlier1, outlier2, ..., outliern]\nwhere \"outlier1, outlier2, ..., outliern\" is a list of strings, each string represents the name of an industry that is considered an outlier. Empty list is possible if there are no outliers.}}\n\n\\Question{Utilize feature engineering techniques to create a new column called \"Employment Change\" that represents the difference between \"Total Mar.2020\" and \"Total Mar.2019\". Then, calculate the mean and standard deviation of the \"Employment Change\" column.}{Feature Engineering, Summary Statistics}\n\\Constraints{{\nSubtract the values in the \"Total Mar.2019\" column from the corresponding values in the \"Total Mar.2020\" column to generate the \"Employment Change\".\nIgnore missing values when performing calculations.\nConvert the values in the \"Total Mar.2019\" and \"Total Mar.2020\" columns to numeric before performing calculations.\nUse the round method to two decimal places for the mean and standard deviation.\n}}\n\\Format{{\n@mean_change_value[mean_value]\n@std_dev_change_value[std_value]\nwhere \"mean_value\" and \"std_value\" are real numbers, rounded to two decimal places.}}\n\n\n\\Question{Investigate the relationship between the \"Mar.2019\" and \"Mar.2020\" columns using a scatter plot. Additionally, calculate the Pearson correlation coefficient between these two columns.", "concepts": ["Distribution Analysis", "Correlation Analysis"], "constraints": "Only use the Pearson correlation method to calculate the relationship between the \"Mar.2019\" and \"Mar.2020\" columns. Exclude the rows with missing data while calculating the correlation.", "format": "@Pearson_Correlation_Coefficient[correlation], where \"correlation\" is a number between -1 and 1 rounded to two decimal places.", "file_name": "unemployement_industry.csv"}
{"id": 23, "question": "Apply machine learning techniques to predict the employment level in March 2020 based on the data from March 2019. Split the dataset into a 70-30 split for training and testing sets, train a simple linear regression model on the training set, and evaluate its performance on the testing set using Mean Squared Error as the evaluation metric.", "concepts": ["Machine Learning", "Summary Statistics"], "constraints": "Split the dataset with a 70-30 split for training and testing sets with a random seed of 42. Use a simple linear regression model for training and evaluate the model's performance by calculating the Mean Squared Error.", "format": "@Mean_Squared_Error[MSE], where \"MSE\" is a number rounded to two decimal places.", "file_name": "unemployement_industry.csv"}
{"id": 24, "question": "Calculate the mean age of the individuals in the dataset.", "concepts": ["Summary Statistics"], "constraints": "Ignore rows with missing values in the age column. Use Python's built-in function to calculate the mean.", "format": "@mean_age[value] where \"value\" is a number between 0 and 100, rounded to two decimal places.", "file_name": "insurance.csv"}
{"id": 25, "question": "Check if the distribution of BMI values in the dataset follows a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Consider the distribution as normal if the absolute value of skewness is less than 0.5. Calculate skewness using Python's built-in function.", "format": "@bmi_distribution[status] where \"status\" is a string that can either be \"normal\" or \"not_normal\", based on the conditions specified in the constraints.", "file_name": "insurance.csv"}
{"id": 26, "question": "Calculate the correlation coefficient between the charges incurred by individuals and the number of children they have.", "concepts": ["Correlation Analysis"], "constraints": "Ignore rows with missing values in charges and children columns. Calculate the Pearson correlation coefficient.", "format": "@correlation_coefficient[value] where \"value\" is a number between -1 and 1, rounded to two decimal places.", "file_name": "insurance.csv"}
{"id": 27, "question": "Identify the outliers in the charges incurred by individuals using the Z-score method.", "concepts": ["Outlier Detection"], "constraints": "Apply the Z-score method for outlier detection using the 1.5xIQR rule. Consider any value that falls below Q1 - 1.5 * IQR or above Q3 + 1.5 * IQR as an outlier. Report the total number of outliers, and the mean and median charges of these identified outliers.", "format": "@total_outliers[total_outliers] \n@mean_charges_outliers[mean_charges_outliers] \n@median_charges_outliers[median_charges_outliers] \nwhere \"total_outliers\" is an integer, \"mean_charges_outliers\" and \"median_charges_outliers\" are floating-point numbers rounded to two decimal places.", "file_name": "insurance.csv"}
{"id": 28, "question": "Perform comprehensive data preprocessing on the dataset, including cleaning, transformation, and handling of missing values.", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "Handle the missing values in the 'age', 'sex', and 'region' columns by removing the corresponding rows. Transform the 'sex' and 'smoker' columns to binary format (0 and 1). Normalize 'age', 'bmi', 'children', and 'charges' columns. Report the mean of each column after the preprocessing.", "format": "@mean_age[mean_age]\n@mean_sex[mean_sex]\n@mean_bmi[mean_bmi]\n@mean_children[mean_children]\n@mean_smoker[mean_smoker]\n@mean_region[mean_region]\n@mean_charges[mean_charges]\nwhere \"mean_xxx\" are all floating-point numbers rounded to four decimal places.", "file_name": "insurance.csv"}
{"id": 29, "question": "Generate a new feature called \"bmi_category\" based on the BMI values, where individuals with BMI less than 18.5 are categorized as \"underweight\", BMI between 18.5 and 24.9 as \"normal weight\", BMI between 25.0 and 29.9 as \"overweight\", and BMI greater than or equal to 30.0 as \"obese\".", "concepts": ["Feature Engineering"], "constraints": "Create a new column 'bmi_category' based on the conditions mentioned in the question. Calculate the percentages of each category (\"underweight\", \"normal weight\", \"overweight\", \"obese\") in the total dataset.", "format": "@percentage_underweight[percentage_underweight]\n@percentage_normal_weight[percentage_normal_weight]\n@percentage_overweight[percentage_overweight]\n@percentage_obese[percentage_obese]\nwhere \"percentage_xxx\" are all floating-point numbers between 0 and 100, rounded to two decimal places.", "file_name": "insurance.csv"}
{"id": 30, "question": "Create a linear regression machine learning model using the Scikit-learn library to predict the medical charges based on the age and BMI of individuals. Evaluate the performance of the model using the Root Mean Square Error (RMSE) evaluation metric only.", "concepts": ["Machine Learning", "Feature Engineering"], "constraints": "Use the linear regression model available in the Scikit-Learn library. Split the data into training and testing sets with 80% of the data used for training and 20% used for testing. Use a random state of 42 for the split. The predictor variables are 'age' and 'bmi', and the target variable is 'charges'. Implement RMSE for the model evaluation. Ignore any row with missing values present in these three columns for this analysis.", "format": "@model_rmse[RMSE_value], where RMSE value is a positive number rounded to two decimal places.", "file_name": "insurance.csv"}
{"id": 32, "question": "Calculate the mean and standard deviation of the \"importance.score\" column.", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean and standard deviation to two decimal places for the \"importance.score\" column. Ignore any null or missing values in the calculations. The calculations are to be done using standard statistical methods without applying any transformations or filters to the data.", "format": "@importance_score_mean[mean] @importance_score_std[std_dev] where \"mean\" and \"std_dev\" are non-negative numbers rounded to two decimal places.", "file_name": "imp.score.ldlr.metabolome.csv"}
{"id": 33, "question": "Is the \"row m/z\" column normally distributed?", "concepts": ["Distribution Analysis"], "constraints": "Use the Kolmogorov-Smirnov test to assess the normality of the \"row m/z\" column. Consider the distribution to be normal if the Kolmogorov-Smirnov test's p-value is greater than or equal to 0.05. Use a significance level (alpha) of 0.05. If the p-value is greater than or equal to 0.05, report that the data is normally distributed. If not, report that the data is not normally distributed. Ignore any null or missing values in performing the test.", "format": "@ks_test_p_value[p_value] @normality_decision[decision] where \"p_value\" is a number between 0 and 1, rounded to four decimal places, and \"decision\" is a string with either of the exact values: \"normally distributed\" or \"not normally distributed\".", "file_name": "imp.score.ldlr.metabolome.csv"}
{"id": 34, "question": "Is there a correlation between the \"row retention time\" and \"importance.score\" columns?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between \"row retention time\" and \"importance.score\". Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. Consider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5. Consider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.5. If the p-value is greater than or equal to 0.05, report that there is no significant correlation. Ignore any null or missing values in performing the correlation test.", "format": "@correlation_coefficient[r_value] @p_value[p_value] @relationship_type[relationship_type] where \"r_value\" is a number between -1 and 1, rounded to two decimal places. \"p_value\" is a number between 0 and 1, rounded to four decimal places. \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "imp.score.ldlr.metabolome.csv"}
{"id": 35, "question": "Identify and remove any outliers in the \"row retention time\" column using the Z-score method with a Z-score threshold of 3. Provide the number of removed outliers.", "concepts": ["Outlier Detection", "Comprehensive Data Preprocessing"], "constraints": "Use the Z-score method to identify outliers in the \"row retention time\" column. Any data point with a Z-score greater than 3 or less than -3 is considered an outlier and should be removed.", "format": "@removed_outliers_count[count] where \"count\" is a non-negative integer indicating the count of removed outliers.", "file_name": "imp.score.ldlr.metabolome.csv"}
{"id": 36, "question": "Create a new feature called \"row ID squared\" by squaring the values in the \"row ID\" column. Calculate the mean and standard deviation of this new feature and provide them as rounded up to two decimal places.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Create a new feature \"row ID squared\" by squaring the integer values in the \"row ID\" column. Compute the mean and standard deviation of this new feature, rounding both values to two decimal places.", "format": "@mean_value[mean], @std_dev[std_dev] where \"mean\" and \"std_dev\" are floating point numbers rounded up to two decimal places.", "file_name": "imp.score.ldlr.metabolome.csv"}
{"id": 37, "question": "Using machine learning techniques, train a regression model to predict the \"importance.score\" based on the \"row m/z\" and \"row retention time\" columns. Use the simple linear regression method and evaluate the model by computing the root mean square error (RMSE).", "concepts": ["Machine Learning"], "constraints": "Use simple linear regression to train the model using the \"row m/z\" and \"row retention time\" as independent variables and \"importance.score\" as the dependent variable. Calculate the RMSE as a measure of model accuracy. The RMSE should be rounded to two decimal places.", "format": "@rmse_value[rmse] where \"rmse\" is a non-negative floating point number, rounded up to two decimal places, indicating the root mean square error of the model.", "file_name": "imp.score.ldlr.metabolome.csv"}
{"id": 39, "question": "Explore the distribution of the \"importance.score\" column and determine if it follows a normal distribution by conducting a Shapiro-Wilk test. If the p-value is less than 0.05, apply a log transformation to make the distribution closer to normal. Calculate the mean and standard deviation of the transformed \"importance.score\" column.", "concepts": ["Distribution Analysis", "Feature Engineering"], "constraints": "1. Use the Shapiro-Wilk test to determine the normality of the data in the \"importance.score\" column. The null hypothesis for this test is that the data was drawn from a normal distribution.\n2. Use a significance level of 0.05 for the Shapiro-Wilk test.\n3. If the p-value from the Shapiro-Wilk test is less than 0.05, apply a natural log transformation to the \"importance.score\" column.", "format": "@is_normal[p_value]\n@transformed_importance_score_mean[mean]\n@transformed_importance_score_std[std]\n\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"mean\" is the mean of the transformed \"importance.score\" column, rounded to two decimal places.\nwhere \"std\" is the standard deviation of the transformed \"importance.score\" column, rounded to two decimal places.", "file_name": "imp.score.ldlr.metabolome.csv"}
{"id": 40, "question": "Using correlation analysis, determine if there is a linear relationship between the \"row ID\" and \"importance.score\" columns. Use the Pearson correlation coefficient to assess the strength and direction of the linear relationship. If the absolute value of the Pearson correlation coefficient is greater than or equal to 0.5, train a linear regression model to predict the \"importance.score\" based on the \"row ID\" column. Evaluate the performance of the model using the Root Mean Squared Error (RMSE).", "concepts": ["Correlation Analysis", "Machine Learning"], "constraints": "1. Calculate the Pearson correlation coefficient between the \"row ID\" and \"importance.score\" columns.\n2. If the absolute value of the correlation coefficient is greater than or equal to 0.5, proceed to train a linear regression model. If not, stop and report the correlation value.\n3. Use the \"row ID\" column as the predictor and the \"importance.score\" column as the response variable to train the linear regression model.\n4. Use Root Mean Squared Error (RMSE) as the metric of model performance.", "format": "@correlation_coefficient[correlation_value]\n@model_performance[rmse_value_or_NA]\n\nwhere \"correlation_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"rmse_value_or_NA\" is either the RMSE of the model rounded to two decimal places, or the string \"NA\" if the absolute value of the correlation coefficient is less than 0.5.\nFor example:\n@correlation_coefficient[0.7]\n@model_performance[3.15]\nor\n@correlation_coefficient[0.4]\n@model_performance[NA]", "file_name": "imp.score.ldlr.metabolome.csv"}
{"id": 42, "question": "Are there any outliers in the 'class5' variable? If so, how many?", "concepts": ["Outlier Detection"], "constraints": "Identify outliers using the IQR method. An outlier is defined as any value of 'class5' variable that falls below (Q1 - 1.5 * IQR) or above (Q3 + 1.5 * IQR), where Q1 is the first quartile, Q3 is the third quartile, and IQR is the interquartile range (Q3 - Q1). Do not consider any other method for outlier detection, and do not modify or remove any values during the detection.", "format": "@outlier_count[count] where \"count\" is the total number of outliers in integer format.", "file_name": "pre_submission.csv"}
{"id": 45, "question": "Using feature engineering, create a new variable 'class10' which is the sum of 'class2' and 'class9'. What is the minimum value of 'class10'?", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Create a new variable named 'class10', it should be calculated by adding 'class2' and 'class9' for each row.\nCalculate the minimum value of the new variable using Python's built-in function 'min'.", "format": "@min_class10[min_value]\nwhere \"min_value\" is an integer between 0 and 2, as 'class10' is the sum of two binary variables.", "file_name": "pre_submission.csv"}
{"id": 55, "question": "What is the mean number of cases recorded across all countries and years?", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean of the column 'No. of cases'. Convert the data type of 'No. of cases' column from Object (string) to Int64 before performing calculations. Ignore those records where 'No. of cases' column value is Null or empty.", "format": "@mean_cases[mean_value] where \"mean_value\" is a positive integer.", "file_name": "estimated_numbers.csv"}
{"id": 56, "question": "Which country has the highest number of deaths recorded in a single year?", "concepts": ["Distribution Analysis", "Summary Statistics"], "constraints": "Calculate the maximum value in the 'No. of deaths' column. Convert the data type of 'No. of deaths' column from Object (string) to Int64 before performing calculations. Ignore those records where 'No. of deaths' column value is Null or empty. Identify the corresponding country and year for the highest number of deaths.", "format": "@max_deaths_country[country_name] @max_deaths_year[year] where \"country_name\" is a string indicating the name of the country and \"year\" is an integer indicating the year in which the maximum deaths occurred.", "file_name": "estimated_numbers.csv"}
{"id": 57, "question": "Is there a correlation between the number of cases and the number of deaths recorded?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between number of cases and number of deaths. Convert the data types of 'No. of cases' and 'No. of deaths' column from Object (String) to Int64 before performing calculations. Do this for complete data rather than specific country or year.", "format": "@correlation_coefficient[r_value] where \"r_value\" is a number between -1 and 1, rounded to two decimal places.", "file_name": "estimated_numbers.csv"}
{"id": 58, "question": "What is the percentage of missing values in the \"No. of cases_min\" column? How does this percentage compare to the percentage of missing values in the \"No. of deaths_max\" column?", "concepts": ["Comprehensive Data Preprocessing", "Summary Statistics"], "constraints": "Calculate the percentage of missing values for both \"No. of cases_min\" and \"No. of deaths_max\" column. Report the exact percentage values.", "format": "@percentage_cases_min[percentage], @percentage_deaths_max[percentage] where \"percentage\" is a number between 0 and 100, rounded to two decimal places.", "file_name": "estimated_numbers.csv"}
{"id": 59, "question": "Among the countries in the \"Americas\" region, which country has the highest average number of cases recorded over the years?", "concepts": ["Distribution Analysis", "Summary Statistics", "Feature Engineering"], "constraints": "Calculate the average of \"No. of cases\" for each country in the \"Americas\" region and report the country with the highest average number of cases. Count only complete years, i.e., exclude years with missing data.", "format": "@country_name[country] where \"country\" is a string representing the name of the country with the highest average number of cases.", "file_name": "estimated_numbers.csv"}
{"id": 62, "question": "Are there any outliers in the \"No. of deaths_max\" column for each country? How do these outliers affect the overall distribution of recorded deaths?", "concepts": ["Outlier Detection", "Distribution Analysis"], "constraints": "Use the IQR method (1.5*IQR rule) to detect the outliers. If there are any outliers, remove them and then recalculate the mean number of deaths.", "format": "@no_of_countries_with_outliers[number], @mean_no_of_deaths_with_outliers[original_mean], @mean_no_of_deaths_without_outliers[new_mean]. The number should be an integer. The original_mean and new_mean should be float numbers rounded to two decimal places.", "file_name": "estimated_numbers.csv"}
{"id": 64, "question": "Calculate the mean and standard deviation of the wage column.", "concepts": ["Summary Statistics"], "constraints": "The mean and standard deviation of the wage should be calculated using pandas' `mean()` and `std()` methods respectively. Do not apply any transformations, filtering or alteration to the wage data.", "format": "@mean_wage[mean_value] @std_wage[std_value] where \"mean_value\" and \"std_value\" are numbers with up to two decimal places.", "file_name": "beauty and the labor market.csv"}
{"id": 66, "question": "Calculate the correlation between the wage column and the exper column.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between wage and the exper. Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. Consider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5. Consider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.5. If the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value] @p_value[p_value] @relationship_type[relationship_type] where \"r_value\" is a number between -1 and 1, rounded to two decimal places. where \"p_value\" is a number between 0 and 1, rounded to four decimal places. where \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "beauty and the labor market.csv"}
{"id": 69, "question": "Perform feature engineering by creating a new feature called \"experience_score\" that is calculated by multiplying the exper column with the looks column. Then, calculate the Pearson correlation coefficient between the \"experience_score\" feature and the wage column.", "concepts": ["Feature Engineering", "Correlation Analysis"], "constraints": "Create \"experience_score\" by directly multiplying values of exper and looks column. Calculate Pearson correlation coefficient between the new feature \"experience_score\" and wage. Correlation should be calculated up to three decimal places.", "format": "@correlation[correlation] where \"correlation\" is a number representing the correlation coefficient, rounded to three decimal places.", "file_name": "beauty and the labor market.csv"}
{"id": 70, "question": "Perform machine learning by training a linear regression model to predict the wage based on the features exper, looks, union, goodhlth, black, female, married, south, bigcity, smllcity, service, and educ. Use the Root Mean Squared Error (RMSE) for evaluating the model's performance.", "concepts": ["Machine Learning", "Summary Statistics"], "constraints": "Perform the machine learning task using the sklearn library's LinearRegression() function. Split the dataset into a 70% training set and a 30% test set. Set the random seed to 42 for reproducibility of the results. Calculate the RMSE on the test set.", "format": "@RMSE[RMSE_value] where \"RMSE_value\" is a number rounded to two decimal places.", "file_name": "beauty and the labor market.csv"}
{"id": 71, "question": "Calculate the mean and standard deviation of the \"Volume\" column.", "concepts": ["Summary Statistics"], "constraints": "Use the built-in functions in Python's pandas library for computation. Round the result to 2 decimal places.", "format": "@mean_volume[mean_volume]\\n@std_dev_volume[std_dev_volume]\\nwhere \"mean_volume\" and \"std_dev_volume\" are floating-point numbers rounded to 2 decimal places.", "file_name": "microsoft.csv"}
{"id": 72, "question": "Check if the \"Close\" column adheres to a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Use the Shapiro-Wilk test to assess the normality of the \"Close\" column. If the p-value is less than 0.05, consider the data to be non-normally distributed. Otherwise, consider it to be normally distributed.", "format": "@normality_test_result[normality_test_result]\\nwhere \"normality_test_result\" a string that is either \"Normal\" or \"Non-normal\" based on the p-value from the Shapiro-Wilk test.", "file_name": "microsoft.csv"}
{"id": 73, "question": "Calculate the correlation coefficient between the \"High\" and \"Low\" columns.", "concepts": ["Correlation Analysis"], "constraints": "Use the Pearson correlation coefficient for computation. Round the result to 2 decimal places.", "format": "@correlation_coefficient[correlation_coefficient]\\nwhere \"correlation_coefficient\" is a floating-point number rounded to 2 decimal places.", "file_name": "microsoft.csv"}
{"id": 75, "question": "Create a new column called \"Daily Return\" that calculates the percentage change in the \"Close\" price from the previous day. Calculate the mean and standard deviation of the \"Daily Return\" column.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Calculate \"Daily Return\" as ((Close price of today - Close price of previous day) / Close price of previous day) * 100. Calculate mean and standard deviation to two decimal places.", "format": "@daily_return_mean[mean], @daily_return_std[std] where \"mean\" and \"std\" are the mean and standard deviation of the \"Daily Return\" column, respectively, rounded to two decimal places.", "file_name": "microsoft.csv"}
{"id": 77, "question": "Perform comprehensive data preprocessing on the \"Date\" column to extract the month and year information. Calculate the average closing price for each month and year combination. Return the month and year combination which has the highest average closing price.", "concepts": ["Comprehensive Data Preprocessing", "Summary Statistics"], "constraints": "Set the start of each month to be the first day of the month and the end of the month to be the last day of the month.\nThe calculation of the average closing price should be done using the arithmetic mean. \nFor ties, return the most recent month and year combination.", "format": "@Highest_Monthly_Average_Close_Price[month, year, average_close_price]\nwhere \"month\" is an integer between 1 and 12, \"year\" is an integer, and \"average_close_price\" is a float rounded to two decimal places.", "file_name": "microsoft.csv"}
{"id": 105, "question": "Calculate the correlation coefficient between ApplicantIncome and LoanAmount.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient to assess the strength and direction of linear relationship between ApplicantIncome and LoanAmount. Ignore the rows with missing values for either of the two columns. Round the correlation coefficient to two decimal places.", "format": "@correlation_coefficient[corr_coeff] where \"corr_coeff\" is a number between -1 and 1, rounded to two decimal places and represents the Pearson correlation coefficient between ApplicantIncome and LoanAmount.", "file_name": "test_Y3wMUE5_7gLdaTN.csv"}
{"id": 108, "question": "Generate a new feature called \"TotalIncome\" by adding the ApplicantIncome and CoapplicantIncome columns. Calculate the mean and standard deviation of the TotalIncome column.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Calculate the mean and standard deviation using the Panda's DataFrame mean() and std() functions distinctively. Round the results to two decimal places.", "format": "@mean_total_income[mean] @std_dev_total_income[std_dev] where \"mean\" is a float number that represents the mean value of the TotalIncome column rounded to two decimal places, and \"std_dev\" is a float number that represents the standard deviation of the TotalIncome column also rounded to two decimal places.", "file_name": "test_Y3wMUE5_7gLdaTN.csv"}
{"id": 109, "question": "Explore the distribution of the LoanAmount column based on different values of the Education column. Determine if there is a significant difference in the loan amount between individuals with different educational backgrounds.", "concepts": ["Distribution Analysis", "Feature Engineering"], "constraints": "Calculate the mean of LoanAmount for individuals with a 'Graduate' educational background and individuals with a 'Not Graduate' educational background separately. Test if there is a significant difference between these two groups using a t-test with a significance level (alpha) of 0.05. If the p-value is less than 0.05, report there is a significant difference, else report there is no significant difference.", "format": "@graduate_mean_loan[mean], @not_graduate_mean_loan[mean], @significance[significant/no significant] where \"mean\" is a number (float), rounded to two decimal places. \"significant\" or \"no significant\" signifies if there is a significant difference between two groups under the significance level 0.05.", "file_name": "test_Y3wMUE5_7gLdaTN.csv"}
{"id": 111, "question": "Perform comprehensive data preprocessing by handling missing values in the Self_Employed and LoanAmount columns. Use different strategies to handle the missing values in each column and compare the impact on the dataset's summary statistics (mean, median, etc.).", "concepts": ["Comprehensive Data Preprocessing", "Summary Statistics"], "constraints": "Replace missing values in Self_Employed with 'No' and in LoanAmount with the median value of the column. Calculate the mean, median, and standard deviation of LoanAmount after preprocessing.", "format": "@mean_loan[mean], @median_loan[median], @std_dev_loan[std_dev] where \"mean\", \"median\", and \"std_dev\" are numbers (float), rounded to two decimal places.", "file_name": "test_Y3wMUE5_7gLdaTN.csv"}
{"id": 112, "question": "What is the average happiness score of all the countries in the dataset?", "concepts": ["Summary Statistics"], "constraints": "Compute the average (mean) using arithmetic mean calculation which is the sum of all happiness scores divided by the total count of countries. Round off the result to two decimal places.", "format": "@average_happiness_score[mean]", "file_name": "2015.csv"}
{"id": 113, "question": "Is there a correlation between the GDP per capita and the happiness score of the countries? If so, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between GDP per capita and happiness score. The result should be rounded off to three decimal places. If the correlation coefficient is significant at the 0.01 level (2-tailed), only then the correlation should be reported.", "format": "@correlation_coefficient[gdp_happiness_corr]", "file_name": "2015.csv"}
{"id": 114, "question": "Which country has the highest happiness score?", "concepts": ["Summary Statistics"], "constraints": "Find the country with the highest happiness score in the dataset. If two or more countries have the same highest happiness score, return all of them.", "format": "@country_with_highest_score[country_name]", "file_name": "2015.csv"}
{"id": 116, "question": "Are there any outliers in the happiness scores of countries? If so, which countries are considered outliers?", "concepts": ["Outlier Detection"], "constraints": "Outliers should be determined by the Z-score method. If a country has a Z score greater than 3 or less than -3, it is considered an outlier. The calculation should be done using the population standard deviation formula.", "format": "@outlier_countries[country1,country2,...] where \"country1,country2,...\": a list of countries that are outliers based on their happiness scores.", "file_name": "2015.csv"}
{"id": 117, "question": "Which variable has the strongest correlation with the happiness scores among countries? Is this correlation positive or negative?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) between the happiness score and all other numerical variables in the dataset. The variable which has the highest magnitude of r (ignoring the sign) is the one with the strongest correlation.", "format": "@strongest_correlation_variable[variable_name] where \"variable_name\": the column name of the variable with the strongest correlation. @correlation_type[positive/negative] where \"positive/negative\": if the correlation is positive or negative based on the sign of the correlation coefficient.", "file_name": "2015.csv"}
{"id": 118, "question": "Is there a linear relationship between the GDP per capita and the life expectancy score in the dataset? Conduct linear regression and use the resulting coefficient of determination (R-squared) to evaluate the model's goodness of fit.", "concepts": ["Correlation Analysis", "Machine Learning"], "constraints": "Calculate the coefficient of determination (R-squared) for the given relationship. If R-squared is equal to or greater than 0.7, consider the model a good fit. Else, consider it a poor fit.", "format": "@coefficient_determination[R_square], @model_fit[model_fit], where \"R_square\" is the value of the coefficient of determination rounded to two decimal places and \"model_fit\" is a string that is either \"good fit\" or \"poor fit\" based on the calculated R-squared value.", "file_name": "2015.csv"}
{"id": 120, "question": "What is the mean number of total vaccinations administered per day?", "concepts": ["Summary Statistics"], "constraints": "Make sure to handle null values in the dataset by replacing them with the mean of the available values. Use a simple arithmetic mean for the calculation.", "format": "@mean_total_vaccinations[value]", "file_name": "country_vaccinations.csv"}
{"id": 121, "question": "Are the daily vaccinations per million people normally distributed?", "concepts": ["Distribution Analysis"], "constraints": "Handle null values in the dataset by replacing them with the mean of the available values. Test the normality of the distribution using the Shapiro-Wilk test. If the p-value is less than 0.05, report that the data is not normally distributed. If the p-value is greater than or equal to 0.05, report that the data is normally distributed.", "format": "@distribution_type[description], @p_value[value]", "file_name": "country_vaccinations.csv"}
{"id": 122, "question": "Is there a linear correlation between the total number of vaccinations and the number of people fully vaccinated per hundred people?", "concepts": ["Correlation Analysis"], "constraints": "Handle null values in the dataset by replacing them with the mean of the available values. Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship. Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. Consider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5. Consider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.5. If the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value], @p_value[p_value], @relationship_type[relationship_type]", "file_name": "country_vaccinations.csv"}
{"id": 123, "question": "Which country has the highest average number of daily vaccinations per million people?", "concepts": ["Summary Statistics", "Distribution Analysis"], "constraints": "{\nBased on the current available data without null values in the column of daily vaccinations per million people.\nNo tie of the maximum value is allowed. In case of a tie, consider the country with the first appeared maximum value.\n}", "format": "{\n@country_with_highest_average_daily_vaccinations[country_name]\nWhere \"country_name\" is a string.", "file_name": "country_vaccinations.csv"}
{"id": 124, "question": "Is there a significant difference in the total number of vaccinations administered per hundred people between countries that use different vaccines?", "concepts": ["Summary Statistics", "Correlation Analysis"], "constraints": "{\nOnly consider countries using Pfizer/BioNTech, Moderna, Oxford/AstraZeneca, and Johnson&Johnson/Janssen. \nThe country must have data without null values in the column of total vaccinations per hundred people.\nUse One-Way Analysis of Variance (ANOVA) to test if there's significant difference among different vaccine groups. \nConsider the differences among vaccine groups to be significant if the p-value is less than 0.05.\n}", "format": "{\n@significance_of_difference[significance]\n@p_value[p_value]\nWhere \"significance\" is a string that can either be \"yes\" or \"no\" based on the conditions specified in the constraints.\nWhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.", "file_name": "country_vaccinations.csv"}
{"id": 125, "question": "Can we predict the number of people fully vaccinated per hundred people based on the total number of vaccinations administered and the number of people vaccinated per hundred people?", "concepts": ["Correlation Analysis", "Machine Learning"], "constraints": "{\nPerform a multiple linear regression analysis using the total number of vaccinations administered and the number of people vaccinated per hundred people as predictors.\nThe dependent variable is the number of people fully vaccinated per hundred people.\nOnly consider data entries without null values in the three mentioned columns.\nUse a significance level (alpha) of 0.05 for the predictors.\nConsider the predictors to be significant if the p-value is less than 0.05.\nCalculate the R-squared value of the model.\n}", "format": "{\n@significant_predictor[predictor_1,predictor_2]\n@r_squared[r_squared_value]\nWhere \"predictor_1,predictor_2\" can be \"yes,yes\", \"yes,no\", \"no,yes\", or \"no,no\" based on the p-values of the predictors.\nWhere \"r_squared_value\" is a number between 0 and 1, rounded to four decimal places.", "file_name": "country_vaccinations.csv"}
{"id": 129, "question": "Calculate the mean and standard deviation of the fare paid by the passengers.", "concepts": ["Summary Statistics"], "constraints": "Calculate the arithmetic mean and population standard deviation (\u03c3). For the mean, sum up all fare and divide by the count of the data points. For the standard deviation, use the formula:\n\u03c3 = sqrt(sum for i = 1 to n (xi - \u03bc)^2/n), where xi is each fare and \u03bc is the mean fare, n is the count of the fare data points.", "format": "@mean_fare[mean_value] @std_dev_fare[std_dev_value] where \"mean_value\" and \"std_dev_value\" are decimal numbers rounded to two decimal places.", "file_name": "titanic.csv"}
{"id": 130, "question": "Check if the age of the passengers follows a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Use the Shapiro-Wilk test to check the normality of the age distribution. Ignore the null values. The null hypothesis of this test is that the population is normally distributed. If the p value is less than 0.05, the null hypothesis is rejected and there is evidence that the data tested are not normally distributed. On the other hand, if the p value is greater than 0.05, then the null hypothesis that the data came from a normally distributed population cannot be rejected.", "format": "@norm_test_pvalue[pvalue] @is_normal[isNormal] where \"pvalue\" is a decimal number rounded to four decimal places and \"isNormal\" is a boolean value, 'True' if the age values follow a normal distribution and 'False' otherwise.", "file_name": "titanic.csv"}
{"id": 132, "question": "Identify and count the number of outliers in the fare paid by passengers using the Z-score method.", "concepts": ["Outlier Detection"], "constraints": "{\nCalculate the Z-score for each fare using the mean and standard deviation of the fare data.\nDetermine an outlier to be any fare with a Z-score greater than 3 or less than -3.\n}", "format": "{\n@outlier_count[count]\nwhere \"count\" is a positive integer or zero representing the total number of outliers found.", "file_name": "titanic.csv"}
{"id": 133, "question": "Perform comprehensive data preprocessing for the dataset by handling missing values in the age and cabin columns. Use the deletion strategy for the missing values in the cabin column and imputation strategy for the missing values in the age column.", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "{\nFor the deletion strategy in the cabin column, remove any row that has a missing value in the cabin column.\nFor the imputation strategy in the age column, replace the missing values with the median age of all passengers.\nReport on the new total number of rows after deletion and the median age used for imputation.\n}", "format": "{\n@row_count[count]\n@median_age[value]\nwhere \"count\" is a positive integer representing the total number of rows after deletion.\nwhere \"value\" is a positive real number representing the median age used for imputation, rounded to one decimal place.", "file_name": "titanic.csv"}
{"id": 136, "question": "Perform distribution analysis on the fare paid by passengers for each passenger class separately. Use the Shapiro-Wilk Test for normality. For each passenger class, the null hypothesis is that the fare follows a normal distribution.", "concepts": ["Distribution Analysis", "Summary Statistics"], "constraints": "The Shapiro-Wilk Test should be conducted separately for each passenger class. Use a significance level (alpha) of 0.05. If the p-value is less than 0.05, reject the null hypothesis.", "format": "@p_value_class_1[p_value_1], @p_value_class_2[p_value_2], @p_value_class_3[p_value_3] where 'p_value_1', 'p_value_2', and 'p_value_3' are the p-values of the Shapiro-Wilk Test for the 1st, 2nd and 3rd class passengers respectively, rounded to four decimal places.", "file_name": "titanic.csv"}
{"id": 137, "question": "Perform feature engineering by creating a new binary feature called \"IsAlone\" that indicates whether a passenger is traveling alone or with family. Use the \"SibSp\" and \"Parch\" columns to determine if a passenger has any accompanying family members. Then, train a logistic regression machine learning model using the new feature and the Survival rate as the output variable.", "concepts": ["Feature Engineering", "Machine Learning"], "constraints": "The logistic regression model should be implemented with scikit-learn\u2019s LogisticRegression with default parameters. Use the 'IsAlone' feature and 'Survived' as the output variable. The model should be trained using a 70:30 train-test split, balancing the class weights. Use a random seed of 42 for reproducibility.", "format": "@model_score[model_accuracy] where 'model_accuracy' is a number between 0 and 1, rounded to 2 decimal places, representing the accuracy of the model on the test set.", "file_name": "titanic.csv"}
{"id": 138, "question": "Question 1: What is the average number of votes received by the Democratic party in the election?", "concepts": ["Summary Statistics"], "constraints": "{Calculate the mean of the column 'votes_dem'. Ignore any negligible difference due to floating-point number calculation and rounding.}", "format": "{@average_votes_dem[mean] where \"mean\" is a number rounded to the nearest whole number.", "file_name": "election2016.csv"}
{"id": 139, "question": "Question 2: Are the percentage of votes received by the Democratic party in a particular county normally distributed?", "concepts": ["Distribution Analysis"], "constraints": "{Test whether the 'per_dem' column follows a normal distribution using the Shapiro-Wilk test for normality. Set the significance level (alpha) at 0.05. If p-value is less than 0.05, reject the null hypothesis and report that the data is not normally distributed. If p-value is greater than or equal to 0.05, fail to reject the null hypothesis and report that the data is normally distributed.}", "format": "{@normality_status[status] where \"status\" is a string that could either be \"normal\" when the data follows normal distribution or \"not normal\" when the data does not follow a normal distribution.", "file_name": "election2016.csv"}
{"id": 140, "question": "Question 3: Is there a correlation between the number of votes received by the Democratic and Republican parties? If so, is it a linear or nonlinear relationship?", "concepts": ["Correlation Analysis"], "constraints": "{\nCalculate the Pearson correlation coefficient (r) between 'votes_dem' and 'votes_gop'.\nReport if the correlation is significant using a two-tailed test with a significance level (alpha) of 0.05.\nIf p-value is less than 0.05 and absolute r >= 0.5, define it as a significant linear relationship.\nIf p-value is less than 0.05 and absolute r < 0.5, define it as a significant nonlinear relationship.\nIf p-value >= 0.05, define it as no significant relationship.}", "format": "{\n@correlation_coefficient[r_value]\n@p_value[p_value]\n@relationship_type[relationship_type]\nwhere \"r_value\" is a number between -1 and 1, rounded to three decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "election2016.csv"}
{"id": 142, "question": "Question 2: Is there a relationship between the difference in votes received by the Democratic and Republican parties and their percentage point difference?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between the difference in votes and the percentage point difference. Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. Consider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5. Consider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.5. If the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value] @p_value[p_value] @relationship_type[relationship_type] where r_value is a number between -1 and 1, rounded to two decimal places. Where p_value is a number between 0 and 1, rounded to four decimal places. Where relationship_type is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "election2016.csv"}
{"id": 144, "question": "Question 1: Calculate the mean and standard deviation of the percentage of votes received by the Democratic and Republican parties. Then, determine if the distribution of the percentage of votes follows a normal distribution using Anderson-Darling test with the significance level (alpha) of 0.05.", "concepts": ["Summary Statistics", "Distribution Analysis"], "constraints": "The desired calculation of the mean should be rounded up to 2 decimal places and the standard deviation should be rounded up to 3 decimal places.\nUse Anderson-Darling test to assess the normalcy of the distribution and if the p-value obtained is less than 0.05, then the distribution can be considered as 'Not Normal' else 'Normal'.", "format": "@mean_dem[mean_dem] \n@mean_gop[mean_gop]\n@std_dev_dem[std_dev_dem]\n@std_dev_gop[std_dev_gop]\n@dist_dem[dist_dem]\n@dist_gop[dist_gop]\nwhere \"mean_dem\" and \"mean_gop\" are numbers representing the mean values for Democratic and Republican parties respectively, rounded to two decimal places.\nwhere \"std_dev_dem\" and \"std_dev_gop\" are numbers representing the standard deviation values for Democratic and Republican parties respectively, rounded to three decimal places.\nwhere \"dist_dem\" and \"dist_gop\" are strings that can either be \"Normal\" or \"Not Normal\" based on the conditions specified in the constraints.", "file_name": "election2016.csv"}
{"id": 145, "question": "Question 2: Generate a new feature called \"voter_ratio\" that represents the ratio of votes received by the Democratic party to the total votes cast in each county. After creating this new feature, calculate the correlation between \"voter_ratio\" and the difference in votes using Pearson's correlation coefficient (rounded up to 3 decimal places).", "concepts": ["Feature Engineering", "Correlation Analysis"], "constraints": "The calculation of \"voter_ratio\" should be represented as a proportion and rounded to 4 decimal places. The correlation between \"voter_ratio\" and the difference in votes should use Pearson's correlation method.", "format": "@voter_ratio_mean[voter_ratio_mean] \n@Correlation_coefficient[Correlation_coefficient]\nwhere \"voter_ratio_mean\" is a number representing the mean of the \"voter_ratio\" values (rounded to four decimal places).\nwhere \"Correlation_coefficient\" is a number between -1 and 1, which is the Pearson correlation coefficient rounded to three decimal places.", "file_name": "election2016.csv"}
{"id": 148, "question": "2. What is the average height of the characters in the dataset?", "concepts": ["Summary Statistics"], "constraints": "Calculate the average (mean) height using values where the height column is not null. Do not include null values in the calculation.", "format": "@average_height[height]\nwhere \"height\" is a float rounded to two decimal places representing the average height in feet of the characters in the dataset.", "file_name": "heroes_information.csv"}
{"id": 149, "question": "3. Is there any correlation between the height and weight of the characters in the dataset?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) between height and weight. Ignore rows where either height or weight is null.", "format": "@correlation_coefficient[correlation]\nwhere \"correlation\" is a number rounded to two decimal places, representing the strength and direction of the linear relationship between height and weight of the characters in the dataset.", "file_name": "heroes_information.csv"}
{"id": 153, "question": "1. Perform a comprehensive data preprocessing on the dataset by handling the missing values. For the 'Publisher' feature, fill in the missing values with the mode value. For the 'Weight' feature, fill in the missing values with the median value. Then, normalize the 'Height' and 'Weight' columns using Min-Max normalization. Finally, calculate the mean and standard deviation of the normalized 'Height' and 'Weight' columns. Ignore any outliers and do not include any features that were not specified in these constraints in your preprocessing steps.", "concepts": ["Comprehensive Data Preprocessing", "Summary Statistics"], "constraints": "1. Use the mode (most frequent) value to replace missing values in the 'Publisher' column.\n2. Use the median value to replace missing values in the 'Weight' column.\n3. Use Min-Max normalization to normalize both 'Height' and 'Weight' columns.\n4. Ignore any outliers.", "format": "1. @height_mean[mean normalized height]\n2. @height_std[standard deviation of the normalized height]\n3. @weight_mean[mean normalized weight]\n4. @weight_std[standard deviation of the normalized weight]\nWhere \"mean normalized height\" and \"mean normalized weight\" are decimals rounded to 2 digits, \"standard deviation of the normalized height\" and \"standard deviation of the normalized weight\" are decimals rounded to 4 digits.", "file_name": "heroes_information.csv"}
{"id": 174, "question": "Determine the skewness of the fares paid by the passengers on the Titanic.", "concepts": ["Distribution Analysis"], "constraints": "For the calculation of skewness, use the pandas DataFrame method skew(). No other method should be employed for calculation.", "format": "@fare_skewness[fare_skew_value] \nwhere \"fare_skew_value\" is a floating-point number rounded to 2 decimal places.", "file_name": "titanic.csv"}
{"id": 175, "question": "Identify if there are any outliers in the age of the passengers on the Titanic using the Z-score method. Use a threshold of 3 for outlier detection.", "concepts": ["Outlier Detection"], "constraints": "Use Z-score method for outlier detection. Any data point that has a Z-score greater than 3 or less than -3 should be considered an outlier. The python library scipy's zscore() function should be used. Ignore the null values during calculation.", "format": "@outliers_count[outliers_count] \nwhere \"outliers_count\" is the number of outliers detected in the age of passengers. This should be an integer number.", "file_name": "titanic.csv"}
{"id": 176, "question": "Calculate the median age of male passengers who survived and paid a fare greater than the average fare. Calulate only the ages that are not null.", "concepts": ["Summary Statistics", "Correlation Analysis"], "constraints": "{\nAll null values in the \"Age\" column are not considered in the calculation.\nThe passengers considered for this question should meet all the following conditions: they are male; they survived; their fare is greater than the average fare.\n}", "format": "{\n@median_age[median_age]\nwhere \"median_age\" is a number rounded to two decimal places.", "file_name": "titanic.csv"}
{"id": 177, "question": "Investigate the distribution of ages for each passenger class. Determine if there is a significant difference in the age distributions between the 1st class and 3rd class. Test the difference utilising the Mann-Whitney U test and use 0.05 as the alpha (significance) level. Null ages are not taken into calculation.", "concepts": ["Distribution Analysis"], "constraints": "{\nThe analysis should only include the 1st and 3rd classes.\nNull values in the \"Age\" column should be ignored.\nThe \"age distribution difference\" is determined using a Mann-Whitney U test with an alpha (significance) level of 0.05.\n}", "format": "{\n@p_value[p_value]\n@significance[Is there a significant difference(Yes/No)]\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"Is there a significant difference\" is a string, which should be either \"Yes\" or \"No\".", "file_name": "titanic.csv"}
{"id": 178, "question": "Perform comprehensive data preprocessing on the dataset. Handle missing values in the \"Embarked\" column by imputing them with the mode value. Normalize the \"Fare\" column using Min-Max scaling. Encode the categorical variable \"Sex\" using Label Encoding, where \"male\" is coded as 1 and \"female\" as 0. Calculate the number of each label after processing \"Sex\" and the minimum, maximum and mean of \"Fare\" after scaling.", "concepts": ["Comprehensive Data Preprocessing", "Feature Engineering"], "constraints": "{\n\"Embarked\" missing values should be filled with the mode value.\n\"Fare\" should be normalized using Min-Max scaling, where Min is the minimum value of \"Fare\" before scaling and Max is the maximum.\n\"Sex\" should be encoded using Label Encoding, where \"male\" is 1 and \"female\" is 0.\nCaculate the count of each label of \"Sex\" after encoding and the min, max and mean of \"Fare\" values after scaling.\n}", "format": "{\n@sex_encoded_count[label_0_count, label_1_count]\n@fare_after_scaling[min_fare, max_fare, mean_fare]\nwhere \"label_0_count\" and \"label_1_count\" are numbers indicating the count of 0 and 1 in the encoded \"Sex\" column, respectively.\nwhere \"min_fare\", \"max_fare\", and \"mean_fare\" are the minimum, maximum, and mean of the \"Fare\" column after Min-Max scaling, respectively. \"min_fare\" and \"max_fare\" are rounded to two decimal places, while \"mean_fare\" is rounded to four decimal places.", "file_name": "titanic.csv"}
{"id": 179, "question": "Calculate the Pearson correlation coefficient between the age and fare variables for passengers who survived and were in first class.", "concepts": ["Summary Statistics", "Correlation Analysis"], "constraints": "Use only passengers that survived and were in the first class. Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between age and fare.", "format": "@correlation_coefficient[c_value] where \"c_value\" is a number between -1 and 1, rounded to three decimal places.", "file_name": "titanic.csv"}
{"id": 180, "question": "Perform outlier detection on the fare variable for each passenger class separately. Use the Z-score method and determine the number of outliers in each class.", "concepts": ["Outlier Detection"], "constraints": "Validate outliers using the Z-score method with a threshold of 3. Use separate calculations for each passenger class (1, 2, and 3).", "format": "@class1_outliers[o1_value], @class2_outliers[o2_value], @class3_outliers[o3_value] where \"o1_value\", \"o2_value\", and \"o3_value\" are non-negative integers representing the count of outliers in each class.", "file_name": "titanic.csv"}
{"id": 207, "question": "1. Which column(s) contain missing values in the dataset?", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "This question requires a straightforward identification of columns with missing values in the dataset. Only count the missing values in columns where the data type is 'object' (i.e., strings). Do not include columns of other data types and consider a \"missing value\" as one that is recorded as 'NaN', 'na', 'null', or an empty string in the dataset.", "format": "@missing_columns_in_object_type[missing_column1, missing_column2,\u2026] whereby 'missing_column1', 'missing_column2', etc. are string names of the columns with missing values. The answer should not contain any duplicates and should be sorted alphabetically for easy checking.", "file_name": "fb_articles_20180822_20180829_df.csv"}
{"id": 208, "question": "2. Calculate the mean and standard deviation of the \"compound\" sentiment score column.", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean and standard deviation of the 'compound' sentiment score using standard statistical methods. Please use a standard approach and do not use any approximations or assumptions. Note that the 'compound' column contains no missing values according to the scenario information.", "format": "@compound_mean[mean_value]\\n@compound_std[std_value] where 'mean_value' and 'std_value' should be rounded to three decimal places.", "file_name": "fb_articles_20180822_20180829_df.csv"}
{"id": 209, "question": "3. Is there any correlation between the \"neg\" and \"pos\" sentiment score columns? If so, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between 'neg' and 'pos' sentiment scores. If the Pearson correlation coefficient (absolute value) is close to 1, it means that there exists a strong correlation. If it is close to 0, it means that there exists a weak or no correlation. If the coefficient is positive, the correlation is positive; if negative, the correlation is negative.", "format": "@correlation_coefficient[r_value] where 'r_value' is a number between -1 and 1, rounded to two decimal places.", "file_name": "fb_articles_20180822_20180829_df.csv"}
{"id": 210, "question": "1. Identify and remove any outliers in the \"neg\" sentiment score column using the Z-score method, where Z is defined as (value - mean) / standard deviation. Assume a data point to be an outlier if its Z-score is greater than 3 or less than -3. After removing outliers, calculate the new mean and standard deviation for the \"neg\" sentiment score column.", "concepts": ["Outlier Detection", "Summary Statistics"], "constraints": "Z-score is calculated with its general mathematical formula (value - mean) / standard deviation. Consider a data point as an outlier if its Z-score is greater than 3 or less than -3. Do this for the \"neg\" sentiment score column only.", "format": "@mean_neg[mean]\\n@std_dev_neg[std_dev] where \"mean\" and \"std_dev\" are floating-point numbers rounded to two decimal places. Additionally, \"mean\" and \"std_dev\" should be greater than 0 and less than 1 as they mimic sentiment scores.", "file_name": "fb_articles_20180822_20180829_df.csv"}
{"id": 211, "question": "2. Create a new column called \"article_length\" that represents the number of characters in each news article's \"text\" column. Then, calculate the average article length and the range (maximum - minimum) in the number of characters in the articles.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "For article_length column, simply count the number of characters in the 'text' column of every entry. Disregard empty spaces while calculating the characters. Calculate the average as sum of all entries divided by total number of entries. Calculate range as maximum - minimum value in the article_length column.", "format": "@average_length[average_length]\\n@range_length[range_length] where \"average_length\" and \"range_length\" are floating-point numbers rounded to two decimal places. \"average_length\" and \"range_length\" should be greater than 0, as they represent lengths.", "file_name": "fb_articles_20180822_20180829_df.csv"}
{"id": 214, "question": "2. Perform a correlation analysis between the sentiment scores (\"neg\", \"neu\", \"pos\") and the article length (\"text\" column non-space character count) for articles published by the source \"ABC News\". Identify any significant correlations between the variables and provide a brief explanation of the findings.", "concepts": ["Correlation Analysis", "Feature Engineering"], "constraints": "{\n- Use Pearson correlation for the correlation analysis.\n- Assess the strength of the correlation between each pair of variables. Consider correlations to be weak if |r| < 0.3, moderate if 0.3 <= |r| < 0.5, and strong if |r| >= 0.5. \n}", "format": "{\n@neg_length_corr[neg_length_correlation]\n@neu_length_corr[neu_length_correlation]\n@pos_length_corr[pos_length_correlation]\nwhere \"neg_length_correlation\", \"neu_length_correlation\" and \"pos_length_correlation\" are decimal numbers between -1 and 1 (rounded to 2 decimal places) representing the strength of the correlation between the sentiment scores and the article length.", "file_name": "fb_articles_20180822_20180829_df.csv"}
{"id": 216, "question": "Calculate the mean and standard deviation of the abs_diffsel column.", "concepts": ["Summary Statistics"], "constraints": "{\nThe mean and standard deviation should be calculated directly from the 'abs_diffsel' column.\nDo not remove any outliers or modify the data prior to calculation.\nThe mean and standard deviation should be computed directly from all available data points.\n}", "format": "{\n@mean[mean_value]\n@std_dev[std_dev_value]\nwhere \"mean_value\" is a positive float number, rounded to two decimal places.\nwhere \"std_dev_value\" is a positive float number, rounded to two decimal places.", "file_name": "ferret-Pitt-2-preinf-lib2-100_sitediffsel.csv"}
{"id": 217, "question": "Find the site identifier(s) with the highest positive_diffsel value.", "concepts": ["Distribution Analysis"], "constraints": "{\nExtract the site identifier corresponding to the highest positive_diffsel value.\nIn the case multiple sites have the same highest positive_diffsel value, list all site identifiers.\nAssume the 'positive_diffsel' column contains only unique values unless specified otherwise.}", "format": "{\n@site_identifier[site_identifier]\nwhere \"site_identifier\" is a string from the 'site' column. If multiple site identifiers should be listed, return them as a single string separated by commas.", "file_name": "ferret-Pitt-2-preinf-lib2-100_sitediffsel.csv"}
{"id": 218, "question": "Calculate the correlation coefficient between the positive_diffsel and negative_diffsel columns.", "concepts": ["Correlation Analysis"], "constraints": "{\nCalculate the Pearson correlation coefficient (r) to assess the strength of the linear relationship between positive_diffsel and negative_diffsel. \nDo not remove any outliers or modify the data prior to computation. \nUse all available data points for the computation of the correlation coefficient.}", "format": "{\n@correlation_coefficient[r_value]\nwhere \"r_value\" is a float number between -1 and 1, rounded to two decimal places.", "file_name": "ferret-Pitt-2-preinf-lib2-100_sitediffsel.csv"}
{"id": 219, "question": "Identify the site(s) with outliers in the abs_diffsel column using the interquartile range (IQR) method. An outlier is defined as a value that is below Q1 - 1.5*IQR or above Q3 + 1.5*IQR. Provide the site identifier(s) and the corresponding absolute difference in selection values for the outliers.", "concepts": ["Outlier Detection"], "constraints": "Use the interquartile range (IQR) method for outlier detection. Calculate the IQR as the difference between the first quartile (Q1) and the third quartile (Q3) of the abs_diffsel column. Consider a value as an outlier if it is below Q1 - 1.5*IQR or above Q3 + 1.5*IQR.", "format": "@site_identifiers[site_id1,site_id2,...] @outlier_values[value1,value2,...], where \"site_id1\", \"site_id2\", ... are strings representing the identifiers of the sites with detected outliers and \"value1\", \"value2\", ... are the corresponding absolute difference in selection values for the outliers, each rounded to two decimal places.", "file_name": "ferret-Pitt-2-preinf-lib2-100_sitediffsel.csv"}
{"id": 220, "question": "Perform comprehensive data preprocessing for the given dataset. This should include data cleaning, handling missing values, and feature engineering. Provide the cleaned dataset, and if any missing values were found, explain the strategy used to handle them. Additionally, generate a new feature called \"diff_range\" that represents the range of difference in selection (max_diffsel - min_diffsel) for each site.", "concepts": ["Comprehensive Data Preprocessing", "Feature Engineering"], "constraints": "For data cleaning, ensure that there are no duplicated records or inconsistencies in the dataset. If missing values are found in any of the columns, use mean imputation to fill these missing values. For feature engineering, create a new column \"diff_range\" calculated as the difference between max_diffsel column and min_diffsel column.", "format": "The desired output includes two elements: @cleaned_dataset[a data frame in CSV format; each row represents a site and each column represents a feature: site, abs_diffsel, positive_diffsel, negative_diffsel, max_diffsel, min_diffsel, diff_range] @missing_values_handling[the description of the strategy used to handle missing values; if no missing values were found, the output should be \"No missing values were found.\"]", "file_name": "ferret-Pitt-2-preinf-lib2-100_sitediffsel.csv"}
{"id": 222, "question": "Explore the distribution of the abs_diffsel column and determine if it adheres to a normal distribution by calculating skewness and kurtosis. The skewness and kurtosis values should be calculated using Fisher\u2019s method. If the skewness value is between -0.5 and 0.5, the data is fairly symmetrical. If the kurtosis value is around 0, then a normal distribution is often assumed.", "concepts": ["Distribution Analysis", "Feature Engineering"], "constraints": "Perform the calculations using non-parametric methods, specifically the skew and kurtosis functions provided in the scipy.stats module of Python. All numeric values should be rounded to two decimal places.", "format": "@skewness_value[float between -0.5 and 0.5, rounded to two decimal places] @kurtosis_value[float around 0, answer should be within range of -0.5 to 0.5, rounded to two decimal places]. Once both calculations are complete, construct a string message that explicitly indicates whether the data is normally distributed.", "file_name": "ferret-Pitt-2-preinf-lib2-100_sitediffsel.csv"}
{"id": 224, "question": "Utilize machine learning techniques to classify the sites into two categories based on their positive_diffsel values, with values less than or equal to the mean defined as 'low' selection, and the rest as 'high'. Split the dataset into training and testing sets with an 80:20 ratio using a specified random state of 42. Train a logistic regression model on the training set, and evaluate its performance on the testing set using accuracy as a metric.", "concepts": ["Machine Learning", "Distribution Analysis"], "constraints": "Use scikit-learn's Logistic Regression for your classifier model, 'liblinear' solver for the Logistic Regression, and a random state of 42 when splitting the data and building the model. All numeric values should be rounded to two decimal places.", "format": "@accuracy_score[float between 0 and 1, inclusive, rounded to two decimal places].", "file_name": "ferret-Pitt-2-preinf-lib2-100_sitediffsel.csv"}
{"id": 234, "question": "What is the average duration of a budget year for all departments?", "concepts": ["Summary Statistics"], "constraints": "Calculate the duration of each department\u2019s budget year in days, by subtracting the budget_year_start from budget_year_end. Afterwards, calculate the mean of these durations using a built-in Python function.", "format": "@average_duration[days] where \"days\" is a whole number representing the average number of days of budget years across all departments, rounded to the nearest whole number.", "file_name": "city_departments_in_current_budget.csv"}
{"id": 237, "question": "What is the distribution of budget year durations for departments in the \"Finance\" department group? Does it exhibit any skewness or heavy tails?", "concepts": ["Distribution Analysis"], "constraints": "Calculate the skewness and kurtosis of the budget year durations for departments in the \"Finance\" department group using the pandas DataFrame methods skew() and kurt(). \nConsider the distribution to be skewed if the absolute value of the skewness is greater than 0.5. If the skewness is less than -0.5, consider the distribution to be negatively skewed. If the skweness is greater than 0.5, consider the distribution to be positively skewed. \nConsider the distribution to have heavy tails if the kurtosis is greater than 0.5.", "format": "@skewness[skewness]\n@kurtosis[kurtosis]\n@skewness_type[skewness_type]\n@tail_type[tail_type]\nwhere \"skewness\" and \"kurtosis\" are numbers, rounded to two decimal places.\nwhere \"skewness_type\" is a string that can be \"Negative\", \"Positive\", or \"None\" based on the conditions specified in the constraints.\nwhere \"tail_type\" is a string that can either be \"Heavy\", or \"None\" based on the conditions specified in the constraints.", "file_name": "city_departments_in_current_budget.csv"}
{"id": 243, "question": "What is the mean batting average of the players in the dataset?", "concepts": ["Summary Statistics"], "constraints": "Consider only the players who have a recorded batting average. Do not include the one player with a missing batting average into your calculation. Report your answer rounded off to three decimal places.", "format": "@mean_batting_average[mean_batting_average] where \"mean_batting_average\" is a float between 0 and 1, rounded to three decimal places.", "file_name": "baseball_data.csv"}
{"id": 244, "question": "Are the number of home runs hit by the players normally distributed?", "concepts": ["Distribution Analysis"], "constraints": "Assess whether the data is normally distributed using the Shapiro-Wilk test for normality with a significance level (alpha) of 0.05. Exclude the player with a missing value of home runs in your calculations. \nIf the p-value is less than 0.05, report that the distribution is not normal. If the p-value is greater than or equal to 0.05, report that the distribution is normal.", "format": "@p_value[p_value] @normality_test[normality_test] where \"p_value\" is a number between 0 and 1, rounded to four decimal places. \"normality_test\" is a string which can either be \"normal\" or \"not_normal\" based on the conditions specified in the constraints.", "file_name": "baseball_data.csv"}
{"id": 246, "question": "Which player has the highest on-base percentage, and how many walks did they receive?", "concepts": ["Summary Statistics", "Correlation Analysis"], "constraints": "Use the 'idxmax' function to find the index of the row with the maximum on-base percentage. Use this index to extract the player's name and number of walks from the 'number_of_walks' column.", "format": "@player_with_max_on_base_percentage[player_name]\\n@number_of_walks[walks_received] where \"player_name\" is a string specifying the player's name and \"walks_received\" is an integer specifying the number of walks received by the player with the highest on-base percentage.", "file_name": "baseball_data.csv"}
{"id": 247, "question": "What is the average number of runs scored by players who are eligible for free agency compared to players who are not eligible for free agency?", "concepts": ["Summary Statistics"], "constraints": "Use the 'groupby' function on the 'indicator_of_free_agency_eligibility' column to group the data by whether a player is eligible for free agency or not. Then use the 'mean' function on the 'number_of_runs' column to find the average number of runs scored by these two groups of players.", "format": "@average_runs_by_eligible_for_free_agency[average_runs]\\n@average_runs_by_not_eligible_for_free_agency[average_runs] where \"average_runs\" is a float rounded to two decimal places specifying the average number of runs scored by players who are eligible for free agency and players who are not eligible for free agency, respectively.", "file_name": "baseball_data.csv"}
{"id": 248, "question": "Are there any outliers in the number of strikeouts committed by the players? If so, identify the players and their number of strikeouts.", "concepts": ["Outlier Detection"], "constraints": "Use the IQR method for outlier detection. Compute the first (Q1) and third quartile (Q3) of the 'number_of_strike_outs' column. Outliers are defined as values smaller than Q1 - 1.5*IQR or larger than Q3 + 1.5*IQR, where IQR = Q3 - Q1. Find and report the players and their number of strikeouts that are qualified as outliers by these criteria.", "format": "@outlier_strikeout_players[player_names]\\n@number_of_strikeouts[strikeouts] where \"player_names\" is a list of strings specifying the names of the players that are outliers, and \"strikeouts\" is a list of integers specifying the corresponding number of strikeouts made by these players.", "file_name": "baseball_data.csv"}
{"id": 249, "question": "Is there a significant correlation between the number of doubles hit by a player and their salary? If so, what is the correlation coefficient and p-value?", "concepts": ["Correlation Analysis", "Summary Statistics"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between the number of doubles hit and player's salary. Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. Consider the relationship to be significant if the p-value is less than 0.05. If the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value] @p_value[p_value] where \"r_value\" is a number between -1 and 1, rounded to two decimal places. \"p_value\" is a number between 0 and 1, rounded to four decimal places.", "file_name": "baseball_data.csv"}
{"id": 250, "question": "Create a new feature called \"batting_average_minus_on_base_percentage\" which represents the difference between a player's batting average and their on-base percentage. Calculate the mean and standard deviation of this new feature.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "To calculate the new feature, subtract each player's on-base percentage from their batting average. Ignore the missing values and areas with null values for batting average or on-base percentage. Calculate both the mean and standard deviation using these new feature values.", "format": "@mean[mean_value] @std_dev[std_dev_value] where \"mean_value\" is the mean of the new feature, and \"std_dev_value\" is the standard deviation of the new feature. Both should be rounded to two decimal places.", "file_name": "baseball_data.csv"}
{"id": 251, "question": "Calculate the mean and standard deviation of the gross domestic product per capita in the year 2007 for all countries in the dataset.", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean and standard deviation using Python built-in functions or numpy. The output values should be rounded off to two decimal places.", "format": "@mean_gdp_2007[mean_value] @std_gdp_2007[std_value] where \"mean_value\" and \"std_value\" are float numbers, 2 decimal places", "file_name": "gapminder_gdp_asia.csv"}
{"id": 252, "question": "Determine which country's gross domestic product per capita in the year 1992 had the highest skewness among all countries in the dataset.", "concepts": ["Distribution Analysis"], "constraints": "Use Python's SciPy library to calculate the skewness of each country's gross domestic product per capita in 1992. Skewness should be calculated with Fisher\u2019s definition, i.e. the one that's adjusted for the normal distribution.", "format": "@highest_skewness_country[country_name] where \"country_name\" is a string", "file_name": "gapminder_gdp_asia.csv"}
{"id": 254, "question": "Identify any outliers in the gross domestic product per capita data for the year 1982 for all countries. Define an outlier as any data point that falls more than 1.5 times the interquartile range (IQR) below the first quartile or above the third quartile. Report the country or countries which their gdpPercap_1982 values are identified as outliers.", "concepts": ["Outlier Detection"], "constraints": "Use the interquartile range (IQR) rule for outlier detection: a data point is considered an outlier if it falls more than 1.5*IQR below the first quartile (Q1) or above the third quartile (Q3). Don't use any other outlier detection methods or parameters.", "format": "@outlier_countries[list_of_strings] where each string in list_of_strings is the name of a country that is an outlier according to the IQR rule.", "file_name": "gapminder_gdp_asia.csv"}
{"id": 255, "question": "Calculate the mean and standard deviation of the gross domestic product per capita in the year 2007 for all countries in the dataset. Round your answers to 2 decimal places.", "concepts": ["Summary Statistics"], "constraints": "Perform arithmetic mean and standard deviation calculations on the 'gdpPercap_2007' column of the dataset. Round your answer to two decimal places. Do not use modes, medians, or any other form of average.", "format": "@mean_gdp2007[float], @standard_deviation_gdp2007[float] where each float is a positive number rounded to two decimal places.", "file_name": "gapminder_gdp_asia.csv"}
{"id": 258, "question": "Explore the distribution of the gross domestic product per capita in the year 1972 for all countries in the dataset. Additionally, calculate the mean, median, and standard deviation of the data, and perform feature engineering by creating a new feature that represents the difference between the gross domestic product per capita in the year 1972 and the average GDP per capita from 1952 to 2007.", "concepts": ["Distribution Analysis", "Summary Statistics", "Feature Engineering"], "constraints": "Calculate the mean, median, and standard deviation of the gross domestic product per capita in the year 1972 for all countries in the dataset with the precision up to 2 decimal points. \nThe distribution analysis should be conducted via the Kolmogorov-Smirnov test, with a significance level (alpha) of 0.05. Report the p-value associated with the test.\nThe created new feature should be a column of the dataset named \"GDP Change\".", "format": "@mean[mean]\n@median[median]\n@std_dev[std_dev]\n@ks_test_p_value[ks_test_p_value]\nwhere \"mean\", \"median\", and \"std_dev\" are numbers rounded to two decimal places.\nwhere \"std_dev\" is a number rounded to four decimal places.", "file_name": "gapminder_gdp_asia.csv"}
{"id": 268, "question": "Are the MEANPOT values normally distributed in the dataset?", "concepts": ["Distribution Analysis"], "constraints": "Determine the normality of the values in the MEANPOT column using the Shapiro-Wilk test for normality. Consider the values to be normally distributed if the p-value is greater than 0.05. Report your findings as \"Normal\" if the p-value is greater than 0.05 and \"Not Normal\" otherwise. Report the p-value as well.", "format": "@normality_test_result[A string that should be either \"Normal\" or \"Not Normal\"] @p_value[The Shapiro-Wilk test p-value, rounded to three decimal places]", "file_name": "3901.csv"}
{"id": 269, "question": "Is there any correlation between the TOTUSJH and TOTUSJZ columns in the dataset?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient between the TOTUSJH and TOTUSJZ columns. Use a two-tailed test with a significance level of 0.05 to determine the statistical significance. If the p-value is less than 0.05, report the relationship as either \"Positive Correlation\", \"Negative Correlation\" or \"No Correlation\", based on the sign and magnitude of the correlation coefficient. If the p-value is greater than or equal to 0.05, report \"No Significant Correlation\".", "format": "@correlation_type[A string that should be either \"Positive Correlation\", \"Negative Correlation\", \"No Correlation\", or \"No Significant Correlation\"] @correlation_coefficient[The Pearson correlation coefficient, rounded to two decimal places] @p_value[The p-value of the correlation test, rounded to three decimal places]", "file_name": "3901.csv"}
{"id": 271, "question": "Perform comprehensive data preprocessing for the dataset by:\n1. Removing any duplicate entries.\n2. Filling in missing values in the USFLUX column with the mean value of the column.\n3. Transforming the MEANJZH column by applying the logarithm function (base 10).\n4. Normalizing the TOTUSJZ column using Min-Max normalization.", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "When applying the logarithm function, add a small constant (1e-10) to the MEANJZH column to avoid infinity. The Min-Max normalization needs to transform the TOTUSJZ values to the range 0 to 1.", "format": "Return 4 values: @clean_entries[Number of entries after cleaning duplicates], @mean_USFLUX[Mean of the USFLUX column after filling missing values, rounded to two decimal places], @log_MEANJZH[First entry of transformed MEANJZH column, rounded to three decimal places], @norm_TOTUSJZ[First entry of normalized TOTUSJZ column, rounded to three decimal places].", "file_name": "3901.csv"}
{"id": 272, "question": "Create a new feature named \"TOTUSJZ_TOTUSJH_RATIO\" by dividing the TOTUSJZ column by the TOTUSJH column. Calculate the mean and standard deviation of this new feature.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Add a small constant (1e-10) to the denominator (TOTUSJH column) to avoid dividing by zero.", "format": "Return 2 values: @mean_ratio[Mean of the TOTUSJZ_TOTUSJH_RATIO column, rounded to two decimal places], @stddev_ratio[Standard deviation of the TOTUSJZ_TOTUSJH_RATIO column, rounded to two decimal places].", "file_name": "3901.csv"}
{"id": 273, "question": "Perform a correlation analysis between the MEANGAM and MEANGBT columns. Additionally, for the correlated variables, identify any outliers in the MEANGAM column using the Z-score method and a threshold of 3 for the absolute Z-score.", "concepts": ["Correlation Analysis", "Outlier Detection"], "constraints": "1. Use the Pearson correlation coefficient to assess the correlation between MEANGAM and MEANGBT columns.\n2. Define outliers as those data points in the MEANGAM column where the absolute Z-score exceeds 3.", "format": "1. @correlation_coefficient[correlation_value] where \"correlation_value\" should be a number between -1 and 1, rounded to 3 decimal places.\n2. @outlier_count[outlier_total] where \"outlier_total\" denotes the total number of identified outliers in the MEANGAM column.\n3. @outlier_list[outlier_values_list] where \"outlier_values_list\" is a list of the identified outlier values in MEANGAM column, rounded to 2 decimal places.", "file_name": "3901.csv"}
{"id": 275, "question": "Perform a comprehensive analysis of the dataset by:\n1. Removing any duplicate entries.\n2. Filling in missing values in the USFLUX column with the mean value of the column.\n3. Creating a new feature named \"MEANGAM_MEANGBZ_DIFF\" by subtracting the MEANGBZ column from the MEANGAM column.\n4. Applying machine learning techniques to predict the values in the TOTUSJH column using the MEANJZH, TOTUSJZ, and MEANGBT columns. You will need to use a Random Forest Regressor with 100 trees for this task.", "concepts": ["Comprehensive Data Preprocessing", "Feature Engineering", "Machine Learning"], "constraints": "1. Remove duplicates based on the entire row.\n2. Missing values in the USFLUX column should be replaced with the mean of the same column.\n3. Use the Random Forest Regressor as the machine learning model.\n4. The Random Forest Regressor should have 100 trees.\n5. The independent variables for the prediction should be the MEANJZH, TOTUSJZ, and MEANGBT columns.\n6. The dependent or target variable for the prediction should be the TOTUSJH column.", "format": "1. @duplicate_count[duplicate_total] where \"duplicate_total\" should be an integer indicating the number of duplicate rows removed.\n2. @usflux_mean[mean_value] where \"mean_value\" should be a number rounded to 2 decimal places.\n3. @new_feature_mean[new_feature_mean] where \"new_feature_mean\" is the mean of the new feature \"MEANGAM_MEANGBZ_DIFF\", rounded to 2 decimal places.\n4. @model_accuracy[model_accuracy] where \"model_accuracy\" is the accuracy of the Random Forest Regressor model, should be a percentage rate between 0 and 100, rounded to 3 decimal places.", "file_name": "3901.csv"}
{"id": 277, "question": "Is there any correlation between the MedInd and LarInd columns in the given dataset? If yes, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson's correlation coefficient (r), a statistical measure that calculates the strength of the relationship between the relative movements of two variables, between the MedInd and LarInd columns. The Pearson's correlation coefficient should be rounded to 4 decimal places.", "format": "@correlation_coefficient[correlation_value] where \"correlation_value\" is a signed numeric value between -1 and 1, rounded to 4 decimal places.", "file_name": "veracruz 2016.csv"}
{"id": 278, "question": "Are there any outliers in the Agri column of the dataset? If yes, how would you detect them using Z-scores?", "concepts": ["Outlier Detection"], "constraints": "Calculate the Z-scores for the Agri column values. Any data point that has a Z-score greater than 3 or less than -3 should be considered as an outlier.", "format": "@outliers_count[outliers_value] where \"outliers_value\" is a non-negative integer representing the count of outliers detected based on the Z-score calculation.", "file_name": "veracruz 2016.csv"}
{"id": 280, "question": "Is there any correlation between the MedInd and LarInd columns in the given dataset? If yes, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) between MedInd and LarInd columns. Use the 'corr' function from Python's Pandas library.", "format": "@correlation[r_value] where \"r_value\" is a float number between -1 and 1, rounded to two decimal places.", "file_name": "veracruz 2016.csv"}
{"id": 281, "question": "Are there any outliers in the Agri column of the dataset? If yes, how would you detect them using Z-scores?", "concepts": ["Outlier Detection"], "constraints": "Detect the outliers in the Agri column using Z-scores. Use 3 as the threshold for Z-scores. A data point with a Z-score greater than 3 or less than -3 should be considered an outlier. Count the number of outliers detected.", "format": "@outliers_count[outliers] where \"outliers\" is an integer representing the number of detected outliers.", "file_name": "veracruz 2016.csv"}
{"id": 282, "question": "Perform correlation analysis on the given dataset to determine if there is any relationship between the Agri and Residential columns. Additionally, explore the distribution of the Agri column and identify any outliers using z-score as the outlier detection method. Treat any value which has z-score above 3 as an outlier.", "concepts": ["Correlation Analysis", "Distribution Analysis", "Outlier Detection"], "constraints": "Calculate the Pearson correlation coefficient to assess the linear relationship between Agri and Residential columns. Treat a value as an outlier if the z-score is above 3. Do not consider any other method for outlier detection. Use scipy's pearsonr method for correlation calculation.", "format": "@correlation_coefficient[r_value]\\n@number_of_outliers[number_of_outliers]\\n where \"r_value\" is a number between -1 and 1, rounded to two decimal places. \"number_of_outliers\" is an integer representing the number of outliers found in the Agri column.", "file_name": "veracruz 2016.csv"}
{"id": 294, "question": "1. What is the mean value of the \"nsnps\" column?", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean by summing all the \"nsnps\" values and dividing by the number of rows in the table (2822). Exclude any null or NaN values from the calculation. Round the result to the nearest hundredths place.", "format": "@mean_nsnps[mean_nsnps_value], where \"mean_nsnps_value\" is a number rounded to two decimal places.", "file_name": "ts-sc4-wi100000-sl25000-Qrob_Chr05.tree_table.csv"}
{"id": 295, "question": "2. Are there any outliers in the \"end\" column? If yes, how many are there and what are their indices?", "concepts": ["Outlier Detection"], "constraints": "Consider a value to be an outlier if it lies beyond 1.5 times the interquartile range (IQR) above the third quartile or below the first quartile. Calculate the IQR as the difference between the value at the 75th percentile (Q3) and the value at the 25th percentile (Q1) for the \"end\" column. Find the indices of all outliers.", "format": "@total_outliers[total_outliers_count] @outliers_indices[outliers_indices_list], where \"total_outliers_count\" is a whole number and \"outliers_indices_list\" is a list of integer values.", "file_name": "ts-sc4-wi100000-sl25000-Qrob_Chr05.tree_table.csv"}
{"id": 297, "question": "1. Is there a significant difference in the mean value of the \"nsnps\" column between the rows with null values in the \"tree\" column and the rows without null values in the \"tree\" column? If yes, what is the p-value of the statistical test?", "concepts": ["Summary Statistics", "Comprehensive Data Preprocessing"], "constraints": "Calculate the mean value for the rows where \"tree\" is null and the rows where \"tree\" is not null separately.\nPerform an independent two-sample t-test to compare these two groups. Use a significance level (alpha) of 0.05.\nReport the p-value associated with the t-test. \nConsider there is a significant difference if the p-value is less than 0.05.", "format": "@mean_with_tree_null[mean]\n@mean_with_tree_notnull[mean]\n@pvalue[p_value]\nwhere \"mean\" is a number rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.", "file_name": "ts-sc4-wi100000-sl25000-Qrob_Chr05.tree_table.csv"}
{"id": 298, "question": "2. Perform a distribution analysis on the \"nsamplecov\" column. Determine whether the distribution adheres to a normal distribution and calculate the skewness and kurtosis values.", "concepts": ["Distribution Analysis"], "constraints": "Test the normality of the data using Shapiro-Wilk Test. Use a significance level (alpha) of 0.05.\nReport the p-value associated with the normality test. \nConsider the distribution to be normal if the p-value is larger than 0.05.\nCalculate the skewness and kurtosis values.", "format": "@is_normal[is_normal]\n@skewness[skewness]\n@kurtosis[kurtosis]\nwhere \"is_normal\" is a string, either \"yes\" or \"no\" according to the normality test result.\nwhere \"skewness\" and \"kurtosis\" are numbers rounded to two decimal places.", "file_name": "ts-sc4-wi100000-sl25000-Qrob_Chr05.tree_table.csv"}
{"id": 300, "question": "1. Is there a correlation between the \"nsnps\" and \"nsamplecov\" columns? Calculate the Pearson correlation coefficient (r) to assess the strength of the correlation. Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. If the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "concepts": ["Correlation Analysis", "Comprehensive Data Preprocessing"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between \"nsnps\" and \"nsamplecov\". Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. Consider the relationship to be correlated if the p-value is less than 0.05. If the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value]\n@p_value[p_value]\n@correlation[colleration]\nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"colleration\" is a string that can either be \"correlated\" or \"not correlated\" based on the conditions specified in the constraints.", "file_name": "ts-sc4-wi100000-sl25000-Qrob_Chr05.tree_table.csv"}
{"id": 301, "question": "2. Conduct a comprehensive data preprocessing on the dataset, including cleaning, transforming, and handling missing values. After preprocessing, calculate the new minimum and maximum values for the \"start\" column.", "concepts": ["Comprehensive Data Preprocessing", "Summary Statistics"], "constraints": "Conduct data preprocessing such as handling missing values by removing rows with null values, and standardizing \"start\" column. Calculate the minimum and maximum values for the \"start\" column after preprocessing.", "format": "@minimum_start[minimum_value]\n@maximum_start[maximum_value]\nwhere \"minimum_value\" and \"maximum_value\" are integers representing the range of the \"start\" column after preprocessing.", "file_name": "ts-sc4-wi100000-sl25000-Qrob_Chr05.tree_table.csv"}
{"id": 304, "question": "Check if the fare variable follows a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Use the Shapiro-Wilk test to check for normality. The null hypothesis for this test is that the data is normally distributed. If the p-value is less than 0.05, reject the null hypothesis and conclude that the data is not normally distributed. If the p-value is greater than 0.05, fail to reject the null hypothesis and conclude that the data is normally distributed.", "format": "@normality_test_result[normality_test_result] where \"normality_test_result\" is a boolean that denotes whether the fare variable follows a normal distribution (True) or not (False).", "file_name": "titanic.csv"}
{"id": 305, "question": "Calculate the correlation coefficient between age and fare.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient to assess the strength and direction of the linear relationship between age and fare. Ignore any missing values in the age or fare columns. The correlation coefficient should be calculated to two decimal places.", "format": "@correlation_coefficient[correlation_coefficient] where \"correlation_coefficient\" is a number between -1 and 1, rounded to two decimal places, representing the strength and direction of the linear relationship between age and fare.", "file_name": "titanic.csv"}
{"id": 307, "question": "Perform comprehensive data preprocessing on the dataset. This should include cleaning any missing values in the age and embarked variables by deleting the respective rows, normalizing the fare variable by using min-max normalization, encoding the sex variable into two categories (Male = 0, Female = 1), and generating a new feature called \"FamilySize\" by adding the SibSp and Parch variables. Then, display the sum of the new FamilySize variable.", "concepts": ["Comprehensive Data Preprocessing", "Feature Engineering"], "constraints": "Missing values in age and embarked variables should be handled by deletion. The min-max normalization should be used for the fare variable. Binary encoding (Male = 0, Female = 1) should be used for the sex variable. No additional data preprocessing steps should be carried out.", "format": "@family_size_sum[sum] where sum refers to the sum of the FamilySize feature, rounded to the nearest whole number.", "file_name": "titanic.csv"}
{"id": 308, "question": "Use feature engineering techniques to create a new variable \"Title\" by extracting the title from the Name column (e.g., \"Mr.\", \"Mrs.\", \"Miss\"). Only consider the following titles: 'Mr.', 'Mrs.', 'Miss.' and 'Master.' (titles followed by a dot). Then, calculate the average fare for each unique title to two decimal places.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Only the titles 'Mr.', 'Mrs.', 'Miss.' and 'Master.' should be considered. Titles that do not fall within these four categories should be eliminated.", "format": "@average_fare_Mr[value1], @average_fare_Mrs[value2], @average_fare_Miss[value3], @average_fare_Master[value4], where value1, value2, value3, and value4 represent the average fares for 'Mr.', 'Mrs.', 'Miss.', and 'Master.', respectively. All values should be rounded to two decimal places.", "file_name": "titanic.csv"}
{"id": 309, "question": "Perform distribution analysis on the age and fare variables separately, then calculate and compare the skewness and kurtosis values for each. Additionally, count the number of values within one standard deviation from the mean, for both age and fare.", "concepts": ["Distribution Analysis", "Summary Statistics"], "constraints": "Use Python's scipy library for your analyses. Calculate skewness and kurtosis values using the scipy.stats.skew() and scipy.stats.kurtosis() functions, respectively, with the default settings. Count the number of values within one standard deviation from the mean by applying standard formula: mean - stdev <= x <= mean + stdev.", "format": "@age_skewness[skewness_value]   \n@age_kurtosis[kurtosis_value] \n@age_values_within_one_stdev[number]\n@fare_skewness[skewness_value] \n@fare_kurtosis[kurtosis_value] \n@fare_values_within_one_stdev[number]\nwhere \"skewness_value\", \"kurtosis_value\" are floats with two decimals, \"number\" is a positive integer.", "file_name": "titanic.csv"}
{"id": 310, "question": "Perform a correlation analysis on the numerical variables (age, fare, SibSp, Parch) to identify any significant relationships. Calculate the Pearson correlation coefficients between all pairs of these variables and identify the pair with the strongest positive correlation.", "concepts": ["Correlation Analysis"], "constraints": "Use Python's pandas library for correlation analysis. Calculate the Pearson correlation coefficients using the 'pandas.DataFrame.corr()' function with the default method (Pearson). The pair should not compare a variable with itself.", "format": "@strongest_correlation_pair[pair]\n@strongest_correlation_coefficient[coefficient]\nwhere \"pair\" is a list of two strings representing variables names,\n\"coefficient\" is a float between -1 and 1, rounded to two decimal places.", "file_name": "titanic.csv"}
{"id": 320, "question": "What is the mean of the EVENTMSGTYPE column?", "concepts": ["Summary Statistics"], "constraints": "To calculate the arithmetic mean of all the observations in the EVENTMSGTYPE column. Ignore any missing values or outliers when calculating the mean.", "format": "@mean_eventmsgtype[mean]", "file_name": "0020200722.csv"}
{"id": 321, "question": "Are there any outliers in the SCOREMARGIN column? If so, how many?", "concepts": ["Outlier Detection"], "constraints": "You should use the IQR method to define an outlier. An observation is considered an outlier if it lies 1.5 IQR below the first quartile or 1.5 IQR above the third quartile. Since SCOREMARGIN contains string values, first convert the SCOREMARGIN data into integer or float and then clean the data by ignoring any non-numeric characters or punctuation marks.", "format": "@outlier_count[count]", "file_name": "0020200722.csv"}
{"id": 323, "question": "What is the average event duration (in seconds) for each event type (EVENTMSGTYPE)? Provide the result as a DataFrame with the event type and its corresponding average duration.", "concepts": ["Summary Statistics", "Distribution Analysis"], "constraints": "Converting WCTIMESTRING to seconds. All time must be within the same day (00:00:00 - 23:59:59). Treat all events with negative duration (event ends before it starts) as missing values and exclude them from calculation.", "format": "@average_duration[DataFrame] The DataFrame should have two columns: EVENTMSGTYPE and Average_Duration. Average_Duration should be rounded to two decimal places.", "file_name": "0020200722.csv"}
{"id": 324, "question": "Are there any missing values in the dataset? If so, which column has the highest number of missing values?", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "Columns with missing values: HOMEDESCRIPTION, NEUTRALDESCRIPTION, VISITORDESCRIPTION, SCORE, SCOREMARGIN.", "format": "@max_missing_values[column_name] The output should be a string containing the name of the column with the highest number of missing values.", "file_name": "0020200722.csv"}
{"id": 326, "question": "Create a new feature named \"event_hour\" that represents the hour of the day (in 24-hour format) when each event occurred. Perform a correlation analysis to determine if there is a relationship between the event hour and the event type (EVENTMSGTYPE).", "concepts": ["Feature Engineering", "Correlation Analysis"], "constraints": "{\nExtract the hour from the WCTIMESTRING column using string manipulation functions.\nCalculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between event_hour and EVENTMSGTYPE.\nAssess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05.\nReport the p-value associated with the correlation test.\nConsider the relationship to be positive if the p-value is less than 0.05 and the correlation coefficient is greater than or equal to 0.5.\nConsider the relationship to be negative if the p-value is less than 0.05 and the correlation coefficient is less than or equal to -0.5.\nIf the p-value is greater than or equal to 0.05, report that there is no significant correlation.\n}", "format": "{\n@correlation_coefficient[r_value]\n@p_value[p_value]\n@relationship[relationship]\nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"relationship\" is a string that can either be \"positive\", \"negative\", or \"none\" based on the conditions specified in the constraints.", "file_name": "0020200722.csv"}
{"id": 337, "question": "2. Is the distribution of the median sold price per square foot skewed? If yes, is it positively or negatively skewed?", "concepts": ["Distribution Analysis"], "constraints": "For determining the skewness, consider only non-null values. Use the Fisher-Pearson standardized moment coefficient for assessing the skewness. A skewness value > 0 means that there is more weight in the right tail of the distribution (positive skewness). A skewness value < 0 means that there is more weight in the left tail of the distribution (negative skewness). Calculate the skewness up to two decimal places.", "format": "@skewness_coefficient[skewness_coefficient]\n@skewness_type[skewness_type]\nwhere \"skewness_coefficient\" is a number greater than or equal to -1 and less than or equal to 1, rounded to two decimal places.\nwhere \"skewness_type\" is a string that could be either \"Positive Skewness\", \"Negative Skewness\", or \"No Skewness\".", "file_name": "Zip_MedianSoldPricePerSqft_AllHomes.csv"}
{"id": 338, "question": "3. Is there a correlation between the size rank of a region and the median sold price per square foot? If yes, is it a positive or negative correlation?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation between the variables size rank and median sold price per square foot, considering only non-null values. A correlation value > 0 indicates a positive correlation, while a value < 0 indicates a negative correlation. A correlation value close to zero indicates no correlation. Calculate the correlation coefficient up to three decimal places.", "format": "@correlation_coefficient[correlation_coefficient]\n@correlation_type[correlation_type]\nwhere \"correlation_coefficient\" is a number between -1 and 1, rounded to three decimal places.\nwhere \"correlation_type\" is a string that could be either \"Positive Correlation\", \"Negative Correlation\", or \"No Correlation\".", "file_name": "Zip_MedianSoldPricePerSqft_AllHomes.csv"}
{"id": 339, "question": "3. How many regions have a median sold price per square foot that is more than 2 standard deviations above the mean in 2020?", "concepts": ["Summary Statistics", "Outlier Detection"], "constraints": "{\n    Calculate the mean and the standard deviation for the entire 2020 data.\n    Regions are counted if their median sold price per square foot is more than 2 standard deviations above the mean.\n}", "format": "{\n    @region_count[region count]\n    where \"region count\" is an integer number.", "file_name": "Zip_MedianSoldPricePerSqft_AllHomes.csv"}
{"id": 349, "question": "Calculate the mean age of the passengers.", "concepts": ["Summary Statistics"], "constraints": "The mean should be calculated on the full 'Age' column with no filtering. Use the default parameter values for pandas.DataFrame.mean method; in particular, ignore NA/null values and compute the arithmetic mean along the specified axis.", "format": "@mean_age[mean_age] where \"mean_age\" is a floating point number representing the calculated mean age, rounded to two decimal places.", "file_name": "test_x.csv"}
{"id": 350, "question": "Check if the Fare column follows a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Perform a Shapiro-Wilk test for normality on the 'Fare' column. Use a significance level (alpha) of 0.05 to determine if the 'Fare' column is normally distributed. The 'Fare' column is considered to be normally distributed if the p-value from the Shapiro-Wilk test is greater than 0.05.", "format": "@is_normal[is_normal] where \"is_normal\" is a boolean value: True means the 'Fare' column follows a normal distribution; False means it does not follow a normal distribution.", "file_name": "test_x.csv"}
{"id": 351, "question": "Determine the correlation coefficient between Age and Fare.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient between 'Age' and 'Fare'. Use pandas.DataFrame.corr method with the 'pearson' method. Ignore NA/null values.", "format": "@correlation_coefficient[correlation_coefficient] where \"correlation_coefficient\" is a floating point number representing the calculated correlation coefficient, rounded to two decimal places.", "file_name": "test_x.csv"}
{"id": 352, "question": "Identify any outliers in the Fare column using the Z-score method.", "concepts": ["Outlier Detection"], "constraints": "Calculate the Z-score for each value in the Fare column. \nConsider a value to be an outlier if its Z-score is greater than 3 or less than -3.\nReturn the list of outlier values sorted in ascending order.", "format": "@fare_outliers[outliers_list]\nwhere \"outliers_list\" is a list of integers sorted in ascending order.", "file_name": "test_x.csv"}
{"id": 353, "question": "Normalize the Age and Fare columns using Min-Max scaling.", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "Apply Min-Max scaling to both the Age and Fare columns.\nMin-Max scaling formula: X_norm = (X - Xmin) / (Xmax - Xmin), where Xmin and Xmax are the minimum and maximum values of the column respectively.\nRound the normalized values to two decimal places.\nReport the mean and standard deviation of the normalized columns.", "format": "@age_mean_norm[mean_norm_age] \n@age_stddev_norm[stddev_norm_age] \n@fare_mean_norm[mean_norm_fare] \n@fare_stddev_norm[stddev_norm_fare]\nwhere \"mean_norm_age\", \"stddev_norm_age\", \"mean_norm_fare\", \"stddev_norm_fare\" are rounded to two decimal places.", "file_name": "test_x.csv"}
{"id": 354, "question": "Create a new feature \"FamilySize\" by summing the IsAlone column with the number of siblings/spouses and number of parents/children on board.", "concepts": ["Feature Engineering"], "constraints": "Assume each passenger has at least one sibling/spouse and one parent/child on board, therefore, FamilySize = IsAlone + 1 (for sibling or spouse) + 1 (for parent or child).\nCompute the average FamilySize and round to one decimal place.", "format": "@average_familysize[avg_family_size]\nwhere \"avg_family_size\" is a number rounded to one decimal place.", "file_name": "test_x.csv"}
{"id": 355, "question": "Perform a linear regression analysis to predict fare based on age and passenger class.", "concepts": ["Correlation Analysis", "Machine Learning"], "constraints": "{\nUse the simple linear regression model where Fare is the dependent variable and Age and Pclass are the independent variables.\nConsider the relationship to be significant if the p-value is less than 0.05 for both variables (Age and Pclass).\nIf the p-value is greater than or equal to 0.05 for either variable, report that there is no significant relationship.\n}", "format": "{\n@coef_age[coef_age]\n@coef_pclass[coef_pclass]\n@relationship_age[relationship_age]\n@relationship_pclass[relationship_pclass]\nwhere \"coef_age\" and \"coef_pclass\" are the regression coefficients for the variables Age and Pclass respectively, rounded to two decimal places.\nwhere \"relationship_age\" and \"relationship_pclass\" are strings that can either be \"significant\" or \"not significant\" based on the conditions specified in the constraints.", "file_name": "test_x.csv"}
{"id": 359, "question": "Check if the distribution of wind speed in the weather dataset is skewed.", "concepts": ["Distribution Analysis"], "constraints": "For missing values in the \"wind speed\" column, use the 'dropna' method to remove these data points before calculations.\nDetermine the skewness using Pearson's First Coefficient of Skewness. \nReport whether the distribution is positively skewed, negatively skewed, or symmetric based on the obtained skewness value. \nAssume the distribution to be positively skewed if skewness value is > 0, negatively skewed if skewness is < 0, and symmetric if skewness is 0.", "format": "@skewness_value[skew_value]\n@skewness_type[type_value]\nwhere \"skew_value\" is a float number rounded to 2 decimal places.\nwhere \"type_value\" is a string that can be either \"positive\", \"negative\", or \"symmetric\" based on the conditions specified in the constraints.", "file_name": "weather_train.csv"}
{"id": 360, "question": "Determine the correlation coefficient between temperature and humidity in the weather dataset.", "concepts": ["Correlation Analysis"], "constraints": "For missing values in either the \"temperature\" or \"humidity\" columns, use the 'dropna' method to remove these datapoints before calculations.\nCalculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between temperature and humidity.\nConsider a correlation to be strong if the absolute value of r is greater than or equal to 0.7, moderate if it is between 0.3 and 0.7, and weak if it is less than 0.3.", "format": "@correlation_coefficient[r_value]\n@correlation_strength[strength_value]\nwhere \"r_value\" is a float number between -1 and 1, rounded to 2 decimal places.\nwhere \"strength_value\" is a string that can be either \"strong\", \"moderate\", or \"weak\" based on the conditions specified in the constraints.", "file_name": "weather_train.csv"}
{"id": 361, "question": "Identify and remove outliers in the wind speed column of the weather dataset. Use the Z-score method to detect outliers with a threshold of 3 and create a new dataframe without the outlier values.", "concepts": ["Outlier Detection", "Comprehensive Data Preprocessing"], "constraints": "{\nUse a Z-score threshold of 3 for outlier identification.\nIf the Z-score of a value is higher than 3 or lower than -3, consider it as an outlier.\nAfter outlier detection, drop these rows and create a new dataframe.\n}", "format": "{\n@outlier_count[integer]\nwhere \"integer\" represents the total count of outliers detected.", "file_name": "weather_train.csv"}
{"id": 363, "question": "Train a machine learning model to predict the amount of sunlight (sun column) based on the temperature, humidity, and wind speed columns. Use a simple linear regression model. Split the dataset into a 70-30 training-testing split, and evaluate the model's performance using the mean squared error.", "concepts": ["Machine Learning"], "constraints": "{\nUse a simple linear regression model for training.\nSplit the data into training and testing sets in a 70-30 ratio.\nEvaluate the model using mean squared error (make sure your mean squared error is not negative).\n}", "format": "{\n@mean_squared_error[mse]\nwhere \"mse\" is a number rounded to 2 decimal places representing the mean squared error of the predictions.", "file_name": "weather_train.csv"}
{"id": 372, "question": "1. Find the mean and median of the \"Trips over the past 24-hours (midnight to 11:59pm)\" column.", "concepts": ["Summary Statistics"], "constraints": "Both mean and median should be calculated by the built-in Python function, not manually. The result should be rounded to two decimal places.", "format": "@mean[mean_value] @median[median_value] where \"mean_value\" and \"median_value\" are numbers, rounded to two decimal places.", "file_name": "2014_q4.csv"}
{"id": 374, "question": "3. Identify any outliers in the \"Total Annual Memberships Sold\" column using the Z-score method.", "concepts": ["Outlier Detection"], "constraints": "Calculate the Z-scores of the \"Total Annual Memberships Sold\" column. A Z-score above 3 or below -3 is considered as an outlier. Return the indices of all outliers.", "format": "@outliers[outliers_indices] where \"outliers_indices\" is a list of integers, each representing the line number of an outlier in the original csv file. The list should be sorted in ascending order.", "file_name": "2014_q4.csv"}
{"id": 375, "question": "2. Perform a distribution analysis on the \"Trips over the past 24-hours (midnight to 11:59pm)\" column. Determine if the distribution adheres to a normal distribution or it exhibits skewness, heavy tails, or bimodality.", "concepts": ["Distribution Analysis"], "constraints": "Use Python's scipy library to perform a Shapiro-Wilk test to check for normality. The Shapiro-Wilk test tests the null hypothesis that the data was drawn from a normal distribution. For skewness and kurtosis use Python's scipy library. Results for skewness and kurtosis are defined as 'heavy' if they fall outside the range of -0.5 to 0.5.", "format": "@shapiro_w[test_statistic], @p_value[p_value], @skewness[skewness_value], @kurtosis[kurtosis_value] where each answer is a floating number to four decimal places. If p-value is less than 0.05, the distribution is not normal.", "file_name": "2014_q4.csv"}
{"id": 376, "question": "3. Perform feature engineering on the dataset by creating a new column called \"Trips per Membership\". Calculate the number of trips per membership for each date and store the result in the new column. Determine the mean and median of the \"Trips per Membership\" column. Compare the values with the mean and median of the \"Trips over the past 24-hours (midnight to 11:59pm)\" column to analyze the impact of membership on trip frequency.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "The \"Trips per Membership\" is calculated as the ratio of \"Trips over the past 24-hours (midnight to 11:59pm)\" to \"Total Annual Memberships Sold\". Be sure to handle divisions by zero appropriately by replacing the infinity values with zero. Calculate the mean and median using Python's pandas library functions with all final results must be rounded off to 2 decimal places.", "format": "@trips_per_membership_mean[mean], @trips_per_membership_median[median], @trips_per_day_mean[mean], @trips_per_day_median[median] where each answer is a floating number rounded to two decimal places.", "file_name": "2014_q4.csv"}
{"id": 378, "question": "2. Preprocess the dataset by handling missing values in the \"24-Hour Passes Purchased (midnight to 11:59 pm)\" and \"7-Day Passes Purchased (midnight to 11:59 pm)\" columns. Use the mean imputation method to fill in the missing values. Then, analyze the distribution of the \"Trips over the past 24-hours (midnight to 11:59pm)\" column before and after the missing value imputation process. Evaluate if the imputation has significantly affected the distribution and what implications it has on the dataset analysis.", "concepts": ["Comprehensive Data Preprocessing", "Distribution Analysis"], "constraints": "Use the mean imputation method to fill in missing values for both the \"24-Hour Passes Purchased (midnight to 11:59 pm)\" and \"7-Day Passes Purchased (midnight to 11:59 pm)\" columns. Then, calculate the mean, median, standard deviation, skewness, and kurtosis for the \"Trips over the past 24-hours (midnight to 11:59pm)\" column before and after imputation.", "format": "@pre_mean[mean_before]\n@pre_median[median_before]\n@pre_sd[sd_before]\n@pre_skewness[skew_before]\n@pre_kurtosis[kurt_before]\n@post_mean[mean_after]\n@post_median[median_after]\n@post_sd[sd_after]\n@post_skewness[skew_after]\n@post_kurtosis[kurt_after]\nwhere all variables represent the corresponding statistical values calculated before (prefix: pre) and after (prefix: post) the imputation, each rounded to two decimal places.", "file_name": "2014_q4.csv"}
{"id": 408, "question": "Is there a correlation between the fare paid by the passenger and their age? If so, is it a linear or nonlinear correlation?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between 'Fare' and 'Age'.\nAssess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05.\nReport the p-value associated with the correlation test.\nConsider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5.\nConsider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.5.\nIf the p-value is greater than or equal to 0.05, report that there is no significant correlation.\nIgnore the null values in 'Age' while calculating the correlation.", "format": "@correlation_coefficient[r_value]\n@p_value[p_value]\n@relationship_type[relationship_type] \nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "titanic_train.csv"}
{"id": 409, "question": "How many missing values are there in the \"Cabin\" column?", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "Count the number of missing values in the 'Cabin' column in the dataset. Treat null values as missing values.", "format": "@missing_values[missing_values] where \"missing_values\" is an integer.", "file_name": "titanic_train.csv"}
{"id": 410, "question": "What is the distribution of ages among the male passengers who did not survive? Is it significantly different from the distribution of ages among the female passengers who did not survive?", "concepts": ["Distribution Analysis"], "constraints": "Calculating the distribution of ages should use a Kernel Density Estimation (KDE) method. Perform a two-sample Kolmogorov-Smirnov test to compare the distributions. Use a significance level (alpha) of 0.05. If the p-value is less than 0.05, conclude the distributions are significantly different. If the p-value is greater than or equal to 0.05, conclude the distributions are not significantly different.", "format": "@is_significantly_different[answer] where \"answer\" is a boolean indicating the result of the test. For example, if the distributions are significantly different, the answer should be \"True\". If not, the answer should be \"False\".", "file_name": "titanic_train.csv"}
{"id": 411, "question": "Are there any outliers in the fare paid by the passengers? If so, how many outliers are there and what is their range?", "concepts": ["Outlier Detection"], "constraints": "An outlier is identified based on the IQR method. An outlier is defined as a point that falls outside 1.5 times the IQR above the third quartile or below the first quartile.", "format": "@outlier_count[answer1] @outlier_range_low[answer2] @outlier_range_high[answer3] where \"answer1\" is the number of outliers, \"answer2\" is the lowest value among outliers and \"answer3\" is the highest value among outliers. All results should be rounded to 2 decimal places.", "file_name": "titanic_train.csv"}
{"id": 412, "question": "Create a new feature called \"FamilySize\" by adding the \"SibSp\" and \"Parch\" columns together. What is the mean \"FamilySize\" for passengers who survived versus passengers who did not survive?", "concepts": ["Feature Engineering"], "constraints": "Calculate the mean of \"FamilySize\" separately for the passengers who survived and the passengers who did not survive. \"FamilySize\" should be an integer value. The mean should be calculated rounding up to two decimal places.", "format": "@mean_familysize_survived[answer1] @mean_familysize_did_not_survive[answer2] where \"answer1\" is the mean \"FamilySize\" for passengers who survived and \"answer2\" is the mean \"FamilySize\" for passengers who did not survive. Both results should be rounded to 2 decimal places.", "file_name": "titanic_train.csv"}
{"id": 413, "question": "Is there a correlation between the ticket class (Pclass) and the fare paid by the passengers that embarked from Cherbourg (Embarked = 'C')?", "concepts": ["Correlation Analysis", "Comprehensive Data Preprocessing"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between Pclass and Fare for passengers who embarked from Cherbourg.\nAssess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.01.\nReport the p-value associated with the correlation test.\nConsider the relationship to be significant if the p-value is less than 0.01.\nIf the p-value is greater than or equal to 0.01, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value]\n@p_value[p_value]\n@relationship_significance[significance]\nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"significance\" is a string that can either be \"significant\" or \"not significant\" based on the conditions specified in the constraints.", "file_name": "titanic_train.csv"}
{"id": 414, "question": "What is the average age of passengers in each ticket class (Pclass)?", "concepts": ["Summary Statistics", "Comprehensive Data Preprocessing"], "constraints": "Calculate the average (mean) age of the passengers in each class separately (Pclass = 1, Pclass = 2, Pclass = 3).\nIgnore the rows with missing age.\nRound the average age to two decimal places.", "format": "@first_class_average_age[average_age_1]\n@second_class_average_age[average_age_2]\n@third_class_average_age[average_age_3]\nwhere \"average_age_1\" is the average age of the first-class passengers, rounded to two decimal places.\nwhere \"average_age_2\" is the average age of the second-class passengers, rounded to two decimal places.\nwhere \"average_age_3\" is the average age of the third-class passengers, rounded to two decimal places.", "file_name": "titanic_train.csv"}
{"id": 415, "question": "What is the distribution of fare paid by male passengers who survived? Are there any significant differences in the fare paid by male passengers who survived compared to male passengers who did not survive?", "concepts": ["Distribution Analysis", "Comprehensive Data Preprocessing"], "constraints": "Calculate the mean and standard deviation of fares paid by male passengers who survived and did not survive separately.\nConduct an independent sample t-test to compare the means of these two groups.\nUse a significance level of 0.05.\nReport whether there is a significant difference in the means based on the p-value of the test.", "format": "@survived_fare_mean[mean_survived]\n@survived_fare_std[std_survived]\n@not_survived_fare_mean[mean_not_survived]\n@not_survived_fare_std[std_not_survived]\n@fare_difference_significance[significance]\nwhere \"mean_survived\" is the mean fare of male passengers who survived, rounded to two decimal places.\nwhere \"std_survived\" is the standard deviation of fare of male passengers who survived, rounded to two decimal places.\nwhere \"mean_not_survived\" is the mean fare of male passengers who did not survive, rounded to two decimal places.\nwhere \"std_not_survived\" is the standard deviation of fare of male passengers who did not survive, rounded to two decimal places.\nwhere \"significance\" is a string that can either be \"significant\" or \"not significant\" based on the conditions specified in the constraints.", "file_name": "titanic_train.csv"}
{"id": 418, "question": "3. Are there any outliers in the trading volume of the asset or commodity? If yes, how can they be detected?", "concepts": ["Outlier Detection"], "constraints": "Convert 'Volume' column to numerical values. Calculate the Z-scores for the 'Volume' column. Assume values with Z-scores greater than 3 or less than -3 as outliers. Calculate the absolute number of outliers.", "format": "@outliers_count[value] where 'value' is an integer, e.g @outliers_count[23]", "file_name": "bitconnect_price.csv"}
{"id": 419, "question": "1. Is there a significant difference in the mean opening prices between weekdays and weekends? Provide statistical evidence to support your answer.", "concepts": ["Summary Statistics", "Distribution Analysis"], "constraints": "Calculate the mean opening prices separately for weekdays (Monday to Friday) and weekends (Saturday and Sunday). Conduct a two-sample t-test to check if there is a statistically significant difference between these two means. Use a significance level (alpha) of 0.05. If the p-value is less than 0.05, conclude that there is a significant difference. If the p-value is greater than or equal to 0.05, conclude that there is no significant difference.", "format": "@weekday_mean_price[weekday_mean_open_price] @weekend_mean_price[weekend_mean_open_price] @p_value[p_value] @significance[significant_or_not] where \"weekday_mean_open_price\" and \"weekend_mean_open_price\" are numbers rounded to two decimal places. \"p_value\" is a number between 0 and 1, rounded to four decimal places. \"significant_or_not\" is a string that can either be 'Yes' or 'No' depending on whether the p-value is less than 0.05.", "file_name": "bitconnect_price.csv"}
{"id": 421, "question": "3. Perform comprehensive data preprocessing on the trading volume column. Handle any missing values and transform the data to a suitable format for further analysis.", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "Since it is explicitly stated that there are no missing values, this part can be skipped. For data transformation, convert the trading volume from a String to a numeric data type. After transformation, calculate the mean and median trading volumes.", "format": "@mean_volume[mean_volume] @median_volume[median_volume] where \"mean_volume\" and \"median_volume\" are numbers. Round up to two decimal places. The domain of value depends on the actual data in the trading volume column, but it should be greater than or equal to zero.", "file_name": "bitconnect_price.csv"}
{"id": 423, "question": "2. Perform feature engineering on the given dataset to create a new feature 'Volatility' that is calculated using the formula: Volatility = (High Price - Low Price) / Open Price. What is the Pearson correlation coefficient between Volatility and trading volume? Interpret the result.", "concepts": ["Feature Engineering", "Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between the new feature 'Volatility' and trading volume. Consider the relationship to be positive if the r value is greater than or equal to 0.5. Consider the relationship to be negative if the r value is less than or equal to -0.5. Otherwise, report that there is no significant correlation.", "format": "@correlation_coefficient[correlation_coefficient], @relationship_type[type] where \"correlation_coefficient\" is a number between -1 and 1, rounded to two decimal places. \"type\" is a string that can be \"positive\", \"negative\", or \"none\" based on the conditions specified in the constraints.", "file_name": "bitconnect_price.csv"}
{"id": 424, "question": "3. Develop a machine learning model to classify the asset or commodity into different price categories (low, medium, high) based on the opening, high, and low prices. The boundaries for the categories are: Low(< 500), Medium(500 - 1000), High(> 1000). What are the accuracy of the model and the top three contributing features to the classification?", "concepts": ["Machine Learning", "Feature Engineering"], "constraints": "Use a Random Forest Classifier for the model and split the data into a 75% training set and 25% test set. Use out-of-the-box settings for the model. The accuracy should be calculated on the test set. Measures of feature importance should be based on the Gini importance or mean decrease impurity.", "format": "@accuracy[accuracy], @feature1[feature_name], @feature2[feature_name], @feature3[feature_name] where \"accuracy\" is the model accuracy rounded to two decimal places. \"feature_name\" is the name of the feature from the dataset, listed by the importance in descending order.", "file_name": "bitconnect_price.csv"}
{"id": 425, "question": "1. How many missing values are there in the \"max_sust_wind\" column?", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "Count the number of null values only, do not include non-null values that might be rendered as errors or irrelevant data.", "format": "@missing_values_count[number] where \"number\" is an integer representing the count of the missing values in the \"max_sust_wind\" column.", "file_name": "cost_data_with_errors.csv"}
{"id": 426, "question": "2. What is the maximum sustained wind speed recorded during the storm with the highest maximum storm category?", "concepts": ["Summary Statistics", "Correlation Analysis"], "constraints": "Firstly, identify the storm with the highest maximum storm category, neglecting any ties. If there are multiple storms with the same highest maximum storm category, choose the one that appears first in the given dataset. Then find the maximum sustained wind speed corresponding to this particular storm.", "format": "@max_wind_speed[number] where \"number\" is a float with two decimal places indicating the highest wind speed recorded for the storm with the highest maximum storm category.", "file_name": "cost_data_with_errors.csv"}
{"id": 427, "question": "3. How many storms have null values in the \"min_p\" column?", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "Count the number of entries which have the null value in the \"min_p\" column. Only the null values should be counted, and not any irrelevant or erroneous data that might be present.", "format": "@null_entries_count[number] where \"number\" is an integer indicating the count of null entries in the \"min_p\" column.", "file_name": "cost_data_with_errors.csv"}
{"id": 428, "question": "1. What is the average damage in USD caused by storms in each year from 2000 to 2010? Are there any significant differences in the average damage between years?", "concepts": ["Summary Statistics", "Distribution Analysis"], "constraints": "{\nCalculate the mean damage in USD for each year.\nPerform a one-way Analysis of Variance (ANOVA) to test whether there are significant differences in the average damage between years.\nThe significance level (alpha) for the ANOVA test should be 0.05.\nReport the p-value associated with the ANOVA test.\nIf the p-value is less than 0.05, infer that there are significant differences.\nIf the p-value is greater than or equal to 0.05, infer that there are no significant differences.\n}", "format": "{\n@average_damage[average_damage_from_2000, average_damage_from_2001, ..., average_damage_from_2010]\n@p_value[p_value]\n@difference_type[difference_type]\nwhere \"average_damage_from_year\" is the mean damage in USD for the corresponding year, rounded to 2 decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to 4 decimal places.\nwhere \"difference_type\" is a string that can either be \"significant\" or \"none\" based on the conditions specified in the constraints.", "file_name": "cost_data_with_errors.csv"}
{"id": 429, "question": "2. Is there a correlation between the maximum storm category achieved by a storm and the recorded damage in USD? If so, what is the strength and direction of the correlation?", "concepts": ["Correlation Analysis"], "constraints": "{\nCalculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between maximum storm category and damage in USD.\nUse a two-tailed test with a significance level (alpha) of 0.05 to assess the significance of the correlation. \nReport the p-value associated with the correlation test.\nIf the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5, infer the relationship to be linear.\nIf the p-value is less than 0.05 and the absolute value of r is less than 0.5, infer the relationship to be nonlinear.\nIf the p-value is greater than or equal to 0.05, report that there is no significant correlation.\n}", "format": "{\n@correlation_coefficient[r_value]\n@p_value[p_value]\n@relationship_type[relationship_type]\nwhere \"r_value\" is a number between -1 and 1, rounded to 2 decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to 4 decimal places.\nwhere \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "cost_data_with_errors.csv"}
{"id": 431, "question": "1. Is there a relationship between the maximum storm category achieved by a storm and the duration of its activity? How does this relationship differ between storms causing high and low damage?", "concepts": ["Correlation Analysis", "Comprehensive Data Preprocessing"], "constraints": "{\nCalculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between maximum storm category and the duration of activity for storms that caused damage above and below the median damage level.\nAssess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05.\nReport the p-value associated with the correlation test.\nConsider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.4.\nConsider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.4.\nIf the p-value is greater than or equal to 0.05, report that there is no significant correlation.\n}", "format": "{\n@high_damage_correlation_coefficient[r_value]\n@high_damage_p_value[p_value]\n@high_damage_relationship_type[relationship_type]\n@low_damage_correlation_coefficient[r_value]\n@low_damage_p_value[p_value]\n@low_damage_relationship_type[relationship_type]\nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "cost_data_with_errors.csv"}
{"id": 432, "question": "2. Can we predict the maximum sustained wind speed based on the recorded damage in USD and the minimum recorded pressure? What is the performance of the prediction model?", "concepts": ["Machine Learning", "Comprehensive Data Preprocessing"], "constraints": "{\nUse a linear regression model for prediction.\nUse 80% of the dataset for training and the rest for testing.\nUse Mean Squared Error (MSE) as the evaluation metric to assess the model's performance.\nHandle missing values in the \"max_sust_wind\", \"damage_USD\", and \"min_p\" columns by imputing them with their respective column means.\n}", "format": "{\n@mean_squared_error[mse]\nwhere \"mse\" is the mean squared error of the model, rounded to four decimal places.", "file_name": "cost_data_with_errors.csv"}
{"id": 446, "question": "1. What is the mean wind speed in the dataset?", "concepts": ["Summary Statistics"], "constraints": "Calculate the arithmetic mean of WINDSPEED, excluding any null values. The mean must be calculated to three decimal places.", "format": "@mean_windspeed[mean_windspeed], where \"mean_windspeed\" is a number with a maximum of three decimal places.", "file_name": "baro_2015.csv"}
{"id": 447, "question": "2. Are there any outliers in the atmospheric pressure column (BARO)? If yes, how many outliers are there?", "concepts": ["Outlier Detection"], "constraints": "An outlier is any value that is more than 1.5 times the interquartile range above the third quartile or below the first quartile. Ignore null values.", "format": "@number_of_outliers[number_of_outliers], where \"number_of_outliers\" is an integer representing the total number of outliers detected under the conditions specified in the constraints.", "file_name": "baro_2015.csv"}
{"id": 449, "question": "1. What is the distribution of wind speeds (WINDSPEED) in the dataset? Is it normally distributed?", "concepts": ["Distribution Analysis"], "constraints": "Use the Shapiro-Wilk test to determine if the distribution is normal. Accept the null hypothesis that the data is normally distributed if the p-value is greater than 0.05, and reject it otherwise.", "format": "@shapiro_wilk_pvalue[p_value] @normal_distribution[yes/no] where \"p_value\" is a number between 0 and 1, rounded to four decimal places and \"normal_distribution\" is a string that can either be \"yes\" if p_value > 0.05 or \"no\" if p_value <= 0.05", "file_name": "baro_2015.csv"}
{"id": 450, "question": "2. Calculate the average wind speed (WINDSPEED) for each month in the dataset.", "concepts": ["Summary Statistics"], "constraints": "Assume that the \"DATE TIME\" column is in the format \"YYYY-MM-DD HH:MM:SS\". Extract the month from each date and calculate the mean wind speed for each respective month. Keep only two decimal places. The data is in chronological order so the answer should also be in order.", "format": "@monthly_avg_windspeed[{'month_1':avg_1, 'month_2':avg_2, ..., 'month_12':avg_12", "file_name": "baro_2015.csv"}
{"id": 451, "question": "3. Can you detect any missing values in the dataset? If yes, how many missing values are there for each column?", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "The columns are [\"DATE TIME\", \"WINDSPEED\", \"DIR\", \"GUSTS\", \"AT\", \"BARO\", \"RELHUM\", \"VIS\"].", "format": "@missing_values_per_column[{'DATE TIME':val_1, 'WINDSPEED':val_2, 'DIR':val_3, 'GUSTS':val_4, 'AT':val_5, 'BARO':val_6, 'RELHUM':val_7, 'VIS':val_8", "file_name": "baro_2015.csv"}
{"id": 452, "question": "1. Is there a relationship between wind speed (WINDSPEED) and atmospheric pressure (BARO) for wind direction (DIR) equal to 180 degrees? Calculate the Pearson correlation coefficient for this specific wind direction.", "concepts": ["Correlation Analysis", "Feature Engineering"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between wind speed and atmospheric pressure for wind direction equal to 180 degrees.\nAssess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05.\nReport the p-value associated with the correlation test.\nConsider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5.\nConsider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.5.\nIf the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value]\n@p_value[p_value]\n@relationship_type[relationship_type]\nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "baro_2015.csv"}
{"id": 453, "question": "2. Perform data preprocessing on the dataset, which includes removing outliers in the wind speed (WINDSPEED) column using the Z-score method (outliers are values that have a Z-score greater than 3 or lesser than -3) and handling missing values in the atmospheric temperature (AT) column by replacing them with the mean temperature. After preprocessing, calculate the mean wind speed and average atmospheric temperature.", "concepts": ["Comprehensive Data Preprocessing", "Summary Statistics"], "constraints": "Calculate the mean and standard deviation of the wind speed (WINDSPEED) column before preprocessing.\nReplace any wind speed value that is more than three standard deviations away from the mean, with the mean wind speed.\nCalculate the mean atmosphere temperature (AT), and fill missing values in the atmospheric temperature (AT) column with this mean.\nCalculate the mean values after preprocessing.", "format": "@mean_wind_pre[mean_wind_pre]\n@mean_atmos_temp_pre[mean_atmos_temp_pre]\n@mean_wind_post[mean_wind_post]\n@mean_atmos_temp_post[mean_atmos_temp_post]\nwhere \"mean_wind_pre\" and \"mean_wind_post\" are the mean wind speed values before and after preprocessing, rounded to two decimal places.\nwhere \"mean_atmos_temp_pre\" and \"mean_atmos_temp_post\" are the mean atmospheric temperature values before and after preprocessing, rounded to two decimal places.", "file_name": "baro_2015.csv"}
{"id": 465, "question": "2. Is the distribution of offender ages normally distributed or skewed?", "concepts": ["Distribution Analysis"], "constraints": "Calculate skewness of the 'Age' column using the skew function from the 'scipy.stats'. A skewness value between -0.5 to +0.5 indicates that the distribution is approximately symmetric, a skewness value greater than +0.5 indicates a distribution skewed to the right and a skewness value less than -0.5 indicates a distribution skewed to the left.", "format": "@distribution_skew[skewness] where \"skewness\" is a string that can be \"symmetric\", \"skewed_right\", or \"skewed_left\" based on the criteria provided in the constraints.", "file_name": "arrest_expungibility.csv"}
{"id": 466, "question": "3. Is there a correlation between the count of offenses and the age of the offender?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between count and age. Ignore the null values in the 'Count' column for this analysis. A value of r below -0.6 or above +0.6 indicates a strong correlation, between -0.6 and -0.3 or between +0.3 and +0.6 indicates a moderate correlation, -0.3 and +0.3 indicates a weak correlation.", "format": "@correlation_strength[strength] where \"strength\" is a string which can be \"strong\", \"moderate\", or \"weak\" based on the criteria provided in the constraints.", "file_name": "arrest_expungibility.csv"}
{"id": 468, "question": "2. Are there any outliers in the age distribution of offenders in 'Assault' category, according to the IQR method? If yes, report the number of outliers.", "concepts": ["Distribution Analysis", "Outlier Detection"], "constraints": "You are to use the Interquartile Range (IQR) method for outlier detection. Calculate the IQR as Q3 (75th percentile) - Q1 (25th percentile) for the 'Assault' category. Outliers are considered as values lying below Q1 - 1.5 * IQR or above Q3 + 1.5 * IQR.", "format": "@number_of_outliers[number] where \"number\" is a positive integer denoting the number of outliers", "file_name": "arrest_expungibility.csv"}
{"id": 471, "question": "3. Perform a comprehensive analysis of the distribution of offender ages across different offense categories. Are there any noticeable differences in the distributions? Additionally, can you identify outlier age ranges for each offense category?", "concepts": ["Distribution Analysis", "Outlier Detection", "Comprehensive Data Preprocessing"], "constraints": "Define outliers as any points that fall 1.5 times the interquartile range above the third quartile or below the first quartile for each offense category.\nExclude categories with fewer than 30 data points.\nConsider differences in distribution noticeable if the difference in means between two categories is equal to or greater than 5 years.", "format": "@noticeable_differences[difference_pairs]\n@outliers[outliers_info]\nwhere \"difference_pairs\" are pairs of categories that have noticeable differences in their age distributions, listed in alphabetical order of category names.\nwhere \"outliers_info\" is a dictionary where each key-value pair represents an offense category and its corresponding list of outlier ages.", "file_name": "arrest_expungibility.csv"}
{"id": 472, "question": "What is the mean value of the \"Value\" column?", "concepts": ["Summary Statistics"], "constraints": "Ignore all the null values in the \"Value\" column.\nRound your final answer to two decimal places.", "format": "@mean_value[number]\nwhere \"number\" is a floating-point number rounded to two decimal places.", "file_name": "oecd_education_spending.csv"}
{"id": 473, "question": "Are there any outliers in the \"Value\" column? If yes, how many and what are their locations (row numbers)?", "concepts": ["Outlier Detection"], "constraints": "Use the IQR method to detect outliers. Define an outlier as a data point that falls below Q1 - 1.5*IQR or above Q3 + 1.5*IQR.\nReturn the list of row numbers (starting from 0) for those outliers in ascending order. If there are no outliers, return an empty list.\nIgnore the null values in the \"Value\" column.", "format": "@outliers[list_of_numbers]\nwhere \"list_of_numbers\" is a list of integers.", "file_name": "oecd_education_spending.csv"}
{"id": 474, "question": "Is there a correlation between the \"Value\" column and the \"TIME\" column? If yes, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient.\nIgnore all the pairs that either \"Value\" or \"TIME\" is null.\nRound your final answer to two decimal places.", "format": "@correlation_coefficient[number]\nwhere \"number\" is a floating-point number between -1 and 1, rounded to two decimal places.", "file_name": "oecd_education_spending.csv"}
{"id": 475, "question": "What is the mean value of the \"Value\" column?", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean (arithmetic average) of the \"Value\" column, using the formula: mean = sum(values) / total number of values. Only consider valid and non-null entries.", "format": "@mean_value[value]: The \"value\" is a floating number rounded to two decimal places.", "file_name": "oecd_education_spending.csv"}
{"id": 476, "question": "Are there any outliers in the \"Value\" column? If yes, how many and what are their locations?", "concepts": ["Outlier Detection"], "constraints": "Calculate the lower and upper bounds for outliers using the Interquartile Range (IQR). Define outliers as points that lie below (Q1 - 1.5 * IQR) or above (Q3 + 1.5 * IQR), where Q1 and Q3 represent the first and third quartiles, respectively. Return the count of these outliers and their indices in the original dataset.", "format": "@outlier_count[count], @outlier_indices[list] where \"count\" is a integer representing the total number of outliers and \"list\" is a list of integers containing the respective indices of these outliers in the dataset.", "file_name": "oecd_education_spending.csv"}
{"id": 479, "question": "Perform comprehensive data preprocessing on the dataset. Handle missing values in the 'Value' column by replacing them with the mean value of the column. After preprocessing, calculate the mean value for each unique combination of \"LOCATION\" and \"SUBJECT\". Display the combination with the highest average value and the corresponding mean value.", "concepts": ["Comprehensive Data Preprocessing", "Summary Statistics"], "constraints": "Replace missing values in the 'Value' column with the mean value of the column. Calculate the average for each unique combination of \"LOCATION\" and \"SUBJECT\".", "format": "@max_combination[location_subject] @max_mean_value[mean_value] where \"location_subject\" represents the combination of location and subject as a string, and \"mean_value\" is a number rounded to two decimal places.", "file_name": "oecd_education_spending.csv"}
{"id": 480, "question": "Apply feature engineering techniques to the dataset. Create a new feature by subtracting the mean value of the \"Value\" column from each value in that column. Calculate and report the standard deviation of this new feature.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Create a new feature by subtracting the mean value of the \"Value\" column from each value in that column. Calculate the standard deviation of the new feature.", "format": "@standard_deviation[std_value] where \"std_value\" is a positive number rounded to two decimal places.", "file_name": "oecd_education_spending.csv"}
{"id": 490, "question": "What is the mean percentage of graduates in the field of Engineering?", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean value using all available data points in the field of Engineering. Round the mean value to two decimal places.", "format": "@mean_value[number] where \"number\" is a number between 0 and 100, representing the mean value, rounded to two decimal places.", "file_name": "percent-bachelors-degrees-women-usa.csv"}
{"id": 491, "question": "Is there a correlation between the percentage of graduates in the fields of Biology and Math and Statistics? If so, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between the percentage of graduates in the fields of Biology and Math and Statistics. Round the correlation coefficient to two decimal places.", "format": "@correlation_coefficient[r_value] where \"r_value\" is a number between -1 and 1, rounded to two decimal places.", "file_name": "percent-bachelors-degrees-women-usa.csv"}
{"id": 492, "question": "Which field has the highest percentage of graduates in the year 2010?", "concepts": ["Summary Statistics"], "constraints": "Compare the last available data points (year 2010) for all fields within the dataset. If fields share the maximum percentage value, return all those fields separated by commas.", "format": "@fields[field_names] where \"field_names\" is string(s) separated by commas, mentioning field(s) with the highest percentage of graduates in the year 2010.", "file_name": "percent-bachelors-degrees-women-usa.csv"}
{"id": 494, "question": "Develop a machine learning model that predicts the percentage of graduates in the field of Psychology based on the percentages in the other fields. Evaluate the performance of the model using appropriate evaluation metrics.", "concepts": ["Machine Learning"], "constraints": "{\nUse a linear regression model from sklearn library for prediction.\nApply standard scaler normalization before training the model.\nEvaluate the performance of the model using Root Mean Squared Error (RMSE) and R-Squared (R2) metrics from sklearn metrics.\nReport the model's performance using these metrics on the test set.}", "format": "{\n@RMSE[rmse_value]\n@R_squared[r2_value]\nwhere \"rmse_value\" is a floating point number rounded to two decimal places.\nwhere \"r2_value\" is a floating point number rounded to two decimal places.", "file_name": "percent-bachelors-degrees-women-usa.csv"}
{"id": 495, "question": "Perform outlier detection on the percentage of graduates in the field of Architecture over the years using the Z-score method with a threshold of 3. Identify all years with outliers, then calculate the mean and standard deviation for the years without these outliers.", "concepts": ["Outlier Detection", "Summary Statistics"], "constraints": "Use the Z-score method with a threshold of 3 for outlier detection.\nInclude all years in the dataset for the calculation.\nAfter identifying the outliers, remove them and then calculate the mean percentage and the standard deviation of the remaining data. Round to two decimal places.", "format": "@outlier_years[list of years with outliers]\n@mean_without_outliers[mean_value]\n@std_without_outliers[std_value]\nwhere \"list of years with outliers\" is a list of integer years in ascending order. \nwhere \"mean_value\" and \"std_value\" are floating point numbers rounded to two decimal places representing the mean and standard deviation, respectively.", "file_name": "percent-bachelors-degrees-women-usa.csv"}
{"id": 496, "question": "Perform feature engineering by creating a new feature called \"STEM\" (Science, Technology, Engineering, and Math). It should be the sum of the percentages of graduates in the fields of Computer Science, Engineering, Math and Statistics, and Physical Sciences. Calculate the mean and range (maximum - minimum) of the \"STEM\" feature for the years beyond 2000.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Calculate the new feature \"STEM\" as the sum of the percentages of graduates in the fields of Computer Science, Engineering, Math and Statistics, and Physical Sciences.\nCompute the mean and the range (maximum - minimum) of the \"STEM\" feature for the years 2000 and beyond. Round to two decimal places.", "format": "@mean_STEM[mean_value]\n@range_STEM[range_value]\nwhere \"mean_value\" is a floating point number rounded to two decimal places representing the mean of the \"STEM\" feature.\nwhere \"range_value\" is a floating point number rounded to two decimal places representing the range of the \"STEM\" feature.", "file_name": "percent-bachelors-degrees-women-usa.csv"}
{"id": 506, "question": "1. What is the average number of reviews per hotel in the dataset?", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean reviews per hotel from the entire dataset. Round your result to two decimal places.", "format": "@average_reviews[average] where \"average\" is a number rounded to two decimal places, and representing the average number of reviews per hotel.", "file_name": "hotel_data.csv"}
{"id": 507, "question": "2. Are there any hotels in the dataset that have a star rating of 5? If yes, how many hotels have a star rating of 5?", "concepts": ["Distribution Analysis"], "constraints": "Count only hotels that have a star rating exactly equal to 5. This count value should be a non-negative integer.", "format": "@total_hotels[count] where \"count\" is a non-negative integer representing the total number of hotels with a star rating of 5.", "file_name": "hotel_data.csv"}
{"id": 508, "question": "3. Is there a correlation between the number of reviews a hotel has received and its bubble score? If yes, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient between review count and bubble score. Consider the correlation to be significant if its absolute value is greater than 0.5. Round your result to three decimal places.", "format": "@correlation_coefficient[r_value] where \"r_value\" is a number between -1 and 1, rounded to three decimal places, representing the correlation between the review count and the bubble score.", "file_name": "hotel_data.csv"}
{"id": 509, "question": "1. Among the hotels with a star rating, what is the average bubble score for hotels in each star rating category?", "concepts": ["Summary Statistics", "Distribution Analysis"], "constraints": "Do not include hotels without a star rating in the calculation. Calculate the average using Arithmetic Mean (Sum of observations / Number of observations). Round off your result to two decimal places.", "format": "For each star category 1 to 5:\n@star_ratingX_average_bubble_score[average_bubble_score_for_X_star_rating]\nwhere \"X\" is the star rating category with \"X\" being an integer from 1 to 5, inclusive and \"average_bubble_score_for_X_star_rating\" is a number between 0 and 5 (since bubble score is usually between 0 to 5) rounded to two decimal places.", "file_name": "hotel_data.csv"}
{"id": 510, "question": "2. Which hotel brand has the highest average star rating among hotels with at least 100 reviews?", "concepts": ["Summary Statistics", "Feature Engineering"], "constraints": "Only consider hotel brands that have at least 10 hotels in the dataset. Do not include hotels without a brand or without a star rating in the calculation. If there is a tie, return the brand with the largest number of hotels in the dataset. Calculate the average using Arithmetic Mean (Sum of observations / Number of observations).", "format": "@brand_with_highest_average_star_rating[brand_name]\nwhere \"brand_name\" is the name of the hotel brand as a string.", "file_name": "hotel_data.csv"}
{"id": 513, "question": "2. Among the hotels with a star rating, what is the correlation between the number of reviews a hotel has received and its bubble score? Do hotels with higher star ratings tend to have higher bubble scores and more reviews?", "concepts": ["Correlation Analysis", "Distribution Analysis"], "constraints": "Calculate the correlation coefficient using the Pearson method. Consider only non-null values. Report the correlation separately for hotels with star ratings below 3, between 3 and 4, and above 4.", "format": "@below3_correlation[correlation_value1], @between3and4_correlation[correlation_value2], @above4_correlation[correlation_value3], where each \"correlation_value\" is a float between -1 and 1, rounded to two decimal places.", "file_name": "hotel_data.csv"}
{"id": 514, "question": "3. What is the average review count for hotels in each city? Are there any cities where the average review count is significantly higher or lower compared to the overall average review count of all hotels?", "concepts": ["Summary Statistics", "Distribution Analysis"], "constraints": "Calculate the average review count for each city. Compare the results to the overall average review count. Report cities where the average review count is more or less than twice the overall average.", "format": "@higher_city_count[number_of_higher_cities], @lower_city_count[number_of_lower_cities], where \"number_of_higher_cities\" and \"number_of_lower_cities\" are positive integers representing the number of cities meeting the corresponding criteria.", "file_name": "hotel_data.csv"}
{"id": 516, "question": "Check if the fare distribution is skewed.", "concepts": ["Distribution Analysis"], "constraints": "Calculate the skewness of the fare column using Pearson's moment coefficient of skewness. Ignore null values. Round the final output to 2 decimal places.", "format": "@skewness_fare[skewness_value], where \"skewness_value\" is a float rounded to 2 decimal places, representing the skewness of the fare distribution.", "file_name": "titanic.csv"}
{"id": 517, "question": "Find the correlation coefficient between the passenger class and the fare.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the correlation using the Pearson method. Do not include the rows with null values in either Pclass or Fare in the calculation. Round the final output to 2 decimal places.", "format": "@correlation_pclass_fare[correlation_value], where \"correlation_value\" is a float rounded to 2 decimal places, representing the correlation coefficient between passenger class and fare.", "file_name": "titanic.csv"}
{"id": 518, "question": "Identify and remove any outliers in the fare column using the Z-score method.", "concepts": ["Outlier Detection"], "constraints": "Calculate the Z-scores for the 'Fare' column values and classify a value as an outlier if its Z-score is greater than 3. After removal of outliers, calculate the number of entries left in the dataset.", "format": "@number_of_entries_left[number] where \"number\" is the total number of entries left in the dataset after removal of outliers.", "file_name": "titanic.csv"}
{"id": 520, "question": "Create a new feature called 'FamilySize' by combining the 'SibSp' and 'Parch' columns, which represents the total number of family members a passenger had aboard the Titanic. Then, find the correlation coefficient between 'FamilySize' and 'Survived'.", "concepts": ["Feature Engineering", "Correlation Analysis"], "constraints": "Create 'FamilySize' by adding up 'SibSp' and 'Parch', then calculate the Pearson correlation coefficient between 'FamilySize' and 'Survived'.", "format": "@correlation_coefficient[number] where \"number\" is the calculated Pearson correlation coefficient between 'FamilySize' and 'Survived', rounded to two decimal places.", "file_name": "titanic.csv"}
{"id": 521, "question": "Using machine learning algorithms, build a classification model to predict survival (0 = No, 1 = Yes) based on the passenger's age, gender, and fare. Train a logistic regression model with default parameters provided by the sklearn library. Evaluate the model's performance using accuracy as the evaluation metric.", "concepts": ["Machine Learning", "Feature Engineering"], "constraints": "Split the dataset into a training set and a test set with a ratio of 70:30 using sklearn's train_test_split function with a random_state of 42. Don't balance the classes or perform any other preprocessing that isn't mentioned.", "format": "@classifier_accuracy[Accuracy Score]\nwhere \"Accuracy Score\" is a float between 0 and 1, rounded to two decimal places.", "file_name": "titanic.csv"}
{"id": 522, "question": "Perform feature engineering by creating a new feature called 'Title' from the 'Name' column, which represents the title (e.g., Mr., Mrs., Miss) of each passenger. Then, analyze the distribution of the 'Title' feature and check if it is correlated with the passenger class ('Pclass') using the chi-square test.", "concepts": ["Feature Engineering", "Distribution Analysis", "Correlation Analysis"], "constraints": "Generate 'Title' by extracting the title before the period (.) in the 'Name' column, and the title is defined as a string that contains no spaces. For others which are not 'Mr.', 'Mrs.', 'Miss.', replace them with 'Other'. The degrees of freedom for the chi-square test are calculated as (r - 1) * (c - 1), where r equals the number of rows (categories in 'Title') and c equals the number of columns (categories in 'Pclass'). Use a significance level of 0.05.", "format": "@chi_square_statistic[Chi-square Statistic]\n@p_value[P-value]\nwhere \"Chi-square Statistic\" is a non-negative float, rounded to two decimal places.\nwhere \"P-value\" is a float between 0 and 1, rounded to four decimal places.", "file_name": "titanic.csv"}
{"id": 523, "question": "Preprocess the dataset by using comprehensive data preprocessing techniques, including cleaning, transformation, and handling missing values. Remove duplicate rows, normalize the 'Fare' column by scaling between 0 and 1, impute missing values in the 'Age' column using k-Nearest Neighbors algorithm with k=3, and drop the 'Cabin' column due to high missing values. Finally, create a new feature called 'AgeGroup' by binning the passengers into different age groups: 'Child' (age<=12), 'Teenager' (12<age<=18), 'Adult' (18<age<=60) and 'Senior' (age>60). Report the number of passengers in each category.", "concepts": ["Comprehensive Data Preprocessing", "Feature Engineering"], "constraints": "Use sklearn's MinMaxScaler to normalize the 'Fare' column. For the 'Age' column, use sklearn's KNeighborsClassifier to make imputations, and learn the nearest neighbors on the 'Fare' and 'Pclass' columns. The 'AgeGroup' category should be a string of 'Child', 'Teenager', 'Adult' or 'Senior' based on the age of the passenger.", "format": "@child_count[Child]\n@teenager_count[Teenager]\n@adult_count[Adult]\n@senior_count[Senior]\nwhere \"Child\", \"Teenager\", \"Adult\" and \"Senior\" are the number of passengers in each age group, a non-negative integer.", "file_name": "titanic.csv"}
{"id": 524, "question": "What is the average fare paid by the passengers?", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean value of the 'Fare' column. Ignore the row with the missing value in 'Fare'. Round the result to two decimal places.", "format": "@average_fare[mean_fare] where 'mean_fare' is a number with two decimal places. Example: @average_fare[32.85].", "file_name": "titanic_test.csv"}
{"id": 526, "question": "Is there a correlation between the passenger class and the fare paid?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between 'Pclass' and 'Fare'. Ignore rows with missing values in these two columns. Round the result to two decimal places.", "format": "@correlation_coefficient[r_value] where 'r_value' is a number between -1 and 1, rounded to two decimal places. Example: @correlation_coefficient[-0.55].", "file_name": "titanic_test.csv"}
{"id": 527, "question": "What is the average age of male passengers in each passenger class? How does it compare to the average age of female passengers in each passenger class?", "concepts": ["Summary Statistics", "Distribution Analysis"], "constraints": "Determine the average age by using all the non-null age data for male and female passengers in each passenger class. Use the arithmetic mean formula for your calculation. The output should include the average age for males and females in each of passenger classes 1, 2, and 3.", "format": "@average_age_male_class1[age], @average_age_male_class2[age], @average_age_male_class3[age], @average_age_female_class1[age], @average_age_female_class2[age], @average_age_female_class3[age]. The \"age\" is a number rounded to two decimal places.", "file_name": "titanic_test.csv"}
{"id": 528, "question": "Are there any outliers in the fare paid by the passengers? If so, how many are there and can you identify them?", "concepts": ["Outlier Detection", "Comprehensive Data Preprocessing"], "constraints": "Identify outliers using the IQR method where a fare is considered an outlier if it is 1.5 times the IQR above the third quartile or below the first quartile. Use all fare values for this analysis and do not consider the outlier if it's missing.", "format": "@outlier_count[count], @outlier_ids[id1, id2, ...]. The \"count\" is an integer. \"id1, id2, ...\" are the \"PassengerId\"s of the outliers, separated by commas and sorted in ascending order.", "file_name": "titanic_test.csv"}
{"id": 529, "question": "Can you identify any patterns or relationships between the number of siblings/spouses each passenger had aboard and the number of parents/children they had aboard?", "concepts": ["Correlation Analysis", "Feature Engineering"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between the number of siblings/spouses (SibSp) and the number of parents/children (Parch). Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. Consider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5. Consider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.5. If the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value], @p_value[p_value], @relationship_type[relationship_type]. Where \"r_value\" is a float number between -1 and 1, rounded to two decimal places. \"p_value\" is a float number between 0 and 1, rounded to four decimal places. \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\".", "file_name": "titanic_test.csv"}
{"id": 530, "question": "Is there a correlation between the age of the passengers and the fare paid? How does this correlation differ among male and female passengers?", "concepts": ["Correlation Analysis", "Distribution Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between age and fare for male and female passengers separately. Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. Consider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5. Consider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.5. If the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient_male[r_value]\n@p_value_male[p_value]\n@relationship_type_male[relationship_type]\n@correlation_coefficient_female[r_value]\n@p_value_female[p_value]\n@relationship_type_female[relationship_type]\nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "titanic_test.csv"}
{"id": 542, "question": "What is the mean length of the abalone in mm?", "concepts": ["Summary Statistics"], "constraints": "Perform arithmetical mean operation on the length column, use rounded number to two decimal places as the answer.", "format": "@mean_length[mean_length_value], where \"mean_length_value\" is a number between 1 and 999, rounded to two decimal places.", "file_name": "abalone.csv"}
{"id": 543, "question": "Is there a correlation between the diameter and the number of rings of the abalone? If so, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength of the linear relationship between diameter and rings.\nConsider the relationship to correlate if the absolute value of r is greater than or equal to 0.1.\nIf the absolute value of r is less than 0.1, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value]\n@relationship_status[relation_status]\nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"relation_status\" is a string that can either be \"correlate\" or \"none\" based on the conditions specified in the constraints.", "file_name": "abalone.csv"}
{"id": 545, "question": "What is the mean length of the abalone in mm?", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean by summing all lengths and dividing by the number of instances. Do not round the result.", "format": "@mean_length[mean_length]\nwhere \"mean_length\" is a float number, rounded to two decimal places.", "file_name": "abalone.csv"}
{"id": 546, "question": "Is there a correlation between the diameter and the number of rings of the abalone? If so, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between diameter and number of rings. Do not round the result.\nAssess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test.", "format": "@correlation_coefficient[r_value]\n@p_value[p_value]\nwhere \"r_value\" is a number between -1 and 1.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.", "file_name": "abalone.csv"}
{"id": 547, "question": "Are there any outliers in the weight of the whole abalone? If so, how can they be identified?", "concepts": ["Outlier Detection"], "constraints": "Consider a data point to be an outlier if it falls more than 1.5 times the interquartile range (IQR) above the third quartile (Q3) or below the first quartile (Q1).\nCalculate Q1, Q3, and IQR for the weight of the whole abalone, and use these values to find any outliers.", "format": "@Q1[Q1]\n@Q3[Q3]\n@IQR[IQR]\n@outliers[outlier_values]\nwhere \"Q1\" is a float representing the first quartile value, rounded to two decimal places.\nwhere \"Q3\" is a float representing the third quartile value, rounded to two decimal places.\nwhere \"IQR\" is a float representing the interquartile range, rounded to two decimal places.\nwhere \"outlier_values\" is a list of float numbers representing the outlier values, each rounded to two decimal places. The list is sorted ascendingly. If no outliers, output an empty list.", "file_name": "abalone.csv"}
{"id": 549, "question": "Explore the correlation between the length and the weight of the whole abalone. Additionally, perform feature engineering by creating a new feature called \"volume\" by multiplying the length, diameter, and height of the abalone. Determine if the volume feature improves the accuracy of predicting the number of rings using a linear regression model.", "concepts": ["Correlation Analysis", "Feature Engineering", "Machine Learning"], "constraints": "Calculate the Pearson correlation coefficient to assess the strength and direction of the linear relationship between length and the weight. The volume feature should be created by multiplying the length, diameter, and height of the abalone. Use the sklearn's linear regression model to predict the number of rings. Split the data into a 70% train set and a 30% test set. Evaluate the models by calculating the root mean squared error (RMSE) with the test set.", "format": "@correlation_coefficient[number], @original_model_rmse[number], @volume_feature_model_rmse[number]\nwhere \"number\" is a number rounded to four decimal places.", "file_name": "abalone.csv"}
{"id": 550, "question": "Perform comprehensive data preprocessing on the abalone dataset. Handle any missing values and scale the variables (length, diameter, height, whole weight, shucked weight, viscera weight, shell weight) using min-max normalization. Then, perform a distribution analysis to determine if the scaled variables adhere to a normal distribution.", "concepts": ["Comprehensive Data Preprocessing", "Distribution Analysis"], "constraints": "Any missing values should be filled using the median of the respective column. Use sklearn's MinMaxScaler for normalization, scale the variables to a range between 0 and 1. For distribution analysis, use skewness and kurtosis to determine the distribution type. If skewness is between -0.5 and 0.5 and kurtosis is between -2 and 2, we consider it as normal.", "format": "@missing_values_handled[\"Yes\"/\"No\"], @min_max_scaler_scale[range], @distribution_type[distribution type]\nwhere \"missing_values_handled\" indicates if missing values have been properly handled or not, \"range\" should be a string that specifies the range of the scaled variables, for example \"0-1\", \"distribution type\" should be a string which can be \"Normal\" or \"Non-Normal\".", "file_name": "abalone.csv"}
{"id": 551, "question": "What is the mean of the DBH_CM column?", "concepts": ["Summary Statistics"], "constraints": "Calculate the arithmetic mean of the 'DBH_CM' column. The answer should be rounded to the nearest hundredth. Do not consider missing values, outliers, or data error possibilities, as it was stated there are no missing values in this column and no further cleaning or preprocessing is needed for this problem.", "format": "@mean_dbh_cm[mean_value] where 'mean_value' is a float number with two decimal values.", "file_name": "tree.csv"}
{"id": 552, "question": "Are the HT_M column and the BA_M2 column correlated?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between the 'HT_M' and 'BA_M2' columns. The answer should be rounded to the third decimal place. Consider the relationship to be linear if the absolute value of r is greater than or equal to 0.5. Consider the relationship to be non-linear if the absolute value of r is less than 0.5.", "format": "@correlation_coefficient[r_value] @relationship_type[relationship_type] where 'r_value' is a float number between -1 and 1 with three decimal places and 'relationship_type' is a string that is either 'linear', 'nonlinear'.", "file_name": "tree.csv"}
{"id": 553, "question": "How many outliers are there in the TPH_PLT column?", "concepts": ["Outlier Detection"], "constraints": "Detect outliers in the 'TPH_PLT' column using the IQR method, where observations that fall below Q1 - 1.5*IQR or above Q3 + 1.5*IQR are considered outliers. Do not consider missing values, as it was stated there are no missing values in this column.", "format": "@outliers_count[count] where 'count' is a non-negative integer.", "file_name": "tree.csv"}
{"id": 554, "question": "What is the median HT_M value for the plant species with a CON value of 1, and a PLTID of 5?", "concepts": ["Summary Statistics", "Distribution Analysis"], "constraints": "Filter the data frame first by CON value of 1, then by PLTID of 5, calculate the median HT_M value of these entries.", "format": "@median_ht_m[median_value] where \"median_value\" is a float rounded to 2 decimal places.", "file_name": "tree.csv"}
{"id": 555, "question": "How many unique plant species (represented by unique SPP_SYMBOL values) are there in the dataset, where each species has at least 5 observations?", "concepts": ["Feature Engineering"], "constraints": "Count unique SPP_SYMBOL values that appear at least 5 times.", "format": "@unique_species_count[species_count] where \"species_count\" is an integer.", "file_name": "tree.csv"}
{"id": 570, "question": "Explore the distribution of the CBOE Volatility Index (.VIX) on the given dates.", "concepts": ["Distribution Analysis"], "constraints": "{\nUse the numpy histogram function to explore the distribution.\nSet the bin separator array to [10, 20, 30, 40, 50, 60, 70].\nOnly consider non-null values.\n}", "format": "{\n@VIX_bin_counts[bin_counts]\nwhere \"bin_counts\" is an array of 6 integers representing the count of .VIX values in each bin.", "file_name": "tr_eikon_eod_data.csv"}
{"id": 571, "question": "Analyse the correlation between the stock prices of Microsoft Corporation (MSFT) and Intel Corporation (INTC) on the given dates.", "concepts": ["Correlation Analysis"], "constraints": "{\nCalculate the Pearson correlation coefficient.\nConsider only pairs of dates where neither stock price is null.\n}", "format": "{\n@MSFT_INTC_correlation[correlation_value]\nwhere \"correlation_value\" is the calculated Pearson correlation coefficient between the stock prices of Microsoft Corporation (MSFT) and Intel Corporation (INTC). It should be a number rounded to two decimal places.", "file_name": "tr_eikon_eod_data.csv"}
{"id": 572, "question": "Identify the date with the highest closing value of the S&P 500 Index (.SPX). Calculate the percentage change in the stock price of Apple Inc. (AAPL) from its closing price on the previous day to its closing price on the identified date.", "concepts": ["Summary Statistics", "Correlation Analysis"], "constraints": "1. The date where the S&P 500 Index (.SPX) reached its maximum value should be identified.\n2. The percentage change is calculated as: ((price on identified date / price on previous day) - 1) * 100.\n3. Percentage change should be calculated only if the previous day data exists. If the identified date is the first date in the dataset, state that the previous day data doesn't exist.\n4. The data for the previous day is defined as the data on the date immediately preceding the identified date when sorting the dates in ascending order. Hunting for the \"previous\" trading day is not required.", "format": "@max_SPX_date[date]\n@AAPL_price_percentage_change[percentage_change]\nwhere \"date\" is a string in the format YYYY-MM and \"percentage_change\" is a number rounded to two decimal places or the string \"Previous day data doesn't exist\".", "file_name": "tr_eikon_eod_data.csv"}
{"id": 574, "question": "Perform data preprocessing on the stock prices of Microsoft Corporation (MSFT), SPDR S&P 500 ETF Trust (SPY), and the CBOE Volatility Index (.VIX). This preprocessing includes removing missing values, normalizing the data, and encoding any categorical variables. Calculate the correlation matrix between the preprocessed stock prices.", "concepts": ["Comprehensive Data Preprocessing", "Correlation Analysis"], "constraints": "1. Missing values should be removed entirely from the dataset.\n2. The normalization method to be used is feature scaling (rescaling the data to range between 0 and 1).\n3. For categorical variables, use one hot encoding method, though no categorical data exists in the provided price columns.\n4. The correlation computation method to be used is Pearson's correlation.", "format": "@MSFT_SPY_correlation[correlation]\n@MSFT_VIX_correlation[correlation]\n@SPY_VIX_correlation[correlation]\nwhere \"correlation\" is a number between -1 and 1, rounded to two decimal places.", "file_name": "tr_eikon_eod_data.csv"}
{"id": 575, "question": "Using feature engineering techniques, create a new feature that represents the average stock price of Apple Inc. (AAPL), Microsoft Corporation (MSFT), and Amazon.com, Inc. (AMZN) on the given dates. Calculate the correlation between this new feature and the closing value of the S&P 500 Index (.SPX).", "concepts": ["Feature Engineering", "Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between the newly created average stock price feature and the closing value of the S&P 500 Index (.SPX).\nAssess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05.\nReport the p-value associated with the correlation test.\nConsider the relationship to be linear if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5.\nConsider the relationship to be nonlinear if the p-value is less than 0.05 and the absolute value of r is less than 0.5.\nIf the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient_corr[r_value]\n@p_value_pval[p_value]\n@relationship_type_relation[relationship_type]\nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"relationship_type\" is a string that can either be \"linear\", \"nonlinear\", or \"none\" based on the conditions specified in the constraints.", "file_name": "tr_eikon_eod_data.csv"}
{"id": 578, "question": "What is the average trading volume of AAPL stock?", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean trading volume (\"Volume\") of all available records. Do not consider any values as outliers.", "format": "@mean_volume[mean volume], where \"mean volume\" is a decimal number rounded to two decimal places.", "file_name": "e5_aapl.csv"}
{"id": 580, "question": "Is there any outlier in the closing price of AAPL stock during the year 2020? If so, can you identify the outliers and their values?", "concepts": ["Outlier Detection"], "constraints": "{\nConsider a value to be an outlier if it falls more than 1.5 interquartile ranges (IQRs) above the third quartile or below the first quartile of the closing prices.\n}", "format": "{\n@is_there_outlier[is_there_outlier]\n@outliers[outliers]\nwhere \"is_there_outlier\" is a boolean that can either be \"True\" or \"False\".\nwhere \"outliers\" is a list of tuples, where each tuple contains the outlier's date (in the format \"YYYY-MM-DD\") and its value (rounded to two decimal places).", "file_name": "e5_aapl.csv"}
{"id": 586, "question": "Find out the total number of calls that were abandoned by the callers before being answered by an agent.", "concepts": ["Distribution Analysis"], "constraints": "Use Python's pandas DataFrame to load the CSV file. Perform the data cleaning step to ensure there're no null or NaN values for the \"num. calls abandoned\" column. Then use the sum() function on this column to get the total.", "format": "@total_abandoned_calls[integer], where integer represents the total number of calls that were abandoned by the callers before being answered by an agent.", "file_name": "20170413_000000_group_statistics.csv"}
{"id": 587, "question": "Examine the correlation between the average number of agents talking and the average waiting time for callers.", "concepts": ["Correlation Analysis"], "constraints": "Transform the average waiting time from 'HH:MM:SS' string format to seconds (integer type). Then use the Pearson's method to calculate the correlation coefficient between the average number of agents talking and the transformed average waiting time. The result should be rounded to three decimal places.", "format": "@correlation_coefficient[float], where float is a number between -1 and 1 that measures the correlation between the average number of agents talking and the average waiting time for callers. The number should be rounded to three decimal places.", "file_name": "20170413_000000_group_statistics.csv"}
{"id": 588, "question": "Are there any outliers in the average wait time for callers before being answered by an agent? If so, how many outliers are there?", "concepts": ["Outlier Detection"], "constraints": "Detect the outliers using the Z-score method. Consider any data point with an absolute Z-score value greater than 3 as an outlier.", "format": "@num_of_outliers[number_of_outliers] where \"number_of_outliers\" is a non-negative integer value representing the number of outliers detected based on the Z-score method.", "file_name": "20170413_000000_group_statistics.csv"}
{"id": 589, "question": "Can we generate a new feature representing the call abandonment rate? If so, what is the call abandonment rate for the timestamp \"20170413_080000\"?", "concepts": ["Feature Engineering"], "constraints": "Calculate the call abandonment rate for a specific timestamp as the total number of calls abandoned divided by the total number of calls made during that time. Express the result as a percentage.", "format": "@abandonment_rate[abandonment_rate_%] where \"abandonment_rate_%\" is a positive real value between 0 and 100, rounded to two decimal places, representing the abandonment rate at the specified timestamp.", "file_name": "20170413_000000_group_statistics.csv"}
{"id": 590, "question": "Using machine learning techniques, can we predict the number of agents needed to handle incoming calls based on the timestamp and other available information? If so, predict the number for the timestamp \"20170413_120000\".", "concepts": ["Machine Learning"], "constraints": "Use a simple linear regression model for prediction. The model should be trained with features such as the timestamp, number of calls answered, number of call abandoned, etc., and the target variable should be the average number of agents staffed. Perform prediction for the given timestamp after training the model.", "format": "@predicted_agents[predicted_num_agents] where \"predicted_num_agents\" is a non-negative integer value representing the predicted number of agents for the specified timestamp.", "file_name": "20170413_000000_group_statistics.csv"}
{"id": 593, "question": "Using feature engineering techniques, create a new feature that represents the waiting time for callers before being answered by an agent as a percentage of the average abandonment time. Then, explore the distribution of this new feature and determine if it adheres to a normal distribution.", "concepts": ["Feature Engineering", "Distribution Analysis"], "constraints": "Create a new feature 'waiting_ratio' that is defined as the ratio of average waiting time to the average abandonment time, represented as a percentage. Convert the waiting and abandonment time from format HH:MM:SS to seconds before the calculation. After creating the feature, calculate the skewness of this new feature. Use the skewness to determine whether the data is normally distributed. For normally distributed data, skewness should be about 0.", "format": "@waiting_ratio_skewness[skewness_value]\n@is_normal[is_normal]\nwhere \"skewness_value\" is the skewness of the 'waiting_ratio' feature rounded to two decimal places.\nwhere \"is_normal\" is a boolean value that should be \"True\" if the absolute value of skewness is less than 0.5 and \"False\" otherwise.", "file_name": "20170413_000000_group_statistics.csv"}
{"id": 602, "question": "2. Check if the RHO_OLD column follows a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Use the Shapiro-Wilk test to evaluate if the RHO_OLD column follows a normal distribution. In the test, if the p-value is less than 0.05, then it does not follow a normal distribution. If the p-value is greater than 0.05, then it follows a normal distribution.", "format": "@normality_status[status], where \"status\" is a string that is either \"Normal\" if the p-value > 0.05, or \"Not Normal\" if p-value < 0.05.", "file_name": "well_2_complete.csv"}
{"id": 604, "question": "1. Identify and remove any outliers in the SWX column using the Z-score method with a threshold of 3. Calculate the new mean and standard deviation of the SWX column after removing the outliers.", "concepts": ["Outlier Detection", "Summary Statistics"], "constraints": "{\nUse z-score for outlier detection with a threshold of 3, i.e, any data point that has a z-score greater than 3 or less than -3 is considered an outlier.\nThe mean and standard deviation should be calculated up to 3 decimal places.\nExclude all rows with null values in the SWX column before calculating mean and standard deviation.}", "format": "{\n@outlier_count[outlier_count]\n@mean_after_removal[mean]\n@std_dev_after_removal[std_dev]\nwhere \"outlier_count\" is an integer representing the total number of outliers detected.\nwhere \"mean\" is a number between -Infinity and Infinity, represented up to three decimal places.\nwhere \"std_dev\" is a non-negative number represented up to three decimal places.", "file_name": "well_2_complete.csv"}
{"id": 618, "question": "3. Find the correlation coefficient between the number of photos taken during the trajectories and the total duration spent at each point of interest. Use the Python Pandas library's corr() function for the calculation.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient between the number of photos and the total duration spent at each point of interest using pandas' corr() function.", "format": "@correlation[corr] where \"corr\" is a number between -1 and 1 rounded to three decimal places.", "file_name": "traj-Osak.csv"}
{"id": 619, "question": "1. Identify and remove any outliers in the duration of the trajectories based on the Z-score method where an outlier is defined as a data point that is located outside the whiskers of the box plot (a data point is considered to be an outlier if its z-score is less than -2.5 or greater than 2.5). Calculate the new mean and standard deviation of the trajectory durations after removing the outliers.", "concepts": ["Outlier Detection", "Summary Statistics"], "constraints": "For outlier detection, use the Z-score method where an outlier is defined as a data point that is located outside the whiskers of the box plot (a data point is considered to be an outlier if its z-score is less than -2.5 or greater than 2.5). For calculating the mean and standard deviation, use the built-in Python functions from numpy. The values should be rounded off to 2 decimal places.", "format": "@mean_new[mean_value] @std_dev_new[std_dev_value] where \"mean_value\" and \"std_dev_value\" are numbers rounded to two decimal places.", "file_name": "traj-Osak.csv"}
{"id": 643, "question": "Calculate the mean, standard deviation, minimum, and maximum values of the \"Volume\" column.", "concepts": ["Summary Statistics"], "constraints": "Use Python's built-in statistical functions to calculate these values. Round these numbers to two decimal places.", "format": "@mean_volume[mean value]\n@std_volume[standard deviation value]\n@min_volume[minimum value]\n@max_volume[maximum value]\nwhere \"mean value\", \"standard deviation value\", \"minimum value\", and \"maximum value\" are numbers rounded to two decimal places.", "file_name": "random_stock_data.csv"}
{"id": 644, "question": "Check if the \"Close\" column follows a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Use the Shapiro-Wilk test to determine whether the \"Close\" column follows a normal distribution. The null hypothesis is that the data was drawn from a normal distribution. Use a significance level (alpha) of 0.05. If the p-value is less than 0.05, reject the null hypothesis and conclude that the data does not come from a normal distribution. Otherwise, do not reject the null hypothesis and conclude that the data does come from a normal distribution. Round the p-value to four decimal places.", "format": "@p_value[p-value]\n@result[result]\nwhere \"p-value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"result\" is a string that is either \"Normal distribution\" or \"Not a normal distribution\".", "file_name": "random_stock_data.csv"}
{"id": 646, "question": "Identify any outliers in the \"Open\" column using the Z-score method. Calculate Z-scores using the formula Z = (X - \u03bc) / \u03c3, where X is a score, \u03bc is the mean, and \u03c3 is the standard deviation. Identify as outliers any data points in which the absolute value of Z is greater than 3.}{Outlier Detection, Comprehensive Data Preprocessing}\n\\Constraints{Calculate the Z-scores for all entries in the \"Open\" column. Use the mean and standard deviation of the entire column to calculate Z-scores. Report the number of outliers, and for each outlier, report its Z-score and its index within the dataset.}\n\\Format{@num_outliers[num_outliers]\n@index_and_zscore[(index, zscore), ...]\nwhere \"num_outliers\" is an integer that represents the number of outliers detected, and \"index_and_zscore\" is a list of tuples, where each tuple consists of an integer (the index of the outlier in the dataset) and a float (the Z-score of the outlier, rounded to two decimal places).}\n\n\n\\Question{Transform the \"Time\" column from the format HH:MM:SS to a datetime format.}{Comprehensive Data Preprocessing}\n\\Constraints{Transform the \"Time\" column to pandas datetime format. For each entry, extract the hour, minute, and second.}\n\\Format{@hours[hour,...]\n@minutes[minute,...]\n@seconds[second,...]\nwhere \"hours\", \"minutes\", and \"seconds\" are lists of integers that represent the hours, minutes, and seconds extracted from each entry in the \"Time\" column, respectively.}\n\n\n\\Question{Train a regression model to predict the \"Close\" price based on the \"Open\", \"High\", \"Low\", and \"Volume\" columns. Evaluate the model's performance using Mean Absolute Error (MAE) and Root Mean Squared Error (RMSE).}{Machine Learning}\n\\Constraints{Split the dataset into a training set (80% of entries) and a test set (remaining 20% of entries). Use the Scikit-learn library to train the model and calculate performance metrics.}\n\\Format{@mae[mae]\n@rmse[rmse]\nwhere \"mae\" is a number that represents the Mean Absolute Error, rounded to two decimal places, and \"rmse\" is a number, rounded to two decimal places, that represents the Root Mean Squared Error.}\n\n\n\\Question{Perform data cleaning on the \"Volume\" column by removing any duplicate entries and ensuring data accuracy and consistency. Then, calculate the correlation coefficient between the \"Open\" and \"Volume\" columns.", "concepts": ["Comprehensive Data Preprocessing", "Correlation Analysis"], "constraints": "For data cleaning, you must remove entries where both the \"Open\" and \"Volume\" values are identical to the previous entry. Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between \"Open\" and \"Volume\".", "format": "@cleaned_data_entries[number_of_entries] @correlation_coefficient[coefficient_value], where \"number_of_entries\" is the number of entries remaining after cleaning, \"coefficient_value\" is a number between -1 and 1, rounded to two decimal places.", "file_name": "random_stock_data.csv"}
{"id": 647, "question": "Create a new feature called \"Price Range\" by calculating the difference between the \"High\" and \"Low\" values for each entry. Then, determine if the \"Price Range\" follows a normal distribution.", "concepts": ["Feature Engineering", "Distribution Analysis"], "constraints": "Calculate \"Price Range\" for each row by subtracting the \"Low\" value from the \"High\" value. Test the normality of the resulting column using the Shapiro-Wilk test. Consider the data to follow a normal distribution if the p-value is greater than 0.05.", "format": "@price_range_mean[mean_value] @price_range_stddev[stddev_value] @price_range_p_value[p_value] @is_normal[str], where \"mean_value\" and \"stddev_value\" are the mean and standard deviation of \"Price Range\", rounded to two decimal places, \"p_value\" is a number between 0 and 1, rounded to four decimal places, and \"is_normal\" is a string that can be either \"yes\" or \"no\" based on the Shapiro-Wilk test result.", "file_name": "random_stock_data.csv"}
{"id": 649, "question": "1. Calculate the mean and standard deviation of the X-coordinate column.", "concepts": ["Summary Statistics"], "constraints": "Use built-in Python functions to compute the mean and standard deviation, and round these values to three decimal places.", "format": "@mean_x[mean] @std_dev_x[standard_deviation] where \"mean\" and \"standard_deviation\" are decimal numbers rounded to three decimal places.", "file_name": "DES=+2006261.csv"}
{"id": 650, "question": "2. Is there any correlation between the X-coordinate and Y-coordinate columns? If so, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Use the Pearson Correlation Coefficient to find the correlation between the X and Y coordinates. Round the calculated correlation coefficient to three decimal places. If the absolute correlation coefficient is less than 0.05, assume the correlation is negligible and consider the correlation value as zero.", "format": "@correlation_coefficient[correlation_coefficient_value] where \"correlation_coefficient_value\" is a decimal number between -1 and 1, rounded to three decimal places.", "file_name": "DES=+2006261.csv"}
{"id": 651, "question": "3. Are there any outliers in the Z-coordinate column? If yes, how many outliers are there based on the quartile range method with a threshold of 1.5?", "concepts": ["Outlier Detection"], "constraints": "Calculate the outliers using the interquartile range (IQR) method, where outliers are defined as observations that fall below Q1 - 1.5*IQR or above Q3 + 1.5*IQR. Do not remove any data while performing the outlier calculation.", "format": "@outlier_count[outlier_number] where \"outlier_number\" is an integer representing the number of outliers in the data.", "file_name": "DES=+2006261.csv"}
{"id": 652, "question": "1. Perform a distribution analysis on the X-coordinate column. Determine if the data follows a normal distribution and provide a justification. Use a significance level (alpha) of 0.05 for the normality test. If the p-value is less than 0.05, conclude that the data does not follow a normal distribution. If the p-value is greater than or equal to 0.05, conclude that the data does follow a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Use Python's Scipy library's normaltest function for the normality test. Use a significance level (alpha) of 0.05 for the test.", "format": "@normality_test_p_value[a_number] where \"a_number\" is a number between 0 and 1, rounded to four decimal places. If the p-value is less than 0.05, output @normal_distribution[False], else output @normal_distribution[True].", "file_name": "DES=+2006261.csv"}
{"id": 654, "question": "3. Use feature engineering to create a new feature based on the X, Y, and Z coordinates. Calculate the Euclidean distance from the origin (0, 0, 0) for each entry in the dataset. Add the new feature as a column and provide the updated dataset. Rename the new column as 'distance_from_origin'.", "concepts": ["Feature Engineering"], "constraints": "Use Python's numpy library's sqrt and sum functions to calculate the Euclidean distance.", "format": "@distance_data_csv_file[distance_data.csv] where \"distance_data.csv\" is a CSV file containing the updated dataset with a new column 'distance_from_origin'.", "file_name": "DES=+2006261.csv"}
{"id": 655, "question": "1. Perform a correlation analysis on the X, Y, and Z coordinate columns. Calculate the Pearson correlation coefficients between the X and Y coordinates, and between the X and Z coordinates.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the correlation coefficient (r) to assess the strength and direction of the linear relationship between the pairs of variables.\nReport the correlation coefficients for both pairs.", "format": "@correlation_XY[r_value_XY]\n@correlation_XZ[r_value_XZ]\nwhere \"r_value_XY\" and \"r_value_XZ\" are numbers between -1 and 1, rounded to two decimal places.", "file_name": "DES=+2006261.csv"}
{"id": 656, "question": "3. Perform an outlier analysis on the X-coordinate column using the Z-score method. Identify any outliers based on a threshold of 3 standard deviations from the mean. Then, remove the outliers from the dataset and calculate the new mean and standard deviation of the X-coordinate column.", "concepts": ["Outlier Detection", "Summary Statistics"], "constraints": "Calculate Z-scores for each value in the X-coordinate column.\nIdentify outliers based on a threshold of Z-score greater than 3 or less than -3.\nRemove the identified outliers from the dataset.\nCalculate the new mean and standard deviation for the updated X-coordinate column.\nReport the number of identified outliers, the new mean and the new standard deviation.", "format": "@number_of_outliers[number_of_outliers]\n@new_mean[new_mean_value]\n@new_standard_deviation[new_sd_value]\nwhere \"number_of_outliers\" is an integer.\nwhere \"new_mean_value\" and \"new_sd_value\" are numbers rounded to two decimal places.", "file_name": "DES=+2006261.csv"}
{"id": 657, "question": "Calculate the mean, median, and standard deviation of the 'Close' column.", "concepts": ["Summary Statistics"], "constraints": "Using pandas library in Python, ignore the missing values, and round the results to 2 decimal places.", "format": "@mean_close[mean], @median_close[median], @std_close[std_deviation] where \"mean\", \"median\", and \"std_deviation\" are decimal numbers representing the mean, median, and standard deviation of the 'Close' column, respectively, rounded to two decimal places.", "file_name": "YAHOO-BTC_USD_D.csv"}
{"id": 658, "question": "Check if the 'Volume' column adheres to a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Using numpy and scipy libraries in Python, ignore the missing values, perform a Kolmogorov-Smirnov test with a significance level (alpha) of 0.05 where if the p-value is less than 0.05, the 'Volume' does not adhere to normal distribution. If the p-value is greater than or equal to 0.05, the 'Volume' adheres to normal distribution.", "format": "@result_ks_test[result] where \"result\" is a string that can either be \"normal\" or \"not_normal\" based on the conditions specified in the constraints.", "file_name": "YAHOO-BTC_USD_D.csv"}
{"id": 659, "question": "Find the correlation between the 'High' and 'Low' columns.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient, ignore the missing values, and round the result to 2 decimal places.", "format": "@correlation_high_low[correlation] where \"correlation\" is a decimal number between -1 and 1, representing the Pearson correlation coefficient between 'High' and 'Low' columns, rounded to two decimal places.", "file_name": "YAHOO-BTC_USD_D.csv"}
{"id": 662, "question": "Perform feature engineering by creating a new column called 'Price Change' that represents the difference between the 'Close' and 'Open' prices for each day. Calculate the median and standard deviation of the 'Price Change' column.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Create the 'Price Change' column by subtracting the 'Open' column from the 'Close' column for each observation. Calculate the median and standard deviation by using the corresponding functions in Python's 'statistics' module.", "format": "@median_price_change[median_price_change] @stddev_price_change[stddev_price_change] where \"median_price_change\" is the median of the 'Price Change' column, rounded to two decimal places. \"stddev_price_change\" is the standard deviation of the 'Price Change' column, rounded to two decimal places.", "file_name": "YAHOO-BTC_USD_D.csv"}
{"id": 663, "question": "Create a scatter plot of the 'High' and 'Low' columns to visualize the relationship between the highest and lowest prices for each day. Calculate the Pearson correlation coefficient between these two columns.", "concepts": ["Distribution Analysis", "Correlation Analysis"], "constraints": "Constraints:\n1. Use the Pearson method to calculate the correlation coefficient.\n2. Round the correlation coefficient to two decimal places.\n3. Do not consider any missing values in the data while calculating the correlation.", "format": "Requires output:\n@correlation_coefficient[correlation_value]\nwhere \"correlation_value\" is a number between -1 and 1, rounded to two decimal places.", "file_name": "YAHOO-BTC_USD_D.csv"}
{"id": 665, "question": "Perform data preprocessing by filling the missing values with the mean values of their respective columns. After that, create a new column called 'Price Category' that categorizes the 'Close' prices into 'High', 'Medium', and 'Low'. 'High' is represented by 'Close' prices that are greater than or equal to the 75th percentile of the 'Close' column data; 'Medium' is represented by 'Close' prices that are between the 25th to 75th percentile; 'Low' is represented by 'Close' prices that are less than or equal to the 25th percentile. Calculate the count and proportion of each category in the dataset.", "concepts": ["Comprehensive Data Preprocessing", "Feature Engineering", "Summary Statistics"], "constraints": "Constraints:\n1. Fill missing values using the mean of their respective columns.\n2. Define the three categories (High, Medium, Low) based on the percentiles as specified.\n3. Calculate the count and proportion of each category up to two decimal places.", "format": "Requires output:\n@high_count[high_count] @high_proportion[high_proportion]\n@medium_count[medium_count] @medium_proportion[medium_proportion]\n@low_count[low_count] @low_proportion[low_proportion]\nwhere \"high_count\", \"medium_count\", and \"low_count\" are positive integers.\nwhere \"high_proportion\", \"medium_proportion\", and \"low_proportion\" are a number between 0 and 1, rounded to two decimal places.", "file_name": "YAHOO-BTC_USD_D.csv"}
{"id": 666, "question": "Calculate the mean and standard deviation of the MedianHouseValue column in the provided dataset.", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean and standard deviation to four decimal places using built-in Python statistical functions.", "format": "@mean_value[mean], @std_dev[std_dev] where \"mean\" and \"std_dev\" are values rounded to four decimal places.", "file_name": "my_test_01.csv"}
{"id": 667, "question": "Check if the MedInc column adheres to a normal distribution in the provided dataset.", "concepts": ["Distribution Analysis"], "constraints": "Perform a Shapiro-Wilk test at a significance level (alpha) of 0.05 to assess normality of the MedInc column. Report the p-value associated with the normality test. If the p-value is greater than 0.05, state that the data is normally distributed. If the p-value is less than or equal to 0.05, state that the data is not normally distributed.", "format": "@p_value[p_value], @distribution_type[distribution_type] where \"p_value\" is a number between 0 and 1, rounded to four decimal places, and \"distribution_type\" is a string that can either be \"normal\" or \"not normal\" based on the conditions specified in the constraints.", "file_name": "my_test_01.csv"}
{"id": 668, "question": "Calculate the correlation coefficient between the HouseAge and MedianHouseValue columns in the provided dataset.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient to assess the strength and direction of the linear relationship between HouseAge and MedianHouseValue. Report the p-value associated with the correlation test with a significance level of 0.05. Indicate whether or not there is a significant correlation based on the p-value.", "format": "@correlation_coefficient[r_value], @p_value[p_value], @significant_correlation[significant_correlation] where \"r_value\" is a number between -1 and 1, rounded to two decimal places; \"p_value\" is a number between 0 and 1, rounded to four decimal places; \"significant_correlation\" is a boolean value indicating whether there is a significant correlation (true) or not (false) based on the conditions specified in the constraints.", "file_name": "my_test_01.csv"}
{"id": 669, "question": "Identify and remove any outliers in the MedInc column of the provided dataset using the IQR method. Then calculate the mean and standard deviation of the cleaned MedInc column.", "concepts": ["Outlier Detection", "Summary Statistics"], "constraints": "Identify an outlier as any value that falls below Q1 - 1.5 * IQR or above Q3 + 1.5 * IQR, where Q1 and Q3 are the first and third quartiles, respectively, and IQR is the interquartile range (Q3 - Q1). Calculate the mean and standard deviation to two decimal places.", "format": "@mean[mean_value] where \"mean_value\" is a float rounded to two decimal places. @standard_deviation[standard_deviation_value] where \"standard_deviation_value\" is a float rounded to two decimal places.", "file_name": "my_test_01.csv"}
{"id": 671, "question": "Build a machine learning model to predict the MedianHouseValue based on the following features:\n1. MedInc\n2. AveRooms\n3. Population\n4. Latitude\n5. Longitude\nSplit the dataset into training and testing sets, train the model using linear regression, and evaluate its performance using mean squared error (MSE).", "concepts": ["Machine Learning"], "constraints": "Split the dataset into 70% for training and 30% for testing. Use linear regression for the machine learning model. Calculate the MSE to three decimal places.", "format": "@mse[mse_value] where \"mse_value\" is a float rounded to three decimal places.", "file_name": "my_test_01.csv"}
{"id": 673, "question": "Apply comprehensive data preprocessing on the dataset by following these steps:\n1. Replace any missing values in the MedInc column with the mean value.\n2. Standardize the values in the AveOccup column using z-scores.\n3. Create a new feature called \"RoomsPerPerson\" by dividing the AveRooms column by the Population column.\n4. Calculate the Pearson correlation coefficient between the MedianHouseValue and RoomsPerPerson columns.\n5. Finally, calculate the mean and standard deviation of the MedianHouseValue column.", "concepts": ["Comprehensive Data Preprocessing", "Feature Engineering", "Correlation Analysis", "Summary Statistics"], "constraints": "Use sklearn's StandardScaler for standardization. Use numpy to calculate the mean and standard deviation. Round all output to four decimal places.", "format": "@mean_value[mean_MedianHouseValue] \n@standard_deviation[stddev_MedianHouseValue] \n@pearson_coefficient[correlation_coefficient] where \"mean_MedianHouseValue\" and \"stddev_MedianHouseValue\" are floats representing the mean and standard deviation of the MedianHouseValue column rounded to four decimal places. \"correlation_coefficient\" is a float rounded to four decimal places, representing the correlation coefficient between the MedianHouseValue and RoomsPerPerson columns.", "file_name": "my_test_01.csv"}
{"id": 674, "question": "Build a machine learning model to predict the MedianHouseValue based on the following features:\n1. MedInc\n2. AveRooms\n3. HouseAge\n4. Latitude\n5. Longitude\nPerform the following steps:\n1. Split the dataset into training and testing sets, where 70% of the dataset is used for training and 30% for testing. Set the random_state as 42 for reproducibility.\n2. Preprocess the data by standardizing the numerical columns (MedInc, AveRooms, HouseAge, Latitude, Longitude).\n3. Train a decision tree regression model on the training set, setting the max_depth to 5.\n4. Evaluate the model's performance using mean absolute error (MAE) on the testing set.\n5. Finally, calculate the Pearson correlation coefficient between the predicted and actual MedianHouseValue values on the testing set.", "concepts": ["Machine Learning", "Comprehensive Data Preprocessing", "Correlation Analysis"], "constraints": "Use the sklearn library for splitting the dataset, preprocessing, training the model, and calculation of MAE. Set the random_state to 42 when splitting the dataset. Use the Pearson method to compute the correlation coefficient. Round all output to four decimal places.", "format": "@mean_absolute_error[mae_value] \n@pearson_coefficient[correlation_coefficient] where \"mae_value\" is a float representing the MAE on the testing set rounded to four decimal places, and \"correlation_coefficient\" is a float rounded to four decimal places representing the correlation coefficient between predicted and actual MedianHouseValue values on the testing set.", "file_name": "my_test_01.csv"}
{"id": 683, "question": "1. What is the mean temperature recorded in the dataset?", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean temperature to two decimal places. No missing values in the temperature data.", "format": "@mean_temperature[value], where \"value\" is a number representing the mean temperature, rounded to two decimal places.", "file_name": "ravenna_250715.csv"}
{"id": 684, "question": "2. Does the humidity level in the dataset adhere to a normal distribution?", "concepts": ["Distribution Analysis"], "constraints": "Use the Shapiro-Wilk test with a significance level (alpha) of 0.05 to determine if the distribution of the humidity level adheres to a normal distribution. Report the p-value associated with the test. If the p-value is greater than 0.05, it can be considered as normally distributed; otherwise, it is not.", "format": "@shapiro_p_value[value] @distribution_type[type], where \"value\" is a number representing the p-value from the Shapiro-Wilk test, rounded to four decimal places, and \"type\" is a string that can either be \"normal\" or \"not normal\" based on the p-value.", "file_name": "ravenna_250715.csv"}
{"id": 685, "question": "3. Is there a correlation between the atmospheric pressure and wind speed in the dataset?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between atmospheric pressure and wind speed. Assess the significance of the correlation using a two-tailed test with a significance level (alpha) of 0.05. Report the p-value associated with the correlation test. Consider the relationship to be significant if the p-value is less than 0.05.", "format": "@correlation_coefficient[r_value] @p_value[value] @relationship_significance[significance], where \"r_value\" is a number between -1 and 1, rounded to two decimal places, \"value\" is a number representing the p-value from the correlation test, rounded to four decimal places, and \"significance\" is a string that can either be \"significant\" or \"not significant\" based on the p-value.", "file_name": "ravenna_250715.csv"}
{"id": 688, "question": "3. Using feature engineering, create a new feature called \"time_of_day\" based on the \"dt\" column. The \"time_of_day\" feature should categorize the timestamp into morning (6:00 to 11:59), afternoon (12:00 to 17:59), evening (18:00 to 23:59), and night (0:00 to 5:59) (included). Provide the count of each category in the \"time_of_day\" column.", "concepts": ["Feature Engineering"], "constraints": "For each time of the day, include the first minute of each category and exclude the first minute of the next category. If there's multiple entry which belongs to the same minute, account them all into the corresponding category.", "format": "@morning[integer], @afternoon[integer], @evening[integer], @night[integer]", "file_name": "ravenna_250715.csv"}
{"id": 690, "question": "2. Perform outlier detection on the wind speed column using Z-scores. Identify the number of outliers and provide the values of the outliers. After removing the outliers, calculate the mean and standard deviation of the wind speed column.", "concepts": ["Outlier Detection", "Summary Statistics"], "constraints": "Identify outliers using Z-score method considering points that have Z-score greater than 3 or less than -3 as outliers. After outlier detection, remove these identified outliers from the dataset and calculate the mean and standard deviation of the wind speed column.", "format": "@number_of_outliers[integer] @mean_wind_speed[number, rounded to 2 decimal places] @std_deviation_wind_speed[number, rounded to 2 decimal places]", "file_name": "ravenna_250715.csv"}
{"id": 702, "question": "Check if the distribution of the EX5 column in the eqexp.csv file adheres to a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Use Shapiro-Wilk test to test normality. \nConsider the distribution to be normally distributed if the p-value is greater than 0.05.\nConsider the distribution to be not normally distributed if the p-value is less than or equal to 0.05.", "format": "@EX5_normality[p_value]\n@EX5_distribution[distribution_type]\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"distribution_type\" is a string that can either be \"normal\" or \"non_normal\" based on the conditions specified in the constraints.", "file_name": "eqexp.csv"}
{"id": 704, "question": "Identify any outliers in the EQ6 column of the eqexp.csv file using the Z-score method. Consider a data point to be an outlier if its Z-score is greater than 3.", "concepts": ["Outlier Detection"], "constraints": "Calculate the Z-scores for all values in the EQ6 column. Any value with a Z-score greater than 3 is considered an outlier.", "format": "@outlier_count[count] where \"count\" is the number of outliers in the EQ6 column.", "file_name": "eqexp.csv"}
{"id": 705, "question": "Perform comprehensive data preprocessing for the EQ1, EQ2, and EQ3 columns in the eqexp.csv file. The preprocessing steps that should be performed on these columns are normalization (scaling the data to have a mean of 0 and standard deviation of 1), and encoding categorical variables (transforming categorical variables into a format that can be used by machine learning algorithms).", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "Normalize the EQ1, EQ2, and EQ3 columns by ensuring that the mean is 0 and the standard deviation is 1. If any variables in these columns are categorical variables, encode them into a format that can be used by machine learning algorithms.", "format": "@normalized_mean[mean], @normalized_stddev[stddev], @encoded_category[coded_values] where \"mean\" and \"stddev\" are the mean and standard deviation of the normalized columns, rounded to 2 decimal places. \"coded_values\" is the list of unique values in the encoded categorical column, represented as a string of comma-separated values. If there are no categorical variables, \"coded_values\" should be \"None\".", "file_name": "eqexp.csv"}
{"id": 706, "question": "Create a new feature in the eqexp.csv file by calculating the average of the EQ1, EQ2, and EQ3 columns. The new feature should be named 'EQ123_avg'.", "concepts": ["Feature Engineering"], "constraints": "Create a new feature called 'EQ123_avg' by calculating the mean of the values in the EQ1, EQ2, and EQ3 columns. The newly created feature should be appended as the last column in the eqexp.csv dataset.", "format": "@new_feature_mean[mean] where \"mean\" is the mean of the new 'EQ123_avg' column, rounded to 2 decimal places.", "file_name": "eqexp.csv"}
{"id": 710, "question": "1. What is the mean number of wins in the \"JAMES LOGAN\" column?", "concepts": ["Summary Statistics"], "constraints": "Assume all values in the \"JAMES LOGAN\" column are numeric, and convert strings to numbers if necessary. Ignore any rows where \"JAMES LOGAN\" is missing or cannot be converted to a number. Use pandas `mean()` function to calculate the mean.", "format": "@mean_wins[mean]", "file_name": "Current_Logan.csv"}
{"id": 715, "question": "3. What is the percentage of missing values in the \"Unnamed: 8\" column?", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "The missing values are represented as NaN in pandas dataframe.", "format": "@missing_percentage[percentage], where \"percentage\" is a number between 0 and 100, representing the percentage of missing values in the column, rounded to two decimal places.", "file_name": "Current_Logan.csv"}
{"id": 716, "question": "1. Perform data preprocessing by dropping the rows where the \"Wins\" in the \"JAMES LOGAN\" column is missing, and calculate the mean and standard deviation of the remaining \"Wins\" values.", "concepts": ["Summary Statistics", "Comprehensive Data Preprocessing"], "constraints": "{\nExclude rows where \"Wins\" is missing or is a non-numeric value.\nConvert \"Wins\" to numeric values before calculations.\nCompute the mean and standard deviation to two decimal places.\n}", "format": "{\n@mean_wins[mean_wins]\n@stddev_wins[stddev_wins]\nwhere \"mean_wins\" and \"stddev_wins\" are numeric values rounded off to two decimal places.", "file_name": "Current_Logan.csv"}
{"id": 719, "question": "1. Calculate the mean and median of the 'mpg' column.", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean and median of the 'mpg' column without excluding any data. Round your results to two decimal places.", "format": "@mean_mpg[mean_value], @median_mpg[median_value] where 'mean_value' and 'median_value' are numbers rounded to two decimal places.", "file_name": "auto-mpg.csv"}
{"id": 721, "question": "3. Find the correlation coefficient between the 'mpg' and 'weight' columns.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between mpg and weight. Round r to two decimal places.", "format": "@correlation_coefficient[r_value] where 'r_value' is a number between -1 and 1, rounded to two decimal places.", "file_name": "auto-mpg.csv"}
{"id": 722, "question": "1. Identify the vehicle with the highest horsepower and provide its corresponding model year. Calculate the average horsepower along with the standard deviation for all vehicles within the same model year as this vehicle.", "concepts": ["Summary Statistics", "Comprehensive Data Preprocessing"], "constraints": "For the \"average horsepower\", calculate it using the arithmetic mean formula. Calculate the standard deviation using the population standard deviation formula, not the sample standard deviation formula. Round both measures to two decimal places.", "format": "@highest_horsepower_vehicle[vehicle_model_year]\n@average_horsepower[same_year_avg_horsepower]\n@standard_deviation[same_year_horsepower_std]\nwhere \"vehicle_model_year\" is an integer from 1900 to the current year. \"same_year_avg_horsepower\" and \"same_year_horsepower_std\" are numbers rounded to two decimal places.", "file_name": "auto-mpg.csv"}
{"id": 723, "question": "2. Generate a new feature called 'power-to-weight ratio' by dividing the horsepower by the weight for each vehicle. Calculate the mean and standard deviation of this new feature.", "concepts": ["Feature Engineering", "Summary Statistics"], "constraints": "Calculate the 'power-to-weight ratio' by dividing the horsepower by the weight for each vehicle, not the other way around. For the \"average power-to-weight ratio\", calculate it using the arithmetic mean formula. Calculate the standard deviation using the population standard deviation formula, not the sample standard deviation formula. Round both measures to two decimal places.", "format": "@mean_ratio[avg_power_weight_ratio]\n@std_ratio[power_weight_ratio_std]\nwhere \"avg_power_weight_ratio\" and \"power_weight_ratio_std\" are numbers rounded to two decimal places.", "file_name": "auto-mpg.csv"}
{"id": 724, "question": "3. Perform outlier detection on the 'acceleration' column using the Z-score method. Identify any outliers and remove them from the dataset. Recalculate the mean and standard deviation of the 'acceleration' column after removing the outliers.", "concepts": ["Outlier Detection", "Summary Statistics", "Comprehensive Data Preprocessing"], "constraints": "Consider observations as outliers if their Z-scores are outside of the -3 to 3 range. For the \"average acceleration\" after outlier removal, calculate it using the arithmetic mean formula. Calculate the standard deviation using the population standard deviation formula, not the sample standard deviation formula. Round both measures to two decimal places.", "format": "@mean_acceleration[avg_acceleration]\n@std_acceleration[acceleration_std]\nwhere \"avg_acceleration\" and \"acceleration_std\" are numbers rounded to two decimal places.", "file_name": "auto-mpg.csv"}
{"id": 725, "question": "1. Investigate the relationship between 'displacement' and 'mpg' by analyzing the distribution of 'mpg' for each unique value of 'displacement'. Calculate the mean and median 'mpg' for each of the three most common unique values of 'displacement'.", "concepts": ["Distribution Analysis", "Correlation Analysis"], "constraints": "{\n- Only consider the three unique 'displacement' values that occur most frequently in the dataset.\n- The 'mpg' means and medians must be calculated for each of these three values separately, with 'mpg' values only from rows with the corresponding 'displacement' value.\n- Results must be rounded to two decimal places.\n}", "format": "{\n@mean1[mean1], @median1[median1]\n@mean2[mean2], @median2[median2]\n@mean3[mean3], @median3[median3]\nwhere \"mean1\", \"median1\", \"mean2\", \"median2\", \"mean3\", \"median3\" are corresponding mean and median 'mpg' values for each of the top three 'displacement' values, respectively. Each value should be a float, rounded to two decimal places.", "file_name": "auto-mpg.csv"}
{"id": 726, "question": "2. Perform comprehensive data preprocessing on the 'horsepower' column. Handle any missing values by imputing them with the mean horsepower value. Then, transform the 'horsepower' column by applying a log transformation. Calculate the mean and standard deviation of the transformed 'horsepower' column.", "concepts": ["Comprehensive Data Preprocessing", "Feature Engineering", "Summary Statistics"], "constraints": "{\n- Handle missing values by imputing them with the mean 'horsepower'.\n- Log-transformation should be a natural logarithm (base e).\n- Mean and standard deviation should be calculated after the transformation and rounding to two decimal places.\n}", "format": "{\n@mean_transformed_horsepower[mean_transformed_horsepower]\n@stddev_transformed_horsepower[stddev_transformed_horsepower]\nwhere \"mean_transformed_horsepower\" is the mean of the transformed 'horsepower' and \"stddev_transformed_horsepower\" is the standard deviation of the transformed 'horsepower'. Each value should be a float, rounded to two decimal places.", "file_name": "auto-mpg.csv"}
{"id": 727, "question": "3. Use machine learning techniques to predict the 'mpg' of a vehicle based on its 'weight' and 'acceleration' features. Split the dataset into a training set and a testing set with the ratio of size 8:2. Train a linear regression model on the training set and evaluate its performance by calculating the mean squared error (MSE) on the testing set.", "concepts": ["Machine Learning", "Correlation Analysis"], "constraints": "{\n- Use the linear regression algorithm provided by the sklearn library in Python.\n- The dataset should be split into a training set and a testing set with the ratio 8:2 using a random_state of 42.\n- MSE should be calculated on the testing set only and rounding to two decimal places.\n}", "format": "{\n@test_mse[test_mse]\nwhere \"test_mse\" is the mean squared error of the testing set. The value should be a float, rounded to two decimal places.", "file_name": "auto-mpg.csv"}
{"id": 729, "question": "Does the distribution of GDP per capita adhere to a normal distribution?", "concepts": ["Distribution Analysis"], "constraints": "Use the scipy library's normaltest() function on the \"Gdppercap\" column. Consider the distribution to be normal if p-value is greater than 0.05.", "format": "@distribution_normality[distribution_type] where \"distribution_type\" is a string which is either \"normal\" if condition is met or \"not normal\" if otherwise.", "file_name": "gapminder_cleaned.csv"}
{"id": 730, "question": "Is there a correlation between population and GDP per capita for the recorded years and countries in the dataset?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient (pearson\u2019s r) between \"Pop\" and \"Gdppercap\" columns. Use the scipy library's pearsonr() function and consider the correlation to be significant if p-value is less than 0.05.", "format": "@correlation_coefficient[r_value]\n@p_value[p_value]\nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.", "file_name": "gapminder_cleaned.csv"}
{"id": 732, "question": "Perform comprehensive data preprocessing for the dataset by handling missing values in the life expectancy column. Choose an appropriate strategy and implement it using Python code.", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "Assume there are missing values in the life expectancy column.\nImpute missing values with the mean life expectancy of the same country.\nIf there are countries with all life expectancy values missing, replace missing values with the mean life expectancy of the entire dataset.", "format": "@number_of_missing_values_in_lifeexp_before[n_before]\n@number_of_missing_values_in_lifeexp_after[n_after]\nwhere \"n_before\" and \"n_after\" are integers representing the number of missing values in the life expectancy column before and after the imputation process.", "file_name": "gapminder_cleaned.csv"}
{"id": 733, "question": "Apply feature engineering techniques to create a new feature in the dataset that represents the GDP per capita in logarithmic scale (base 10). Implement this feature transformation using Python code.", "concepts": ["Feature Engineering"], "constraints": "Calculate the logarithm with base 10.\nWhile calculating the logarithm, assume all GDP per capita figures are positive.", "format": "@has_nan_values_in_new_feature[boolean]\n@new_feature_mean[mean]\n@new_feature_std[std]\nwhere \"boolean\" is True or False, indicating whether there are NaN values in the newly created feature.\nwhere \"mean\" is a number (rounded to 2 decimal places) representing the mean of the newly created feature.\nwhere \"std\" is a number (rounded to 2 decimal places) representing the standard deviation of the newly created feature.", "file_name": "gapminder_cleaned.csv"}
{"id": 734, "question": "Is there a correlation between life expectancy and GDP per capita for each continent? Perform correlation analysis for each continent separately and provide the correlation coefficients.", "concepts": ["Correlation Analysis", "Comprehensive Data Preprocessing"], "constraints": "Calculate the Pearson correlation coefficient (r) to assess the strength and direction of the linear relationship between life expectancy and GDP per capita for each continent. Assess the correlation significance using a two-tailed test with a significance level (alpha) of 0.05. Report the p-values associated with the correlation test. Consider the correlation significant if the p-value is less than 0.05 and the absolute value of r is greater than or equal to 0.5. Consider the correlation non-significant if the p-value is greater than or equal to 0.05.", "format": "For each continent:\n@continent_name[name]\n@correlation_coefficient[r_value]\n@p_value[p_value]\n@correlation_significance[significance]\nwhere \"name\" is the name of the continent.\nwhere \"r_value\" is a number between -1 and 1, rounded to two decimal places.\nwhere \"p_value\" is a number between 0 and 1, rounded to four decimal places.\nwhere \"significance\" is a string that can either be \"significant\" or \"non-significant\" based on the conditions specified in the constraints.", "file_name": "gapminder_cleaned.csv"}
{"id": 736, "question": "Create a new feature by combining the population and GDP per capita columns. Normalize this new feature to a range of [0, 1]. Then, conduct a distribution analysis on this normalized feature and determine if it adheres to a normal distribution.", "concepts": ["Feature Engineering", "Distribution Analysis"], "constraints": "Define the new feature as population multiplied by GDP per capita. Normalize this new feature by applying min-max scaling. Perform a Shapiro-Wilk test to determine if the normalized feature follows a normal distribution. Consider the data to follow a normal distribution if the p-value of the Shapiro-Wilk test is greater than 0.05.", "format": "@is_normal[is_normal]\nwhere \"is_normal\" is a string that can be either \"yes\" or \"no\", indicating whether the normalized feature follows a normal distribution.", "file_name": "gapminder_cleaned.csv"}
{"id": 737, "question": "Calculate the mean and standard deviation of the \"Income\" column in the Credit.csv file.", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean and standard deviation using built-in functions in Python's pandas library. Round the outputs to two decimal places.", "format": "@mean_income[mean_value], @std_dev_income[std_dev_value] where \"mean_value\" and \"std_dev_value\" are the calculated mean and standard deviation of the \"Income\" column, respectively. Both should be rounded to two decimal places.", "file_name": "Credit.csv"}
{"id": 738, "question": "Check if the distribution of the \"Age\" column in the Credit.csv file adheres to a normal distribution.", "concepts": ["Distribution Analysis"], "constraints": "Use the Shapiro-Wilk test from scipy.stats library to test for normality. Use a significance level (alpha) of 0.05. If the p-value is less than the significance level, declare that the distribution is not normal. Otherwise, declare that the distribution is normal.", "format": "@is_normal[is_normal] where \"is_normal\" is a string that can be either \"Normal\" or \"Not Normal\" based on the Shapiro-Wilk test result.", "file_name": "Credit.csv"}
{"id": 739, "question": "Determine the correlation coefficient between the \"Limit\" and \"Balance\" columns in the Credit.csv file.", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient to represent the correlation. Round the result to two decimal places.", "format": "@correlation_coefficient[correlation_value] where \"correlation_value\" is the calculated Pearson correlation coefficient between \"Limit\" and \"Balance\", rounded to two decimal places.", "file_name": "Credit.csv"}
{"id": 740, "question": "Identify any outliers in the \"Balance\" column of the Credit.csv file using the Z-score method.", "concepts": ["Outlier Detection", "Comprehensive Data Preprocessing"], "constraints": "Define an outlier to be any data point that falls more than 3 standard deviations from the mean. Use the formula Z = (X - \u03bc) / \u03c3 where X is a data point, \u03bc is the mean, and \u03c3 is the standard deviation.", "format": "@outliers[outliers_count], where \"outliers_count\" is an integer indicating the total number of outliers identified.", "file_name": "Credit.csv"}
{"id": 741, "question": "Create a new feature in the Credit.csv file by calculating the ratio of \"Balance\" to \"Limit\" for each individual.", "concepts": ["Feature Engineering", "Comprehensive Data Preprocessing"], "constraints": "Calculate the ratio as Balance / Limit. For any individual with a Limit of zero, their ratio should be defined as zero to avoid division by zero.", "format": "@addedfeature[ratio], where \"ratio\" refers to the newly created column containing the ratio of balance to limit for each individual, with a precision of two decimal places for each individual's ratio data.", "file_name": "Credit.csv"}
{"id": 743, "question": "Perform a comprehensive data preprocessing on the Credit.csv file by handling missing values in the \"Education\" column using imputation with the most frequent value, and normalizing the \"Income\" and \"Balance\" columns.", "concepts": ["Comprehensive Data Preprocessing", "Feature Engineering"], "constraints": "{\nFirst, no assumptions should be made about the presence of missing values in the Education column. Check first if there are any such values even though the scenario information states that there are none.\nFor missing value imputation, use the mode (most frequently occurring value) to fill the missing gaps in the Education column.\nFor normalization of \"Income\" and \"Balance\", use Min-Max normalization method whose calculation is given by: (X - min(X)) / (max(X) - min(X)) where X denotes a value from the respective column.\n}", "format": "{\n@education_mode[education_mode]\n@income_normalization[income_min_val, income_max_val, income_normalized_file_path]\n@balance_normalization[balance_min_val, balance_max_val, balance_normalized_file_path]\nwhere \"education_mode\" is the mode of the \"Education\" column, an integer.\nwhere \"income_min_val\" and \"income_max_val\" are the minimum and maximum values respectively of the \"Income\" column before normalization, rounded to two decimal places.\nwhere \"balance_min_val\" and \"balance_max_val\" are the minimum and maximum values respectively of the \"Balance\" column before normalization, rounded to two decimal places.\nwhere \"income_normalized_file_path\" is the file path for the CSV file with the normalized \"Income\" column.\nwhere \"balance_normalized_file_path\" is the file path for the CSV file with the normalized \"Balance\" column.", "file_name": "Credit.csv"}
{"id": 755, "question": "1. What is the mean value of the maximum temperature (TMAX_F) recorded in the dataset?", "concepts": ["Summary Statistics"], "constraints": "Calculate the mean (average) as the sum of all recorded values divided by the total number of observations.", "format": "@mean_TMAX_F[mean_temperature] where \"mean_temperature\" is a positive number rounded to two decimal places.", "file_name": "weather_data_1864.csv"}
{"id": 756, "question": "2. Is there a correlation between the maximum temperature (TMAX_F) and the observation values (obs_value)? If yes, what is the correlation coefficient?", "concepts": ["Correlation Analysis"], "constraints": "Calculate the Pearson correlation coefficient(r) to assess the strength and direction of the linear relationship between TMAX_F and obs_value. Conduct the test at a significance level (alpha) of 0.05. If the p-value is less than 0.05, report the p-value and r-value. If the p-value is greater than or equal to 0.05, report that there is no significant correlation.", "format": "@correlation_coefficient[r_value] @p_value[p_value] where \"r_value\" is a number between -1 and 1, rounded to two decimal places; \"p_value\" is a number between 0 and 1, rounded to four decimal places. If there is no significant correlation, please simply output @correlation_status[\"No significant correlation\"]", "file_name": "weather_data_1864.csv"}
{"id": 757, "question": "3. Are there any outliers in the observation values (obs_value) column? If yes, how many outliers are there using the interquartile range method?", "concepts": ["Outlier Detection"], "constraints": "Calculate the interquartile range (IQR) for obs_value. Any value that falls below Q1 - 1.5*IQR or above Q3 + 1.5*IQR is considered an outlier. Count the number of outliers according to this method.", "format": "@outlier_count[total_outlier] where \"total_outlier\" is an integer representing the number of outliers. If there are no outliers, output @outlier_status[\"No Outliers Detected\"]", "file_name": "weather_data_1864.csv"}
{"id": 759, "question": "5. Calculate the median and range of the maximum temperature (TMAX_F) for each type of observation (obs_type) recorded in the dataset. Are there any differences in the median and range between different observation types?", "concepts": ["Summary Statistics", "Distribution Analysis"], "constraints": "In your analysis:\n- Consider only two observation types: \"TMAX\" and \"TMIN\".\n- Report the median rounded to two decimal places.\n- Calculate the range as the difference between the maximum and minimum temperatures for each observation type.", "format": "@@median_tmax[\"median_TMAX\"]\n@median_tmin[\"median_TMIN\"]\n@range_tmax[\"range_TMAX\"]\n@range_tmin[\"range_TMIN\"]\n\nwhere \"median_TMAX\" and \"median_TMIN\" are the median temperatures for TMAX and TMIN observation types, respectively. They are numbers between -100 and 100, rounded to two decimal places.\nwhere \"range_TMAX\" and \"range_TMIN\" are the range of temperatures for TMAX and TMIN observation types, respectively. They are numbers greater than 0.", "file_name": "weather_data_1864.csv"}
{"id": 760, "question": "6. For each station, are there any missing values in the observation values (obs_value)? If yes, which station has the most missing values and how many missing values does it have?", "concepts": ["Comprehensive Data Preprocessing"], "constraints": "In your analysis:\n- Assume that missing values are represented as \"NaN\".\n- Calculate the number of missing values for each station.", "format": "@most_missing_station_name[\"station_name\"]\n@most_missing_station_count[num_missing_obs]\n\nwhere \"station_name\" is a string representing the name of the station with the most missing observation value.\nwhere \"num_missing_obs\" is a number greater than or equal to 0, representing the number of missing observation values for the station with the most missing values.", "file_name": "weather_data_1864.csv"}
